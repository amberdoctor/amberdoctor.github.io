var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.TRUSTED_SITE = true;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if(ctor.instance_) {
      return ctor.instance_
    }
    if(goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor
    }
    return ctor.instance_ = new ctor
  }
};
goog.instantiatedSingletons_ = [];
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if(doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if(isDeps) {
          return false
        }else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call((value));
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments))
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.getMsgWithFallback = function(a, b) {
  return a
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str))
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;")
    }
    if(str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;")
    }
    if(str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "\x26")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"\x26";
      case "lt":
        return"\x3c";
      case "gt":
        return"\x3e";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  })
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase()
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase()
  })
};
goog.string.parseInt = function(value) {
  if(isFinite(value)) {
    value = String(value)
  }
  if(goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10)
  }
  return NaN
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if(Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error)
  }else {
    this.stack = (new Error).stack || ""
  }
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
  return(value)
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if(f.call(opt_obj, element, index, arr)) {
      ++count
    }
  }, opt_obj);
  return count
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.toArray = function(object) {
  var length = object.length;
  if(length > 0) {
    var rv = new Array(length);
    for(var i = 0;i < length;i++) {
      rv[i] = object[i]
    }
    return rv
  }
  return[]
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element
  });
  return ret
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if(opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end
  }
  if(step * (end - start) < 0) {
    return[]
  }
  if(step > 0) {
    for(var i = start;i < end;i += step) {
      array.push(i)
    }
  }else {
    for(var i = start;i > end;i += step) {
      array.push(i)
    }
  }
  return array
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if(Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result)
  }
  return result
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj)
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if(opt_a2 != null) {
    for(var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i]
    }
  }
  return this
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = ""
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_], true)
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number"
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x)
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__$1 = x == null ? null : x;
  if(p[goog.typeOf(x__$1)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3941__auto__ = ty;
    if(cljs.core.truth_(and__3941__auto__)) {
      return ty.cljs$lang$type
    }else {
      return and__3941__auto__
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""))
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if(cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s
  }else {
    return[cljs.core.str(ty)].join("")
  }
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__16071__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__16071 = function(array, i, var_args) {
      var idxs = null;
      if(arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16071__delegate.call(this, array, i, idxs)
    };
    G__16071.cljs$lang$maxFixedArity = 2;
    G__16071.cljs$lang$applyTo = function(arglist__16072) {
      var array = cljs.core.first(arglist__16072);
      arglist__16072 = cljs.core.next(arglist__16072);
      var i = cljs.core.first(arglist__16072);
      var idxs = cljs.core.rest(arglist__16072);
      return G__16071__delegate(array, i, idxs)
    };
    G__16071.cljs$core$IFn$_invoke$arity$variadic = G__16071__delegate;
    return G__16071
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val
  };
  var aset__4 = function() {
    var G__16073__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv)
    };
    var G__16073 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if(arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__16073__delegate.call(this, array, idx, idx2, idxv)
    };
    G__16073.cljs$lang$maxFixedArity = 3;
    G__16073.cljs$lang$applyTo = function(arglist__16074) {
      var array = cljs.core.first(arglist__16074);
      arglist__16074 = cljs.core.next(arglist__16074);
      var idx = cljs.core.first(arglist__16074);
      arglist__16074 = cljs.core.next(arglist__16074);
      var idx2 = cljs.core.first(arglist__16074);
      var idxv = cljs.core.rest(arglist__16074);
      return G__16073__delegate(array, idx, idx2, idxv)
    };
    G__16073.cljs$core$IFn$_invoke$arity$variadic = G__16073__delegate;
    return G__16073
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset
}();
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array
}();
cljs.core.Fn = {};
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__3494__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__3494__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__3494__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__3494__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__3494__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__3494__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__3494__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__3494__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__3494__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__3494__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__3494__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__3494__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__3494__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__3494__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__3494__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__3494__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__3494__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__3494__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__3494__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__3494__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__3494__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._count[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._count["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._empty[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._empty["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._conj[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._conj["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__3494__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._nth[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._nth["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__3494__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._nth[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._nth["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._first[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._rest[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._rest["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._next[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._next["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3941__auto__ = o;
      if(and__3941__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__3494__auto__ = o == null ? null : o;
      return function() {
        var or__3943__auto__ = cljs.core._lookup[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._lookup["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3941__auto__ = o;
      if(and__3941__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__3494__auto__ = o == null ? null : o;
      return function() {
        var or__3943__auto__ = cljs.core._lookup[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._lookup["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._dissoc[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dissoc["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._key[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._key["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._val[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._val["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._disjoin[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._disjoin["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._peek[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._peek["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._pop[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pop["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_n[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_n["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__3494__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._deref[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._deref["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__3494__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._deref_with_timeout["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__3494__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._meta[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._meta["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__3494__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._with_meta[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._with_meta["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__3494__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._reduce[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._reduce["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__3494__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._reduce[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._reduce["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._kv_reduce[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._kv_reduce["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__3494__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._equiv[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._equiv["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__3494__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._hash[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._hash["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__3494__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._seq[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._seq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._rseq[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._rseq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._sorted_seq[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._sorted_seq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._sorted_seq_from["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._entry_key[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._entry_key["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._comparator[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._comparator["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IWriter = {};
cljs.core._write = function _write(writer, s) {
  if(function() {
    var and__3941__auto__ = writer;
    if(and__3941__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s)
  }else {
    var x__3494__auto__ = writer == null ? null : writer;
    return function() {
      var or__3943__auto__ = cljs.core._write[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._write["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s)
  }
};
cljs.core._flush = function _flush(writer) {
  if(function() {
    var and__3941__auto__ = writer;
    if(and__3941__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer)
  }else {
    var x__3494__auto__ = writer == null ? null : writer;
    return function() {
      var or__3943__auto__ = cljs.core._flush[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._flush["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer)
  }
};
cljs.core.IPrintWithWriter = {};
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts)
  }else {
    var x__3494__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._pr_writer[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pr_writer["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3941__auto__ = d;
    if(and__3941__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__3494__auto__ = d == null ? null : d;
    return function() {
      var or__3943__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._realized_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__3494__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._notify_watches[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._notify_watches["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__3494__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._add_watch[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._add_watch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__3494__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._remove_watch[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._remove_watch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._as_transient[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._as_transient["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__3494__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._conj_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__3494__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._persistent_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__3494__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__3494__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__3494__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__3494__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pop_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__3494__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__3494__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._compare[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._compare["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._drop_first[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._drop_first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_first[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_rest[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_rest["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__3494__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_next[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_next["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INamed = {};
cljs.core._name = function _name(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$INamed$_name$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x)
  }else {
    var x__3494__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._name[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._name["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._namespace = function _namespace(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x)
  }else {
    var x__3494__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._namespace[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._namespace["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x)
  }
};
goog.provide("cljs.core.StringBufferWriter");
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/StringBufferWriter")
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  return self__.sb.append(s)
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  return null
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb)
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("")
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name))
};
goog.provide("cljs.core.Symbol");
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/Symbol")
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  return cljs.core._write.call(null, writer, self__.str)
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  return self__.name
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  return self__.ns
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var h__3315__auto__ = self__._hash;
  if(!(h__3315__auto__ == null)) {
    return h__3315__auto__
  }else {
    var h__3315__auto____$1 = cljs.core.hash_symbol.call(null, sym);
    self__._hash = h__3315__auto____$1;
    return h__3315__auto____$1
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta)
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  return self__._meta
};
cljs.core.Symbol.prototype.call = function() {
  var G__16076 = null;
  var G__16076__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null)
  };
  var G__16076__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found)
  };
  G__16076 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16076__2.call(this, self__, coll);
      case 3:
        return G__16076__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__16076
}();
cljs.core.Symbol.prototype.apply = function(self__, args16075) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args16075.slice()))
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  if(other instanceof cljs.core.Symbol) {
    return self__.str === other.str
  }else {
    return false
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta)
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(name instanceof cljs.core.Symbol) {
      return name
    }else {
      return symbol.call(null, null, name)
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null)
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol
}();
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__16078 = coll;
      if(G__16078) {
        if(function() {
          var or__3943__auto__ = G__16078.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__16078.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._seq.call(null, coll)
    }else {
      if(coll instanceof Array) {
        if(coll.length === 0) {
          return null
        }else {
          return new cljs.core.IndexedSeq(coll, 0)
        }
      }else {
        if(typeof coll === "string") {
          if(coll.length === 0) {
            return null
          }else {
            return new cljs.core.IndexedSeq(coll, 0)
          }
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__16080 = coll;
      if(G__16080) {
        if(function() {
          var or__3943__auto__ = G__16080.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__16080.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(s == null) {
        return null
      }else {
        return cljs.core._first.call(null, s)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__16082 = coll;
      if(G__16082) {
        if(function() {
          var or__3943__auto__ = G__16082.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__16082.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(!(s == null)) {
        return cljs.core._rest.call(null, s)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__16084 = coll;
      if(G__16084) {
        if(function() {
          var or__3943__auto__ = G__16084.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__16084.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3943__auto__ = x === y;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__16085__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__16086 = y;
            var G__16087 = cljs.core.first.call(null, more);
            var G__16088 = cljs.core.next.call(null, more);
            x = G__16086;
            y = G__16087;
            more = G__16088;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__16085 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16085__delegate.call(this, x, y, more)
    };
    G__16085.cljs$lang$maxFixedArity = 2;
    G__16085.cljs$lang$applyTo = function(arglist__16089) {
      var x = cljs.core.first(arglist__16089);
      arglist__16089 = cljs.core.next(arglist__16089);
      var y = cljs.core.first(arglist__16089);
      var more = cljs.core.rest(arglist__16089);
      return G__16085__delegate(x, y, more)
    };
    G__16085.cljs$core$IFn$_invoke$arity$variadic = G__16085__delegate;
    return G__16085
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_
}();
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.IKVReduce["null"] = true;
cljs.core._kv_reduce["null"] = function(_, f, init) {
  return init
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3941__auto__ = other instanceof Date;
  if(and__3941__auto__) {
    return o.toString() === other.toString()
  }else {
    return and__3941__auto__
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return Math.floor(o) % 2147483647
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
goog.provide("cljs.core.Reduced");
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  return self__.val
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if(cnt === 0) {
      return f.call(null)
    }else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__16090 = nval;
            var G__16091 = n + 1;
            val = G__16090;
            n = G__16091;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__16092 = nval;
          var G__16093 = n + 1;
          val__$1 = G__16092;
          n = G__16093;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__16094 = nval;
          var G__16095 = n + 1;
          val__$1 = G__16094;
          n = G__16095;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val = arr[0];
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__16096 = nval;
            var G__16097 = n + 1;
            val = G__16096;
            n = G__16097;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__16098 = nval;
          var G__16099 = n + 1;
          val__$1 = G__16098;
          n = G__16099;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__16100 = nval;
          var G__16101 = n + 1;
          val__$1 = G__16100;
          n = G__16101;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__16103 = x;
  if(G__16103) {
    if(function() {
      var or__3943__auto__ = G__16103.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__16103.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__16103.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__16103)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__16103)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__16105 = x;
  if(G__16105) {
    if(function() {
      var or__3943__auto__ = G__16105.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__16105.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__16105.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__16105)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__16105)
  }
};
goog.provide("cljs.core.IndexedSeq");
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199550
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var c = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c > 0) {
    return new cljs.core.RSeq(coll, c - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i)
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.arr.length - self__.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  return self__.arr[self__.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i)
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i)
    }else {
      return null
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq
}();
goog.provide("cljs.core.RSeq");
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, col)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, col)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.ci, self__.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta)
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn = cljs.core.next.call(null, s);
    if(!(sn == null)) {
      var G__16106 = sn;
      s = G__16106;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if(!(coll == null)) {
      return cljs.core._conj.call(null, coll, x)
    }else {
      return cljs.core.list.call(null, x)
    }
  };
  var conj__3 = function() {
    var G__16107__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__16108 = conj.call(null, coll, x);
          var G__16109 = cljs.core.first.call(null, xs);
          var G__16110 = cljs.core.next.call(null, xs);
          coll = G__16108;
          x = G__16109;
          xs = G__16110;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__16107 = function(coll, x, var_args) {
      var xs = null;
      if(arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16107__delegate.call(this, coll, x, xs)
    };
    G__16107.cljs$lang$maxFixedArity = 2;
    G__16107.cljs$lang$applyTo = function(arglist__16111) {
      var coll = cljs.core.first(arglist__16111);
      arglist__16111 = cljs.core.next(arglist__16111);
      var x = cljs.core.first(arglist__16111);
      var xs = cljs.core.rest(arglist__16111);
      return G__16107__delegate(coll, x, xs)
    };
    G__16107.cljs$core$IFn$_invoke$arity$variadic = G__16107__delegate;
    return G__16107
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s)
    }else {
      var G__16112 = cljs.core.next.call(null, s);
      var G__16113 = acc + 1;
      s = G__16112;
      acc = G__16113;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__16115 = coll;
      if(G__16115) {
        if(function() {
          var or__3943__auto__ = G__16115.cljs$lang$protocol_mask$partition0$ & 2;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__16115.cljs$core$ICounted$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._count.call(null, coll)
    }else {
      if(coll instanceof Array) {
        return coll.length
      }else {
        if(typeof coll === "string") {
          return coll.length
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  }else {
    return 0
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while(true) {
      if(coll == null) {
        throw new Error("Index out of bounds");
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            throw new Error("Index out of bounds");
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__16116 = cljs.core.next.call(null, coll);
              var G__16117 = n - 1;
              coll = G__16116;
              n = G__16117;
              continue
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while(true) {
      if(coll == null) {
        return not_found
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            return not_found
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__16118 = cljs.core.next.call(null, coll);
              var G__16119 = n - 1;
              var G__16120 = not_found;
              coll = G__16118;
              n = G__16119;
              not_found = G__16120;
              continue
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__16125 = coll;
        if(G__16125) {
          if(function() {
            var or__3943__auto__ = G__16125.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__16125.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return null
          }
        }else {
          if(typeof coll === "string") {
            if(n < coll.length) {
              return coll[n]
            }else {
              return null
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if(function() {
                  var G__16126 = coll;
                  if(G__16126) {
                    if(function() {
                      var or__3943__auto__ = G__16126.cljs$lang$protocol_mask$partition0$ & 64;
                      if(or__3943__auto__) {
                        return or__3943__auto__
                      }else {
                        return G__16126.cljs$core$ISeq$
                      }
                    }()) {
                      return true
                    }else {
                      if(!G__16126.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__16126)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__16126)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__16127 = coll;
        if(G__16127) {
          if(function() {
            var or__3943__auto__ = G__16127.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__16127.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return not_found
          }
        }else {
          if(typeof coll === "string") {
            if(n < coll.length) {
              return coll[n]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if(function() {
                  var G__16128 = coll;
                  if(G__16128) {
                    if(function() {
                      var or__3943__auto__ = G__16128.cljs$lang$protocol_mask$partition0$ & 64;
                      if(or__3943__auto__) {
                        return or__3943__auto__
                      }else {
                        return G__16128.cljs$core$ISeq$
                      }
                    }()) {
                      return true
                    }else {
                      if(!G__16128.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__16128)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__16128)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if(o == null) {
      return null
    }else {
      if(function() {
        var G__16131 = o;
        if(G__16131) {
          if(function() {
            var or__3943__auto__ = G__16131.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__16131.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return null
          }
        }else {
          if(typeof o === "string") {
            if(k < o.length) {
              return o[k]
            }else {
              return null
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if(!(o == null)) {
      if(function() {
        var G__16132 = o;
        if(G__16132) {
          if(function() {
            var or__3943__auto__ = G__16132.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__16132.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return not_found
          }
        }else {
          if(typeof o === "string") {
            if(k < o.length) {
              return o[k]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if(!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v)
    }else {
      return cljs.core.hash_map.call(null, k, v)
    }
  };
  var assoc__4 = function() {
    var G__16133__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__16134 = ret;
          var G__16135 = cljs.core.first.call(null, kvs);
          var G__16136 = cljs.core.second.call(null, kvs);
          var G__16137 = cljs.core.nnext.call(null, kvs);
          coll = G__16134;
          k = G__16135;
          v = G__16136;
          kvs = G__16137;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__16133 = function(coll, k, v, var_args) {
      var kvs = null;
      if(arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__16133__delegate.call(this, coll, k, v, kvs)
    };
    G__16133.cljs$lang$maxFixedArity = 3;
    G__16133.cljs$lang$applyTo = function(arglist__16138) {
      var coll = cljs.core.first(arglist__16138);
      arglist__16138 = cljs.core.next(arglist__16138);
      var k = cljs.core.first(arglist__16138);
      arglist__16138 = cljs.core.next(arglist__16138);
      var v = cljs.core.first(arglist__16138);
      var kvs = cljs.core.rest(arglist__16138);
      return G__16133__delegate(coll, k, v, kvs)
    };
    G__16133.cljs$core$IFn$_invoke$arity$variadic = G__16133__delegate;
    return G__16133
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__16139__delegate = function(coll, k, ks) {
      while(true) {
        var ret = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__16140 = ret;
          var G__16141 = cljs.core.first.call(null, ks);
          var G__16142 = cljs.core.next.call(null, ks);
          coll = G__16140;
          k = G__16141;
          ks = G__16142;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__16139 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16139__delegate.call(this, coll, k, ks)
    };
    G__16139.cljs$lang$maxFixedArity = 2;
    G__16139.cljs$lang$applyTo = function(arglist__16143) {
      var coll = cljs.core.first(arglist__16143);
      arglist__16143 = cljs.core.next(arglist__16143);
      var k = cljs.core.first(arglist__16143);
      var ks = cljs.core.rest(arglist__16143);
      return G__16139__delegate(coll, k, ks)
    };
    G__16139.cljs$core$IFn$_invoke$arity$variadic = G__16139__delegate;
    return G__16139
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3943__auto__ = goog.isFunction(f);
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var G__16145 = f;
    if(G__16145) {
      if(cljs.core.truth_(function() {
        var or__3943__auto____$1 = null;
        if(cljs.core.truth_(or__3943__auto____$1)) {
          return or__3943__auto____$1
        }else {
          return G__16145.cljs$core$Fn$
        }
      }())) {
        return true
      }else {
        if(!G__16145.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.Fn, G__16145)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.Fn, G__16145)
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if(function() {
    var and__3941__auto__ = cljs.core.fn_QMARK_.call(null, o);
    if(and__3941__auto__) {
      return!function() {
        var G__16151 = o;
        if(G__16151) {
          if(function() {
            var or__3943__auto__ = G__16151.cljs$lang$protocol_mask$partition0$ & 262144;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__16151.cljs$core$IWithMeta$
            }
          }()) {
            return true
          }else {
            if(!G__16151.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__16151)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__16151)
        }
      }()
    }else {
      return and__3941__auto__
    }
  }()) {
    return with_meta.call(null, function() {
      if(typeof cljs.core.t16152 !== "undefined") {
      }else {
        goog.provide("cljs.core.t16152");
        cljs.core.t16152 = function(meta, o, with_meta, meta16153) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta16153 = meta16153;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.t16152.cljs$lang$type = true;
        cljs.core.t16152.cljs$lang$ctorStr = "cljs.core/t16152";
        cljs.core.t16152.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
          return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/t16152")
        };
        cljs.core.t16152.prototype.call = function() {
          var G__16156__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args)
          };
          var G__16156 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if(arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
            }
            return G__16156__delegate.call(this, self__, args)
          };
          G__16156.cljs$lang$maxFixedArity = 1;
          G__16156.cljs$lang$applyTo = function(arglist__16157) {
            var self__ = cljs.core.first(arglist__16157);
            var args = cljs.core.rest(arglist__16157);
            return G__16156__delegate(self__, args)
          };
          G__16156.cljs$core$IFn$_invoke$arity$variadic = G__16156__delegate;
          return G__16156
        }();
        cljs.core.t16152.prototype.apply = function(self__, args16155) {
          var self__ = this;
          return self__.call.apply(self__, [self__].concat(args16155.slice()))
        };
        cljs.core.t16152.prototype.cljs$core$Fn$ = true;
        cljs.core.t16152.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16154) {
          var self__ = this;
          return self__.meta16153
        };
        cljs.core.t16152.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16154, meta16153__$1) {
          var self__ = this;
          return new cljs.core.t16152(self__.meta, self__.o, self__.with_meta, meta16153__$1)
        };
        cljs.core.__GT_t16152 = function __GT_t16152(meta__$1, o__$1, with_meta__$1, meta16153) {
          return new cljs.core.t16152(meta__$1, o__$1, with_meta__$1, meta16153)
        }
      }
      return new cljs.core.t16152(meta, o, with_meta, null)
    }(), meta)
  }else {
    return cljs.core._with_meta.call(null, o, meta)
  }
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__16159 = o;
    if(G__16159) {
      if(function() {
        var or__3943__auto__ = G__16159.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__16159.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__16159.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__16159)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__16159)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__16160__delegate = function(coll, k, ks) {
      while(true) {
        var ret = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__16161 = ret;
          var G__16162 = cljs.core.first.call(null, ks);
          var G__16163 = cljs.core.next.call(null, ks);
          coll = G__16161;
          k = G__16162;
          ks = G__16163;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__16160 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16160__delegate.call(this, coll, k, ks)
    };
    G__16160.cljs$lang$maxFixedArity = 2;
    G__16160.cljs$lang$applyTo = function(arglist__16164) {
      var coll = cljs.core.first(arglist__16164);
      arglist__16164 = cljs.core.next(arglist__16164);
      var k = cljs.core.first(arglist__16164);
      var ks = cljs.core.rest(arglist__16164);
      return G__16160__delegate(coll, k, ks)
    };
    G__16160.cljs$core$IFn$_invoke$arity$variadic = G__16160__delegate;
    return G__16160
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h = cljs.core.string_hash_cache[k];
  if(typeof h === "number") {
    return h
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3941__auto__ = goog.isString(o);
      if(and__3941__auto__) {
        return check_cache
      }else {
        return and__3941__auto__
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash.cljs$core$IFn$_invoke$arity$1 = hash__1;
  hash.cljs$core$IFn$_invoke$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  var or__3943__auto__ = coll == null;
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
  }
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__16166 = x;
    if(G__16166) {
      if(function() {
        var or__3943__auto__ = G__16166.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__16166.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__16166.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__16166)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__16166)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__16168 = x;
    if(G__16168) {
      if(function() {
        var or__3943__auto__ = G__16168.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__16168.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__16168.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__16168)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__16168)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__16170 = x;
  if(G__16170) {
    if(function() {
      var or__3943__auto__ = G__16170.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__16170.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__16170.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__16170)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__16170)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__16172 = x;
  if(G__16172) {
    if(function() {
      var or__3943__auto__ = G__16172.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__16172.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__16172.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__16172)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__16172)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__16174 = x;
  if(G__16174) {
    if(function() {
      var or__3943__auto__ = G__16174.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__16174.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__16174.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__16174)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__16174)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__16176 = x;
    if(G__16176) {
      if(function() {
        var or__3943__auto__ = G__16176.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__16176.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__16176.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__16176)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__16176)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__16178 = x;
  if(G__16178) {
    if(function() {
      var or__3943__auto__ = G__16178.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__16178.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__16178.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__16178)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__16178)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__16180 = x;
  if(G__16180) {
    if(function() {
      var or__3943__auto__ = G__16180.cljs$lang$protocol_mask$partition1$ & 512;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__16180.cljs$core$IChunkedSeq$
      }
    }()) {
      return true
    }else {
      return false
    }
  }else {
    return false
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__16181__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__16181 = function(var_args) {
      var keyvals = null;
      if(arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__16181__delegate.call(this, keyvals)
    };
    G__16181.cljs$lang$maxFixedArity = 0;
    G__16181.cljs$lang$applyTo = function(arglist__16182) {
      var keyvals = cljs.core.seq(arglist__16182);
      return G__16181__delegate(keyvals)
    };
    G__16181.cljs$core$IFn$_invoke$arity$variadic = G__16181__delegate;
    return G__16181
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key)
  });
  return keys
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__16183 = i__$1 + 1;
      var G__16184 = j__$1 + 1;
      var G__16185 = len__$1 - 1;
      i__$1 = G__16183;
      j__$1 = G__16184;
      len__$1 = G__16185;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__16186 = i__$1 - 1;
      var G__16187 = j__$1 - 1;
      var G__16188 = len__$1 - 1;
      i__$1 = G__16186;
      j__$1 = G__16187;
      len__$1 = G__16188;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__16190 = s;
    if(G__16190) {
      if(function() {
        var or__3943__auto__ = G__16190.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__16190.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__16190.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__16190)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__16190)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__16192 = s;
  if(G__16192) {
    if(function() {
      var or__3943__auto__ = G__16192.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__16192.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__16192.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__16192)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__16192)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3943__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var G__16194 = f;
    if(G__16194) {
      if(function() {
        var or__3943__auto____$1 = G__16194.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return G__16194.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__16194.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__16194)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__16194)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3941__auto__ = typeof n === "number";
  if(and__3941__auto__) {
    var and__3941__auto____$1 = !isNaN(n);
    if(and__3941__auto____$1) {
      var and__3941__auto____$2 = !(n === Infinity);
      if(and__3941__auto____$2) {
        return parseFloat(n) === parseInt(n, 10)
      }else {
        return and__3941__auto____$2
      }
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(function() {
    var and__3941__auto__ = !(coll == null);
    if(and__3941__auto__) {
      var and__3941__auto____$1 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3941__auto____$1) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3941__auto____$1
      }
    }else {
      return and__3941__auto__
    }
  }()) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core.get.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__16195__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, null, x, null], true);
        var xs = more;
        while(true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if(cljs.core.truth_(xs)) {
            if(cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false
            }else {
              var G__16196 = cljs.core.conj.call(null, s, x__$1);
              var G__16197 = etc;
              s = G__16196;
              xs = G__16197;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__16195 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16195__delegate.call(this, x, y, more)
    };
    G__16195.cljs$lang$maxFixedArity = 2;
    G__16195.cljs$lang$applyTo = function(arglist__16198) {
      var x = cljs.core.first(arglist__16198);
      arglist__16198 = cljs.core.next(arglist__16198);
      var y = cljs.core.first(arglist__16198);
      var more = cljs.core.rest(arglist__16198);
      return G__16195__delegate(x, y, more)
    };
    G__16195.cljs$core$IFn$_invoke$arity$variadic = G__16195__delegate;
    return G__16195
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__16200 = x;
            if(G__16200) {
              if(function() {
                var or__3943__auto__ = G__16200.cljs$lang$protocol_mask$partition1$ & 2048;
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return G__16200.cljs$core$IComparable$
                }
              }()) {
                return true
              }else {
                return false
              }
            }else {
              return false
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if(xl < yl) {
      return-1
    }else {
      if(xl > yl) {
        return 1
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3941__auto__ = d === 0;
        if(and__3941__auto__) {
          return n + 1 < len
        }else {
          return and__3941__auto__
        }
      }()) {
        var G__16201 = xs;
        var G__16202 = ys;
        var G__16203 = len;
        var G__16204 = n + 1;
        xs = G__16201;
        ys = G__16202;
        len = G__16203;
        n = G__16204;
        continue
      }else {
        return d
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if(typeof r === "number") {
        return r
      }else {
        if(cljs.core.truth_(r)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__16205 = nval;
          var G__16206 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__16205;
          coll__$1 = G__16206;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__16209 = coll;
      if(G__16209) {
        if(function() {
          var or__3943__auto__ = G__16209.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__16209.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f)
      }else {
        if(typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f)
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__16210 = coll;
      if(G__16210) {
        if(function() {
          var or__3943__auto__ = G__16210.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__16210.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val)
      }else {
        if(typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val)
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__16211__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__16211 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16211__delegate.call(this, x, y, more)
    };
    G__16211.cljs$lang$maxFixedArity = 2;
    G__16211.cljs$lang$applyTo = function(arglist__16212) {
      var x = cljs.core.first(arglist__16212);
      arglist__16212 = cljs.core.next(arglist__16212);
      var y = cljs.core.first(arglist__16212);
      var more = cljs.core.rest(arglist__16212);
      return G__16211__delegate(x, y, more)
    };
    G__16211.cljs$core$IFn$_invoke$arity$variadic = G__16211__delegate;
    return G__16211
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__16213__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__16213 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16213__delegate.call(this, x, y, more)
    };
    G__16213.cljs$lang$maxFixedArity = 2;
    G__16213.cljs$lang$applyTo = function(arglist__16214) {
      var x = cljs.core.first(arglist__16214);
      arglist__16214 = cljs.core.next(arglist__16214);
      var y = cljs.core.first(arglist__16214);
      var more = cljs.core.rest(arglist__16214);
      return G__16213__delegate(x, y, more)
    };
    G__16213.cljs$core$IFn$_invoke$arity$variadic = G__16213__delegate;
    return G__16213
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__16215__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__16215 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16215__delegate.call(this, x, y, more)
    };
    G__16215.cljs$lang$maxFixedArity = 2;
    G__16215.cljs$lang$applyTo = function(arglist__16216) {
      var x = cljs.core.first(arglist__16216);
      arglist__16216 = cljs.core.next(arglist__16216);
      var y = cljs.core.first(arglist__16216);
      var more = cljs.core.rest(arglist__16216);
      return G__16215__delegate(x, y, more)
    };
    G__16215.cljs$core$IFn$_invoke$arity$variadic = G__16215__delegate;
    return G__16215
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__16217__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__16217 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16217__delegate.call(this, x, y, more)
    };
    G__16217.cljs$lang$maxFixedArity = 2;
    G__16217.cljs$lang$applyTo = function(arglist__16218) {
      var x = cljs.core.first(arglist__16218);
      arglist__16218 = cljs.core.next(arglist__16218);
      var y = cljs.core.first(arglist__16218);
      var more = cljs.core.rest(arglist__16218);
      return G__16217__delegate(x, y, more)
    };
    G__16217.cljs$core$IFn$_invoke$arity$variadic = G__16217__delegate;
    return G__16217
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__16219__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__16220 = y;
            var G__16221 = cljs.core.first.call(null, more);
            var G__16222 = cljs.core.next.call(null, more);
            x = G__16220;
            y = G__16221;
            more = G__16222;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__16219 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16219__delegate.call(this, x, y, more)
    };
    G__16219.cljs$lang$maxFixedArity = 2;
    G__16219.cljs$lang$applyTo = function(arglist__16223) {
      var x = cljs.core.first(arglist__16223);
      arglist__16223 = cljs.core.next(arglist__16223);
      var y = cljs.core.first(arglist__16223);
      var more = cljs.core.rest(arglist__16223);
      return G__16219__delegate(x, y, more)
    };
    G__16219.cljs$core$IFn$_invoke$arity$variadic = G__16219__delegate;
    return G__16219
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__16224__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__16225 = y;
            var G__16226 = cljs.core.first.call(null, more);
            var G__16227 = cljs.core.next.call(null, more);
            x = G__16225;
            y = G__16226;
            more = G__16227;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__16224 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16224__delegate.call(this, x, y, more)
    };
    G__16224.cljs$lang$maxFixedArity = 2;
    G__16224.cljs$lang$applyTo = function(arglist__16228) {
      var x = cljs.core.first(arglist__16228);
      arglist__16228 = cljs.core.next(arglist__16228);
      var y = cljs.core.first(arglist__16228);
      var more = cljs.core.rest(arglist__16228);
      return G__16224__delegate(x, y, more)
    };
    G__16224.cljs$core$IFn$_invoke$arity$variadic = G__16224__delegate;
    return G__16224
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__16229__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__16230 = y;
            var G__16231 = cljs.core.first.call(null, more);
            var G__16232 = cljs.core.next.call(null, more);
            x = G__16230;
            y = G__16231;
            more = G__16232;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__16229 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16229__delegate.call(this, x, y, more)
    };
    G__16229.cljs$lang$maxFixedArity = 2;
    G__16229.cljs$lang$applyTo = function(arglist__16233) {
      var x = cljs.core.first(arglist__16233);
      arglist__16233 = cljs.core.next(arglist__16233);
      var y = cljs.core.first(arglist__16233);
      var more = cljs.core.rest(arglist__16233);
      return G__16229__delegate(x, y, more)
    };
    G__16229.cljs$core$IFn$_invoke$arity$variadic = G__16229__delegate;
    return G__16229
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__16234__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__16235 = y;
            var G__16236 = cljs.core.first.call(null, more);
            var G__16237 = cljs.core.next.call(null, more);
            x = G__16235;
            y = G__16236;
            more = G__16237;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__16234 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16234__delegate.call(this, x, y, more)
    };
    G__16234.cljs$lang$maxFixedArity = 2;
    G__16234.cljs$lang$applyTo = function(arglist__16238) {
      var x = cljs.core.first(arglist__16238);
      arglist__16238 = cljs.core.next(arglist__16238);
      var y = cljs.core.first(arglist__16238);
      var more = cljs.core.rest(arglist__16238);
      return G__16234__delegate(x, y, more)
    };
    G__16234.cljs$core$IFn$_invoke$arity$variadic = G__16234__delegate;
    return G__16234
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    var x__3216__auto__ = x;
    var y__3217__auto__ = y;
    return x__3216__auto__ > y__3217__auto__ ? x__3216__auto__ : y__3217__auto__
  };
  var max__3 = function() {
    var G__16239__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3216__auto__ = x;
        var y__3217__auto__ = y;
        return x__3216__auto__ > y__3217__auto__ ? x__3216__auto__ : y__3217__auto__
      }(), more)
    };
    var G__16239 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16239__delegate.call(this, x, y, more)
    };
    G__16239.cljs$lang$maxFixedArity = 2;
    G__16239.cljs$lang$applyTo = function(arglist__16240) {
      var x = cljs.core.first(arglist__16240);
      arglist__16240 = cljs.core.next(arglist__16240);
      var y = cljs.core.first(arglist__16240);
      var more = cljs.core.rest(arglist__16240);
      return G__16239__delegate(x, y, more)
    };
    G__16239.cljs$core$IFn$_invoke$arity$variadic = G__16239__delegate;
    return G__16239
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    var x__3223__auto__ = x;
    var y__3224__auto__ = y;
    return x__3223__auto__ < y__3224__auto__ ? x__3223__auto__ : y__3224__auto__
  };
  var min__3 = function() {
    var G__16241__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3223__auto__ = x;
        var y__3224__auto__ = y;
        return x__3223__auto__ < y__3224__auto__ ? x__3223__auto__ : y__3224__auto__
      }(), more)
    };
    var G__16241 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16241__delegate.call(this, x, y, more)
    };
    G__16241.cljs$lang$maxFixedArity = 2;
    G__16241.cljs$lang$applyTo = function(arglist__16242) {
      var x = cljs.core.first(arglist__16242);
      arglist__16242 = cljs.core.next(arglist__16242);
      var y = cljs.core.first(arglist__16242);
      var more = cljs.core.rest(arglist__16242);
      return G__16241__delegate(x, y, more)
    };
    G__16241.cljs$core$IFn$_invoke$arity$variadic = G__16241__delegate;
    return G__16241
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min
}();
cljs.core.byte$ = function byte$(x) {
  return x
};
cljs.core.char$ = function char$(x) {
  if(typeof x === "number") {
    return String.fromCharCode(x)
  }else {
    if(function() {
      var and__3941__auto__ = typeof x === "string";
      if(and__3941__auto__) {
        return x.length === 1
      }else {
        return and__3941__auto__
      }
    }()) {
      return x
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      }else {
        return null
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x
};
cljs.core.float$ = function float$(x) {
  return x
};
cljs.core.double$ = function double$(x) {
  return x
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0
  };
  var unchecked_add__1 = function(x) {
    return x
  };
  var unchecked_add__2 = function(x, y) {
    return x + y
  };
  var unchecked_add__3 = function() {
    var G__16243__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more)
    };
    var G__16243 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16243__delegate.call(this, x, y, more)
    };
    G__16243.cljs$lang$maxFixedArity = 2;
    G__16243.cljs$lang$applyTo = function(arglist__16244) {
      var x = cljs.core.first(arglist__16244);
      arglist__16244 = cljs.core.next(arglist__16244);
      var y = cljs.core.first(arglist__16244);
      var more = cljs.core.rest(arglist__16244);
      return G__16243__delegate(x, y, more)
    };
    G__16243.cljs$core$IFn$_invoke$arity$variadic = G__16243__delegate;
    return G__16243
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0
  };
  var unchecked_add_int__1 = function(x) {
    return x
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y
  };
  var unchecked_add_int__3 = function() {
    var G__16245__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more)
    };
    var G__16245 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16245__delegate.call(this, x, y, more)
    };
    G__16245.cljs$lang$maxFixedArity = 2;
    G__16245.cljs$lang$applyTo = function(arglist__16246) {
      var x = cljs.core.first(arglist__16246);
      arglist__16246 = cljs.core.next(arglist__16246);
      var y = cljs.core.first(arglist__16246);
      var more = cljs.core.rest(arglist__16246);
      return G__16245__delegate(x, y, more)
    };
    G__16245.cljs$core$IFn$_invoke$arity$variadic = G__16245__delegate;
    return G__16245
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x)
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y
  };
  var unchecked_divide_int__3 = function() {
    var G__16247__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more)
    };
    var G__16247 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16247__delegate.call(this, x, y, more)
    };
    G__16247.cljs$lang$maxFixedArity = 2;
    G__16247.cljs$lang$applyTo = function(arglist__16248) {
      var x = cljs.core.first(arglist__16248);
      arglist__16248 = cljs.core.next(arglist__16248);
      var y = cljs.core.first(arglist__16248);
      var more = cljs.core.rest(arglist__16248);
      return G__16247__delegate(x, y, more)
    };
    G__16247.cljs$core$IFn$_invoke$arity$variadic = G__16247__delegate;
    return G__16247
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1
  };
  var unchecked_multiply__1 = function(x) {
    return x
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply__3 = function() {
    var G__16249__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more)
    };
    var G__16249 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16249__delegate.call(this, x, y, more)
    };
    G__16249.cljs$lang$maxFixedArity = 2;
    G__16249.cljs$lang$applyTo = function(arglist__16250) {
      var x = cljs.core.first(arglist__16250);
      arglist__16250 = cljs.core.next(arglist__16250);
      var y = cljs.core.first(arglist__16250);
      var more = cljs.core.rest(arglist__16250);
      return G__16249__delegate(x, y, more)
    };
    G__16249.cljs$core$IFn$_invoke$arity$variadic = G__16249__delegate;
    return G__16249
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1
  };
  var unchecked_multiply_int__1 = function(x) {
    return x
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply_int__3 = function() {
    var G__16251__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more)
    };
    var G__16251 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16251__delegate.call(this, x, y, more)
    };
    G__16251.cljs$lang$maxFixedArity = 2;
    G__16251.cljs$lang$applyTo = function(arglist__16252) {
      var x = cljs.core.first(arglist__16252);
      arglist__16252 = cljs.core.next(arglist__16252);
      var y = cljs.core.first(arglist__16252);
      var more = cljs.core.rest(arglist__16252);
      return G__16251__delegate(x, y, more)
    };
    G__16251.cljs$core$IFn$_invoke$arity$variadic = G__16251__delegate;
    return G__16251
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n)
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract__3 = function() {
    var G__16253__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more)
    };
    var G__16253 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16253__delegate.call(this, x, y, more)
    };
    G__16253.cljs$lang$maxFixedArity = 2;
    G__16253.cljs$lang$applyTo = function(arglist__16254) {
      var x = cljs.core.first(arglist__16254);
      arglist__16254 = cljs.core.next(arglist__16254);
      var y = cljs.core.first(arglist__16254);
      var more = cljs.core.rest(arglist__16254);
      return G__16253__delegate(x, y, more)
    };
    G__16253.cljs$core$IFn$_invoke$arity$variadic = G__16253__delegate;
    return G__16253
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract_int__3 = function() {
    var G__16255__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more)
    };
    var G__16255 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16255__delegate.call(this, x, y, more)
    };
    G__16255.cljs$lang$maxFixedArity = 2;
    G__16255.cljs$lang$applyTo = function(arglist__16256) {
      var x = cljs.core.first(arglist__16256);
      arglist__16256 = cljs.core.next(arglist__16256);
      var y = cljs.core.first(arglist__16256);
      var more = cljs.core.rest(arglist__16256);
      return G__16255__delegate(x, y, more)
    };
    G__16255.cljs$core$IFn$_invoke$arity$variadic = G__16255__delegate;
    return G__16255
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.booleans = function booleans(x) {
  return x
};
cljs.core.bytes = function bytes(x) {
  return x
};
cljs.core.chars = function chars(x) {
  return x
};
cljs.core.shorts = function shorts(x) {
  return x
};
cljs.core.ints = function ints(x) {
  return x
};
cljs.core.floats = function floats(x) {
  return x
};
cljs.core.doubles = function doubles(x) {
  return x
};
cljs.core.longs = function longs(x) {
  return x
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d)
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__16257__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__16258 = y;
            var G__16259 = cljs.core.first.call(null, more);
            var G__16260 = cljs.core.next.call(null, more);
            x = G__16258;
            y = G__16259;
            more = G__16260;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__16257 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16257__delegate.call(this, x, y, more)
    };
    G__16257.cljs$lang$maxFixedArity = 2;
    G__16257.cljs$lang$applyTo = function(arglist__16261) {
      var x = cljs.core.first(arglist__16261);
      arglist__16261 = cljs.core.next(arglist__16261);
      var y = cljs.core.first(arglist__16261);
      var more = cljs.core.rest(arglist__16261);
      return G__16257__delegate(x, y, more)
    };
    G__16257.cljs$core$IFn$_invoke$arity$variadic = G__16257__delegate;
    return G__16257
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = xs;
      if(and__3941__auto__) {
        return n__$1 > 0
      }else {
        return and__3941__auto__
      }
    }())) {
      var G__16262 = n__$1 - 1;
      var G__16263 = cljs.core.next.call(null, xs);
      n__$1 = G__16262;
      xs = G__16263;
      continue
    }else {
      return xs
    }
    break
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(x == null) {
      return""
    }else {
      return x.toString()
    }
  };
  var str__2 = function() {
    var G__16264__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__16265 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__16266 = cljs.core.next.call(null, more);
            sb = G__16265;
            more = G__16266;
            continue
          }else {
            return sb.toString()
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__16264 = function(x, var_args) {
      var ys = null;
      if(arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__16264__delegate.call(this, x, ys)
    };
    G__16264.cljs$lang$maxFixedArity = 1;
    G__16264.cljs$lang$applyTo = function(arglist__16267) {
      var x = cljs.core.first(arglist__16267);
      var ys = cljs.core.rest(arglist__16267);
      return G__16264__delegate(x, ys)
    };
    G__16264.cljs$core$IFn$_invoke$arity$variadic = G__16264__delegate;
    return G__16264
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while(true) {
      if(xs == null) {
        return ys == null
      }else {
        if(ys == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__16268 = cljs.core.next.call(null, xs);
            var G__16269 = cljs.core.next.call(null, ys);
            xs = G__16268;
            ys = G__16269;
            continue
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__16270_SHARP_, p2__16271_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__16270_SHARP_, cljs.core.hash.call(null, p2__16271_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while(true) {
    if(s) {
      var e = cljs.core.first.call(null, s);
      var G__16272 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__16273 = cljs.core.next.call(null, s);
      h = G__16272;
      s = G__16273;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__16274 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__16275 = cljs.core.next.call(null, s__$1);
      h = G__16274;
      s__$1 = G__16275;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__16282_16288 = cljs.core.seq.call(null, fn_map);
  var chunk__16283_16289 = null;
  var count__16284_16290 = 0;
  var i__16285_16291 = 0;
  while(true) {
    if(i__16285_16291 < count__16284_16290) {
      var vec__16286_16292 = cljs.core._nth.call(null, chunk__16283_16289, i__16285_16291);
      var key_name_16293 = cljs.core.nth.call(null, vec__16286_16292, 0, null);
      var f_16294 = cljs.core.nth.call(null, vec__16286_16292, 1, null);
      var str_name_16295 = cljs.core.name.call(null, key_name_16293);
      obj[str_name_16295] = f_16294;
      var G__16296 = seq__16282_16288;
      var G__16297 = chunk__16283_16289;
      var G__16298 = count__16284_16290;
      var G__16299 = i__16285_16291 + 1;
      seq__16282_16288 = G__16296;
      chunk__16283_16289 = G__16297;
      count__16284_16290 = G__16298;
      i__16285_16291 = G__16299;
      continue
    }else {
      var temp__4092__auto___16300 = cljs.core.seq.call(null, seq__16282_16288);
      if(temp__4092__auto___16300) {
        var seq__16282_16301__$1 = temp__4092__auto___16300;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__16282_16301__$1)) {
          var c__3607__auto___16302 = cljs.core.chunk_first.call(null, seq__16282_16301__$1);
          var G__16303 = cljs.core.chunk_rest.call(null, seq__16282_16301__$1);
          var G__16304 = c__3607__auto___16302;
          var G__16305 = cljs.core.count.call(null, c__3607__auto___16302);
          var G__16306 = 0;
          seq__16282_16288 = G__16303;
          chunk__16283_16289 = G__16304;
          count__16284_16290 = G__16305;
          i__16285_16291 = G__16306;
          continue
        }else {
          var vec__16287_16307 = cljs.core.first.call(null, seq__16282_16301__$1);
          var key_name_16308 = cljs.core.nth.call(null, vec__16287_16307, 0, null);
          var f_16309 = cljs.core.nth.call(null, vec__16287_16307, 1, null);
          var str_name_16310 = cljs.core.name.call(null, key_name_16308);
          obj[str_name_16310] = f_16309;
          var G__16311 = cljs.core.next.call(null, seq__16282_16301__$1);
          var G__16312 = null;
          var G__16313 = 0;
          var G__16314 = 0;
          seq__16282_16288 = G__16311;
          chunk__16283_16289 = G__16312;
          count__16284_16290 = G__16313;
          i__16285_16291 = G__16314;
          continue
        }
      }else {
      }
    }
    break
  }
  return obj
};
goog.provide("cljs.core.List");
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937646
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3315__auto__ = self__.__hash;
  if(!(h__3315__auto__ == null)) {
    return h__3315__auto__
  }else {
    var h__3315__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3315__auto____$1;
    return h__3315__auto____$1
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.count === 1) {
    return null
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.List(self__.meta, o, coll, self__.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash)
};
goog.provide("cljs.core.EmptyList");
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937614
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.List(self__.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.EmptyList(meta__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta)
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__16316 = coll;
  if(G__16316) {
    if(function() {
      var or__3943__auto__ = G__16316.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__16316.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__16316.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__16316)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__16316)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while(true) {
        if(!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__16317 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__16317;
          continue
        }else {
          return arr
        }
        break
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while(true) {
      if(i > 0) {
        var G__16318 = i - 1;
        var G__16319 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__16318;
        r = G__16319;
        continue
      }else {
        return r
      }
      break
    }
  };
  var list = function(var_args) {
    var xs = null;
    if(arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return list__delegate.call(this, xs)
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__16320) {
    var xs = cljs.core.seq(arglist__16320);
    return list__delegate(xs)
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list
}();
goog.provide("cljs.core.Cons");
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65929452
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3315__auto__ = self__.__hash;
  if(!(h__3315__auto__ == null)) {
    return h__3315__auto__
  }else {
    var h__3315__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3315__auto____$1;
    return h__3315__auto____$1
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.rest == null) {
    return null
  }else {
    return cljs.core.seq.call(null, self__.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.Cons(null, o, coll, self__.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash)
};
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3943__auto__ = coll == null;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      var G__16322 = coll;
      if(G__16322) {
        if(function() {
          var or__3943__auto____$1 = G__16322.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            return G__16322.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__16324 = x;
  if(G__16324) {
    if(function() {
      var or__3943__auto__ = G__16324.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__16324.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__16324.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__16324)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__16324)
  }
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
goog.provide("cljs.core.Keyword");
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""))
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  return self__.name
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  return self__.ns
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  if(self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash
  }else {
    return self__._hash
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__16328 = null;
  var G__16328__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__16326 = coll;
        if(G__16326) {
          if(function() {
            var or__3943__auto__ = G__16326.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__16326.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__16326.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__16326)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__16326)
        }
      }()) {
        return cljs.core._lookup.call(null, coll, kw, null)
      }else {
        return null
      }
    }
  };
  var G__16328__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    if(coll == null) {
      return not_found
    }else {
      if(function() {
        var G__16327 = coll;
        if(G__16327) {
          if(function() {
            var or__3943__auto__ = G__16327.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__16327.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__16327.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__16327)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__16327)
        }
      }()) {
        return cljs.core._lookup.call(null, coll, kw, not_found)
      }else {
        return not_found
      }
    }
  };
  G__16328 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16328__2.call(this, self__, coll);
      case 3:
        return G__16328__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__16328
}();
cljs.core.Keyword.prototype.apply = function(self__, args16325) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args16325.slice()))
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  if(other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn
  }else {
    return false
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("")
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash)
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if(x === y) {
    return true
  }else {
    if(function() {
      var and__3941__auto__ = x instanceof cljs.core.Keyword;
      if(and__3941__auto__) {
        return y instanceof cljs.core.Keyword
      }else {
        return and__3941__auto__
      }
    }()) {
      return x.fqn === y.fqn
    }else {
      return false
    }
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(name instanceof cljs.core.Keyword) {
      return name
    }else {
      if(name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(null, cljs.core.name.call(null, name), cljs.core.name.call(null, name), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.Keyword(null, name, name, null)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null)
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword
}();
goog.provide("cljs.core.LazySeq");
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3315__auto__ = self__.__hash;
  if(!(h__3315__auto__ == null)) {
    return h__3315__auto__
  }else {
    var h__3315__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3315__auto____$1;
    return h__3315__auto____$1
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  coll.cljs$core$ISeqable$_seq$arity$1(coll);
  if(self__.s == null) {
    return null
  }else {
    return cljs.core.next.call(null, self__.s)
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if(self__.fn == null) {
    return self__.s
  }else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s
  }
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  coll.sval();
  if(self__.s == null) {
    return null
  }else {
    var ls = self__.s;
    while(true) {
      if(ls instanceof cljs.core.LazySeq) {
        var G__16329 = ls.sval();
        ls = G__16329;
        continue
      }else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s)
      }
      break
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  coll.cljs$core$ISeqable$_seq$arity$1(coll);
  if(self__.s == null) {
    return null
  }else {
    return cljs.core.first.call(null, self__.s)
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  coll.cljs$core$ISeqable$_seq$arity$1(coll);
  if(!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash)
};
goog.provide("cljs.core.ChunkBuffer");
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end)
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0)
};
goog.provide("cljs.core.ArrayChunk");
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  return self__.arr[self__.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = i >= 0;
    if(and__3941__auto__) {
      return i < self__.end - self__.off
    }else {
      return and__3941__auto__
    }
  }()) {
    return self__.arr[self__.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.end - self__.off
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end)
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk
}();
goog.provide("cljs.core.ChunkedCons");
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3315__auto__ = self__.__hash;
  if(!(h__3315__auto__ == null)) {
    return h__3315__auto__
  }else {
    var h__3315__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3315__auto____$1;
    return h__3315__auto____$1
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null)
  }else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if(more__$1 == null) {
      return null
    }else {
      return more__$1
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null)
  }else {
    if(self__.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return self__.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.more == null) {
    return null
  }else {
    return self__.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.more
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash)
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__16331 = s;
    if(G__16331) {
      if(function() {
        var or__3943__auto__ = G__16331.cljs$lang$protocol_mask$partition1$ & 1024;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__16331.cljs$core$IChunkedNext$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__16332 = cljs.core.next.call(null, s__$1);
      s__$1 = G__16332;
      continue
    }else {
      return ary
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_16333 = 0;
  var xs_16334 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs_16334) {
      ret[i_16333] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_16334));
      var G__16335 = i_16333 + 1;
      var G__16336 = cljs.core.next.call(null, xs_16334);
      i_16333 = G__16335;
      xs_16334 = G__16336;
      continue
    }else {
    }
    break
  }
  return ret
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__16337 = i + 1;
          var G__16338 = cljs.core.next.call(null, s__$1);
          i = G__16337;
          s__$1 = G__16338;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3654__auto___16339 = size;
      var i_16340 = 0;
      while(true) {
        if(i_16340 < n__3654__auto___16339) {
          a[i_16340] = init_val_or_seq;
          var G__16341 = i_16340 + 1;
          i_16340 = G__16341;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__16342 = i + 1;
          var G__16343 = cljs.core.next.call(null, s__$1);
          i = G__16342;
          s__$1 = G__16343;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3654__auto___16344 = size;
      var i_16345 = 0;
      while(true) {
        if(i_16345 < n__3654__auto___16344) {
          a[i_16345] = init_val_or_seq;
          var G__16346 = i_16345 + 1;
          i_16345 = G__16346;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__16347 = i + 1;
          var G__16348 = cljs.core.next.call(null, s__$1);
          i = G__16347;
          s__$1 = G__16348;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3654__auto___16349 = size;
      var i_16350 = 0;
      while(true) {
        if(i_16350 < n__3654__auto___16349) {
          a[i_16350] = init_val_or_seq;
          var G__16351 = i_16350 + 1;
          i_16350 = G__16351;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__16352 = i + 1;
          var G__16353 = cljs.core.next.call(null, s__$1);
          i = G__16352;
          s__$1 = G__16353;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3654__auto___16354 = size;
      var i_16355 = 0;
      while(true) {
        if(i_16355 < n__3654__auto___16354) {
          a[i_16355] = init_val_or_seq;
          var G__16356 = i_16355 + 1;
          i_16355 = G__16356;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = i > 0;
        if(and__3941__auto__) {
          return cljs.core.seq.call(null, s__$1)
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__16357 = cljs.core.next.call(null, s__$1);
        var G__16358 = i - 1;
        var G__16359 = sum + 1;
        s__$1 = G__16357;
        i = G__16358;
        sum = G__16359;
        continue
      }else {
        return sum
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null
    }, null, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x
    }, null, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if(s) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y))
        }
      }else {
        return y
      }
    }, null, null)
  };
  var concat__3 = function() {
    var G__16360__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if(xys__$1) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1))
            }
          }else {
            if(cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1))
            }else {
              return null
            }
          }
        }, null, null)
      };
      return cat.call(null, concat.call(null, x, y), zs)
    };
    var G__16360 = function(x, y, var_args) {
      var zs = null;
      if(arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16360__delegate.call(this, x, y, zs)
    };
    G__16360.cljs$lang$maxFixedArity = 2;
    G__16360.cljs$lang$applyTo = function(arglist__16361) {
      var x = cljs.core.first(arglist__16361);
      arglist__16361 = cljs.core.next(arglist__16361);
      var y = cljs.core.first(arglist__16361);
      var zs = cljs.core.rest(arglist__16361);
      return G__16360__delegate(x, y, zs)
    };
    G__16360.cljs$core$IFn$_invoke$arity$variadic = G__16360__delegate;
    return G__16360
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__16362__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__16362 = function(a, b, c, d, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__16362__delegate.call(this, a, b, c, d, more)
    };
    G__16362.cljs$lang$maxFixedArity = 4;
    G__16362.cljs$lang$applyTo = function(arglist__16363) {
      var a = cljs.core.first(arglist__16363);
      arglist__16363 = cljs.core.next(arglist__16363);
      var b = cljs.core.first(arglist__16363);
      arglist__16363 = cljs.core.next(arglist__16363);
      var c = cljs.core.first(arglist__16363);
      arglist__16363 = cljs.core.next(arglist__16363);
      var d = cljs.core.first(arglist__16363);
      var more = cljs.core.rest(arglist__16363);
      return G__16362__delegate(a, b, c, d, more)
    };
    G__16362.cljs$core$IFn$_invoke$arity$variadic = G__16362__delegate;
    return G__16362
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if(argc === 1) {
      if(f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a)
      }else {
        return f.call(null, a)
      }
    }else {
      var b = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if(argc === 2) {
        if(f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b)
        }else {
          return f.call(null, a, b)
        }
      }else {
        var c = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if(argc === 3) {
          if(f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c)
          }else {
            return f.call(null, a, b, c)
          }
        }else {
          var d = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if(argc === 4) {
            if(f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d)
            }else {
              return f.call(null, a, b, c, d)
            }
          }else {
            var e = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if(argc === 5) {
              if(f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e)
              }else {
                return f.call(null, a, b, c, d, e)
              }
            }else {
              var f__$1 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if(argc === 6) {
                if(f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1)
                }else {
                  return f__$1.call(null, a, b, c, d, e, f__$1)
                }
              }else {
                var g = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if(argc === 7) {
                  if(f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g)
                  }else {
                    return f__$1.call(null, a, b, c, d, e, f__$1, g)
                  }
                }else {
                  var h = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if(argc === 8) {
                    if(f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h)
                    }else {
                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h)
                    }
                  }else {
                    var i = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if(argc === 9) {
                      if(f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i)
                      }else {
                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i)
                      }
                    }else {
                      var j = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if(argc === 10) {
                        if(f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j)
                        }else {
                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j)
                        }
                      }else {
                        var k = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if(argc === 11) {
                          if(f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k)
                          }else {
                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k)
                          }
                        }else {
                          var l = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if(argc === 12) {
                            if(f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }else {
                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }
                          }else {
                            var m = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if(argc === 13) {
                              if(f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }else {
                                return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }
                            }else {
                              var n = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if(argc === 14) {
                                if(f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }else {
                                  return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }
                              }else {
                                var o = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if(argc === 15) {
                                  if(f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }else {
                                    return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }
                                }else {
                                  var p = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if(argc === 16) {
                                    if(f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }else {
                                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }
                                  }else {
                                    var q = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if(argc === 17) {
                                      if(f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }else {
                                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }
                                    }else {
                                      var r = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if(argc === 18) {
                                        if(f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }else {
                                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }
                                      }else {
                                        var s = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if(argc === 19) {
                                          if(f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }else {
                                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }
                                        }else {
                                          var t = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if(argc === 20) {
                                            if(f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }else {
                                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__6 = function() {
    var G__16364__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if(f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if(bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist)
        }else {
          return f.cljs$lang$applyTo(arglist)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist))
      }
    };
    var G__16364 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__16364__delegate.call(this, f, a, b, c, d, args)
    };
    G__16364.cljs$lang$maxFixedArity = 5;
    G__16364.cljs$lang$applyTo = function(arglist__16365) {
      var f = cljs.core.first(arglist__16365);
      arglist__16365 = cljs.core.next(arglist__16365);
      var a = cljs.core.first(arglist__16365);
      arglist__16365 = cljs.core.next(arglist__16365);
      var b = cljs.core.first(arglist__16365);
      arglist__16365 = cljs.core.next(arglist__16365);
      var c = cljs.core.first(arglist__16365);
      arglist__16365 = cljs.core.next(arglist__16365);
      var d = cljs.core.first(arglist__16365);
      var args = cljs.core.rest(arglist__16365);
      return G__16364__delegate(f, a, b, c, d, args)
    };
    G__16364.cljs$core$IFn$_invoke$arity$variadic = G__16364__delegate;
    return G__16364
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__16366) {
    var obj = cljs.core.first(arglist__16366);
    arglist__16366 = cljs.core.next(arglist__16366);
    var f = cljs.core.first(arglist__16366);
    var args = cljs.core.rest(arglist__16366);
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__16367__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__16367 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16367__delegate.call(this, x, y, more)
    };
    G__16367.cljs$lang$maxFixedArity = 2;
    G__16367.cljs$lang$applyTo = function(arglist__16368) {
      var x = cljs.core.first(arglist__16368);
      arglist__16368 = cljs.core.next(arglist__16368);
      var y = cljs.core.first(arglist__16368);
      var more = cljs.core.rest(arglist__16368);
      return G__16367__delegate(x, y, more)
    };
    G__16367.cljs$core$IFn$_invoke$arity$variadic = G__16367__delegate;
    return G__16367
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__16369 = pred;
        var G__16370 = cljs.core.next.call(null, coll);
        pred = G__16369;
        coll = G__16370;
        continue
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3943__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        var G__16371 = pred;
        var G__16372 = cljs.core.next.call(null, coll);
        pred = G__16371;
        coll = G__16372;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__16373 = null;
    var G__16373__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__16373__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__16373__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__16373__3 = function() {
      var G__16374__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__16374 = function(x, y, var_args) {
        var zs = null;
        if(arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__16374__delegate.call(this, x, y, zs)
      };
      G__16374.cljs$lang$maxFixedArity = 2;
      G__16374.cljs$lang$applyTo = function(arglist__16375) {
        var x = cljs.core.first(arglist__16375);
        arglist__16375 = cljs.core.next(arglist__16375);
        var y = cljs.core.first(arglist__16375);
        var zs = cljs.core.rest(arglist__16375);
        return G__16374__delegate(x, y, zs)
      };
      G__16374.cljs$core$IFn$_invoke$arity$variadic = G__16374__delegate;
      return G__16374
    }();
    G__16373 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__16373__0.call(this);
        case 1:
          return G__16373__1.call(this, x);
        case 2:
          return G__16373__2.call(this, x, y);
        default:
          return G__16373__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__16373.cljs$lang$maxFixedArity = 2;
    G__16373.cljs$lang$applyTo = G__16373__3.cljs$lang$applyTo;
    return G__16373
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__16376__delegate = function(args) {
      return x
    };
    var G__16376 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__16376__delegate.call(this, args)
    };
    G__16376.cljs$lang$maxFixedArity = 0;
    G__16376.cljs$lang$applyTo = function(arglist__16377) {
      var args = cljs.core.seq(arglist__16377);
      return G__16376__delegate(args)
    };
    G__16376.cljs$core$IFn$_invoke$arity$variadic = G__16376__delegate;
    return G__16376
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__16378 = null;
      var G__16378__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__16378__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__16378__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__16378__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__16378__4 = function() {
        var G__16379__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__16379 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__16379__delegate.call(this, x, y, z, args)
        };
        G__16379.cljs$lang$maxFixedArity = 3;
        G__16379.cljs$lang$applyTo = function(arglist__16380) {
          var x = cljs.core.first(arglist__16380);
          arglist__16380 = cljs.core.next(arglist__16380);
          var y = cljs.core.first(arglist__16380);
          arglist__16380 = cljs.core.next(arglist__16380);
          var z = cljs.core.first(arglist__16380);
          var args = cljs.core.rest(arglist__16380);
          return G__16379__delegate(x, y, z, args)
        };
        G__16379.cljs$core$IFn$_invoke$arity$variadic = G__16379__delegate;
        return G__16379
      }();
      G__16378 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__16378__0.call(this);
          case 1:
            return G__16378__1.call(this, x);
          case 2:
            return G__16378__2.call(this, x, y);
          case 3:
            return G__16378__3.call(this, x, y, z);
          default:
            return G__16378__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16378.cljs$lang$maxFixedArity = 3;
      G__16378.cljs$lang$applyTo = G__16378__4.cljs$lang$applyTo;
      return G__16378
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__16381 = null;
      var G__16381__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__16381__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__16381__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__16381__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__16381__4 = function() {
        var G__16382__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__16382 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__16382__delegate.call(this, x, y, z, args)
        };
        G__16382.cljs$lang$maxFixedArity = 3;
        G__16382.cljs$lang$applyTo = function(arglist__16383) {
          var x = cljs.core.first(arglist__16383);
          arglist__16383 = cljs.core.next(arglist__16383);
          var y = cljs.core.first(arglist__16383);
          arglist__16383 = cljs.core.next(arglist__16383);
          var z = cljs.core.first(arglist__16383);
          var args = cljs.core.rest(arglist__16383);
          return G__16382__delegate(x, y, z, args)
        };
        G__16382.cljs$core$IFn$_invoke$arity$variadic = G__16382__delegate;
        return G__16382
      }();
      G__16381 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__16381__0.call(this);
          case 1:
            return G__16381__1.call(this, x);
          case 2:
            return G__16381__2.call(this, x, y);
          case 3:
            return G__16381__3.call(this, x, y, z);
          default:
            return G__16381__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16381.cljs$lang$maxFixedArity = 3;
      G__16381.cljs$lang$applyTo = G__16381__4.cljs$lang$applyTo;
      return G__16381
    }()
  };
  var comp__4 = function() {
    var G__16384__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__16385__delegate = function(args) {
          var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
          var fs__$2 = cljs.core.next.call(null, fs__$1);
          while(true) {
            if(fs__$2) {
              var G__16386 = cljs.core.first.call(null, fs__$2).call(null, ret);
              var G__16387 = cljs.core.next.call(null, fs__$2);
              ret = G__16386;
              fs__$2 = G__16387;
              continue
            }else {
              return ret
            }
            break
          }
        };
        var G__16385 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__16385__delegate.call(this, args)
        };
        G__16385.cljs$lang$maxFixedArity = 0;
        G__16385.cljs$lang$applyTo = function(arglist__16388) {
          var args = cljs.core.seq(arglist__16388);
          return G__16385__delegate(args)
        };
        G__16385.cljs$core$IFn$_invoke$arity$variadic = G__16385__delegate;
        return G__16385
      }()
    };
    var G__16384 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__16384__delegate.call(this, f1, f2, f3, fs)
    };
    G__16384.cljs$lang$maxFixedArity = 3;
    G__16384.cljs$lang$applyTo = function(arglist__16389) {
      var f1 = cljs.core.first(arglist__16389);
      arglist__16389 = cljs.core.next(arglist__16389);
      var f2 = cljs.core.first(arglist__16389);
      arglist__16389 = cljs.core.next(arglist__16389);
      var f3 = cljs.core.first(arglist__16389);
      var fs = cljs.core.rest(arglist__16389);
      return G__16384__delegate(f1, f2, f3, fs)
    };
    G__16384.cljs$core$IFn$_invoke$arity$variadic = G__16384__delegate;
    return G__16384
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__16390__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__16390 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__16390__delegate.call(this, args)
      };
      G__16390.cljs$lang$maxFixedArity = 0;
      G__16390.cljs$lang$applyTo = function(arglist__16391) {
        var args = cljs.core.seq(arglist__16391);
        return G__16390__delegate(args)
      };
      G__16390.cljs$core$IFn$_invoke$arity$variadic = G__16390__delegate;
      return G__16390
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__16392__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__16392 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__16392__delegate.call(this, args)
      };
      G__16392.cljs$lang$maxFixedArity = 0;
      G__16392.cljs$lang$applyTo = function(arglist__16393) {
        var args = cljs.core.seq(arglist__16393);
        return G__16392__delegate(args)
      };
      G__16392.cljs$core$IFn$_invoke$arity$variadic = G__16392__delegate;
      return G__16392
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__16394__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__16394 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__16394__delegate.call(this, args)
      };
      G__16394.cljs$lang$maxFixedArity = 0;
      G__16394.cljs$lang$applyTo = function(arglist__16395) {
        var args = cljs.core.seq(arglist__16395);
        return G__16394__delegate(args)
      };
      G__16394.cljs$core$IFn$_invoke$arity$variadic = G__16394__delegate;
      return G__16394
    }()
  };
  var partial__5 = function() {
    var G__16396__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__16397__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__16397 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__16397__delegate.call(this, args)
        };
        G__16397.cljs$lang$maxFixedArity = 0;
        G__16397.cljs$lang$applyTo = function(arglist__16398) {
          var args = cljs.core.seq(arglist__16398);
          return G__16397__delegate(args)
        };
        G__16397.cljs$core$IFn$_invoke$arity$variadic = G__16397__delegate;
        return G__16397
      }()
    };
    var G__16396 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__16396__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__16396.cljs$lang$maxFixedArity = 4;
    G__16396.cljs$lang$applyTo = function(arglist__16399) {
      var f = cljs.core.first(arglist__16399);
      arglist__16399 = cljs.core.next(arglist__16399);
      var arg1 = cljs.core.first(arglist__16399);
      arglist__16399 = cljs.core.next(arglist__16399);
      var arg2 = cljs.core.first(arglist__16399);
      arglist__16399 = cljs.core.next(arglist__16399);
      var arg3 = cljs.core.first(arglist__16399);
      var more = cljs.core.rest(arglist__16399);
      return G__16396__delegate(f, arg1, arg2, arg3, more)
    };
    G__16396.cljs$core$IFn$_invoke$arity$variadic = G__16396__delegate;
    return G__16396
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__16400 = null;
      var G__16400__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__16400__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__16400__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__16400__4 = function() {
        var G__16401__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__16401 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__16401__delegate.call(this, a, b, c, ds)
        };
        G__16401.cljs$lang$maxFixedArity = 3;
        G__16401.cljs$lang$applyTo = function(arglist__16402) {
          var a = cljs.core.first(arglist__16402);
          arglist__16402 = cljs.core.next(arglist__16402);
          var b = cljs.core.first(arglist__16402);
          arglist__16402 = cljs.core.next(arglist__16402);
          var c = cljs.core.first(arglist__16402);
          var ds = cljs.core.rest(arglist__16402);
          return G__16401__delegate(a, b, c, ds)
        };
        G__16401.cljs$core$IFn$_invoke$arity$variadic = G__16401__delegate;
        return G__16401
      }();
      G__16400 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__16400__1.call(this, a);
          case 2:
            return G__16400__2.call(this, a, b);
          case 3:
            return G__16400__3.call(this, a, b, c);
          default:
            return G__16400__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16400.cljs$lang$maxFixedArity = 3;
      G__16400.cljs$lang$applyTo = G__16400__4.cljs$lang$applyTo;
      return G__16400
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__16403 = null;
      var G__16403__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__16403__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__16403__4 = function() {
        var G__16404__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__16404 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__16404__delegate.call(this, a, b, c, ds)
        };
        G__16404.cljs$lang$maxFixedArity = 3;
        G__16404.cljs$lang$applyTo = function(arglist__16405) {
          var a = cljs.core.first(arglist__16405);
          arglist__16405 = cljs.core.next(arglist__16405);
          var b = cljs.core.first(arglist__16405);
          arglist__16405 = cljs.core.next(arglist__16405);
          var c = cljs.core.first(arglist__16405);
          var ds = cljs.core.rest(arglist__16405);
          return G__16404__delegate(a, b, c, ds)
        };
        G__16404.cljs$core$IFn$_invoke$arity$variadic = G__16404__delegate;
        return G__16404
      }();
      G__16403 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__16403__2.call(this, a, b);
          case 3:
            return G__16403__3.call(this, a, b, c);
          default:
            return G__16403__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16403.cljs$lang$maxFixedArity = 3;
      G__16403.cljs$lang$applyTo = G__16403__4.cljs$lang$applyTo;
      return G__16403
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__16406 = null;
      var G__16406__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__16406__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__16406__4 = function() {
        var G__16407__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__16407 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__16407__delegate.call(this, a, b, c, ds)
        };
        G__16407.cljs$lang$maxFixedArity = 3;
        G__16407.cljs$lang$applyTo = function(arglist__16408) {
          var a = cljs.core.first(arglist__16408);
          arglist__16408 = cljs.core.next(arglist__16408);
          var b = cljs.core.first(arglist__16408);
          arglist__16408 = cljs.core.next(arglist__16408);
          var c = cljs.core.first(arglist__16408);
          var ds = cljs.core.rest(arglist__16408);
          return G__16407__delegate(a, b, c, ds)
        };
        G__16407.cljs$core$IFn$_invoke$arity$variadic = G__16407__delegate;
        return G__16407
      }();
      G__16406 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__16406__2.call(this, a, b);
          case 3:
            return G__16406__3.call(this, a, b, c);
          default:
            return G__16406__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16406.cljs$lang$maxFixedArity = 3;
      G__16406.cljs$lang$applyTo = G__16406__4.cljs$lang$applyTo;
      return G__16406
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3654__auto___16409 = size;
          var i_16410 = 0;
          while(true) {
            if(i_16410 < n__3654__auto___16409) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_16410, cljs.core._nth.call(null, c, i_16410)));
              var G__16411 = i_16410 + 1;
              i_16410 = G__16411;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null, null)
  };
  return mapi.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__3654__auto___16412 = size;
        var i_16413 = 0;
        while(true) {
          if(i_16413 < n__3654__auto___16412) {
            var x_16414 = f.call(null, cljs.core._nth.call(null, c, i_16413));
            if(x_16414 == null) {
            }else {
              cljs.core.chunk_append.call(null, b, x_16414)
            }
            var G__16415 = i_16413 + 1;
            i_16413 = G__16415;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)))
      }else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if(x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s))
        }else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)))
        }
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3654__auto___16416 = size;
          var i_16417 = 0;
          while(true) {
            if(i_16417 < n__3654__auto___16416) {
              var x_16418 = f.call(null, idx + i_16417, cljs.core._nth.call(null, c, i_16417));
              if(x_16418 == null) {
              }else {
                cljs.core.chunk_append.call(null, b, x_16418)
              }
              var G__16419 = i_16417 + 1;
              i_16417 = G__16419;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if(x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s))
          }else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)))
          }
        }
      }else {
        return null
      }
    }, null, null)
  };
  return keepi.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            return p.call(null, y)
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return p.call(null, z)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep1__4 = function() {
        var G__16426__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__16426 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__16426__delegate.call(this, x, y, z, args)
        };
        G__16426.cljs$lang$maxFixedArity = 3;
        G__16426.cljs$lang$applyTo = function(arglist__16427) {
          var x = cljs.core.first(arglist__16427);
          arglist__16427 = cljs.core.next(arglist__16427);
          var y = cljs.core.first(arglist__16427);
          arglist__16427 = cljs.core.next(arglist__16427);
          var z = cljs.core.first(arglist__16427);
          var args = cljs.core.rest(arglist__16427);
          return G__16426__delegate(x, y, z, args)
        };
        G__16426.cljs$core$IFn$_invoke$arity$variadic = G__16426__delegate;
        return G__16426
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            return p2.call(null, x)
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p2.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                return p2.call(null, y)
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p1.call(null, z);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p2.call(null, x);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    return p2.call(null, z)
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__4 = function() {
        var G__16428__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, function(p1__16420_SHARP_) {
                var and__3941__auto____$1 = p1.call(null, p1__16420_SHARP_);
                if(cljs.core.truth_(and__3941__auto____$1)) {
                  return p2.call(null, p1__16420_SHARP_)
                }else {
                  return and__3941__auto____$1
                }
              }, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__16428 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__16428__delegate.call(this, x, y, z, args)
        };
        G__16428.cljs$lang$maxFixedArity = 3;
        G__16428.cljs$lang$applyTo = function(arglist__16429) {
          var x = cljs.core.first(arglist__16429);
          arglist__16429 = cljs.core.next(arglist__16429);
          var y = cljs.core.first(arglist__16429);
          arglist__16429 = cljs.core.next(arglist__16429);
          var z = cljs.core.first(arglist__16429);
          var args = cljs.core.rest(arglist__16429);
          return G__16428__delegate(x, y, z, args)
        };
        G__16428.cljs$core$IFn$_invoke$arity$variadic = G__16428__delegate;
        return G__16428
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return p3.call(null, x)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    return p3.call(null, y)
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    var and__3941__auto____$5 = p3.call(null, y);
                    if(cljs.core.truth_(and__3941__auto____$5)) {
                      var and__3941__auto____$6 = p1.call(null, z);
                      if(cljs.core.truth_(and__3941__auto____$6)) {
                        var and__3941__auto____$7 = p2.call(null, z);
                        if(cljs.core.truth_(and__3941__auto____$7)) {
                          return p3.call(null, z)
                        }else {
                          return and__3941__auto____$7
                        }
                      }else {
                        return and__3941__auto____$6
                      }
                    }else {
                      return and__3941__auto____$5
                    }
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__4 = function() {
        var G__16430__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, function(p1__16421_SHARP_) {
                var and__3941__auto____$1 = p1.call(null, p1__16421_SHARP_);
                if(cljs.core.truth_(and__3941__auto____$1)) {
                  var and__3941__auto____$2 = p2.call(null, p1__16421_SHARP_);
                  if(cljs.core.truth_(and__3941__auto____$2)) {
                    return p3.call(null, p1__16421_SHARP_)
                  }else {
                    return and__3941__auto____$2
                  }
                }else {
                  return and__3941__auto____$1
                }
              }, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__16430 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__16430__delegate.call(this, x, y, z, args)
        };
        G__16430.cljs$lang$maxFixedArity = 3;
        G__16430.cljs$lang$applyTo = function(arglist__16431) {
          var x = cljs.core.first(arglist__16431);
          arglist__16431 = cljs.core.next(arglist__16431);
          var y = cljs.core.first(arglist__16431);
          arglist__16431 = cljs.core.next(arglist__16431);
          var z = cljs.core.first(arglist__16431);
          var args = cljs.core.rest(arglist__16431);
          return G__16430__delegate(x, y, z, args)
        };
        G__16430.cljs$core$IFn$_invoke$arity$variadic = G__16430__delegate;
        return G__16430
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__16432__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__16422_SHARP_) {
            return p1__16422_SHARP_.call(null, x)
          }, ps__$1)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__16423_SHARP_) {
            var and__3941__auto__ = p1__16423_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto__)) {
              return p1__16423_SHARP_.call(null, y)
            }else {
              return and__3941__auto__
            }
          }, ps__$1)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__16424_SHARP_) {
            var and__3941__auto__ = p1__16424_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto__)) {
              var and__3941__auto____$1 = p1__16424_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3941__auto____$1)) {
                return p1__16424_SHARP_.call(null, z)
              }else {
                return and__3941__auto____$1
              }
            }else {
              return and__3941__auto__
            }
          }, ps__$1)
        };
        var epn__4 = function() {
          var G__16433__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3941__auto__ = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3941__auto__)) {
                return cljs.core.every_QMARK_.call(null, function(p1__16425_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__16425_SHARP_, args)
                }, ps__$1)
              }else {
                return and__3941__auto__
              }
            }())
          };
          var G__16433 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__16433__delegate.call(this, x, y, z, args)
          };
          G__16433.cljs$lang$maxFixedArity = 3;
          G__16433.cljs$lang$applyTo = function(arglist__16434) {
            var x = cljs.core.first(arglist__16434);
            arglist__16434 = cljs.core.next(arglist__16434);
            var y = cljs.core.first(arglist__16434);
            arglist__16434 = cljs.core.next(arglist__16434);
            var z = cljs.core.first(arglist__16434);
            var args = cljs.core.rest(arglist__16434);
            return G__16433__delegate(x, y, z, args)
          };
          G__16433.cljs$core$IFn$_invoke$arity$variadic = G__16433__delegate;
          return G__16433
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn
      }()
    };
    var G__16432 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__16432__delegate.call(this, p1, p2, p3, ps)
    };
    G__16432.cljs$lang$maxFixedArity = 3;
    G__16432.cljs$lang$applyTo = function(arglist__16435) {
      var p1 = cljs.core.first(arglist__16435);
      arglist__16435 = cljs.core.next(arglist__16435);
      var p2 = cljs.core.first(arglist__16435);
      arglist__16435 = cljs.core.next(arglist__16435);
      var p3 = cljs.core.first(arglist__16435);
      var ps = cljs.core.rest(arglist__16435);
      return G__16432__delegate(p1, p2, p3, ps)
    };
    G__16432.cljs$core$IFn$_invoke$arity$variadic = G__16432__delegate;
    return G__16432
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3943__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3943__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__16442__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__16442 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__16442__delegate.call(this, x, y, z, args)
        };
        G__16442.cljs$lang$maxFixedArity = 3;
        G__16442.cljs$lang$applyTo = function(arglist__16443) {
          var x = cljs.core.first(arglist__16443);
          arglist__16443 = cljs.core.next(arglist__16443);
          var y = cljs.core.first(arglist__16443);
          arglist__16443 = cljs.core.next(arglist__16443);
          var z = cljs.core.first(arglist__16443);
          var args = cljs.core.rest(arglist__16443);
          return G__16442__delegate(x, y, z, args)
        };
        G__16442.cljs$core$IFn$_invoke$arity$variadic = G__16442__delegate;
        return G__16442
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p2.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p1.call(null, z);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p2.call(null, x);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__16444__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, function(p1__16436_SHARP_) {
              var or__3943__auto____$1 = p1.call(null, p1__16436_SHARP_);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                return p2.call(null, p1__16436_SHARP_)
              }
            }, args)
          }
        };
        var G__16444 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__16444__delegate.call(this, x, y, z, args)
        };
        G__16444.cljs$lang$maxFixedArity = 3;
        G__16444.cljs$lang$applyTo = function(arglist__16445) {
          var x = cljs.core.first(arglist__16445);
          arglist__16445 = cljs.core.next(arglist__16445);
          var y = cljs.core.first(arglist__16445);
          arglist__16445 = cljs.core.next(arglist__16445);
          var z = cljs.core.first(arglist__16445);
          var args = cljs.core.rest(arglist__16445);
          return G__16444__delegate(x, y, z, args)
        };
        G__16444.cljs$core$IFn$_invoke$arity$variadic = G__16444__delegate;
        return G__16444
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  var or__3943__auto____$5 = p3.call(null, y);
                  if(cljs.core.truth_(or__3943__auto____$5)) {
                    return or__3943__auto____$5
                  }else {
                    var or__3943__auto____$6 = p1.call(null, z);
                    if(cljs.core.truth_(or__3943__auto____$6)) {
                      return or__3943__auto____$6
                    }else {
                      var or__3943__auto____$7 = p2.call(null, z);
                      if(cljs.core.truth_(or__3943__auto____$7)) {
                        return or__3943__auto____$7
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__16446__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, function(p1__16437_SHARP_) {
              var or__3943__auto____$1 = p1.call(null, p1__16437_SHARP_);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                var or__3943__auto____$2 = p2.call(null, p1__16437_SHARP_);
                if(cljs.core.truth_(or__3943__auto____$2)) {
                  return or__3943__auto____$2
                }else {
                  return p3.call(null, p1__16437_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__16446 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__16446__delegate.call(this, x, y, z, args)
        };
        G__16446.cljs$lang$maxFixedArity = 3;
        G__16446.cljs$lang$applyTo = function(arglist__16447) {
          var x = cljs.core.first(arglist__16447);
          arglist__16447 = cljs.core.next(arglist__16447);
          var y = cljs.core.first(arglist__16447);
          arglist__16447 = cljs.core.next(arglist__16447);
          var z = cljs.core.first(arglist__16447);
          var args = cljs.core.rest(arglist__16447);
          return G__16446__delegate(x, y, z, args)
        };
        G__16446.cljs$core$IFn$_invoke$arity$variadic = G__16446__delegate;
        return G__16446
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__16448__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__16438_SHARP_) {
            return p1__16438_SHARP_.call(null, x)
          }, ps__$1)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__16439_SHARP_) {
            var or__3943__auto__ = p1__16439_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return p1__16439_SHARP_.call(null, y)
            }
          }, ps__$1)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__16440_SHARP_) {
            var or__3943__auto__ = p1__16440_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              var or__3943__auto____$1 = p1__16440_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                return p1__16440_SHARP_.call(null, z)
              }
            }
          }, ps__$1)
        };
        var spn__4 = function() {
          var G__16449__delegate = function(x, y, z, args) {
            var or__3943__auto__ = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return cljs.core.some.call(null, function(p1__16441_SHARP_) {
                return cljs.core.some.call(null, p1__16441_SHARP_, args)
              }, ps__$1)
            }
          };
          var G__16449 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__16449__delegate.call(this, x, y, z, args)
          };
          G__16449.cljs$lang$maxFixedArity = 3;
          G__16449.cljs$lang$applyTo = function(arglist__16450) {
            var x = cljs.core.first(arglist__16450);
            arglist__16450 = cljs.core.next(arglist__16450);
            var y = cljs.core.first(arglist__16450);
            arglist__16450 = cljs.core.next(arglist__16450);
            var z = cljs.core.first(arglist__16450);
            var args = cljs.core.rest(arglist__16450);
            return G__16449__delegate(x, y, z, args)
          };
          G__16449.cljs$core$IFn$_invoke$arity$variadic = G__16449__delegate;
          return G__16449
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn
      }()
    };
    var G__16448 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__16448__delegate.call(this, p1, p2, p3, ps)
    };
    G__16448.cljs$lang$maxFixedArity = 3;
    G__16448.cljs$lang$applyTo = function(arglist__16451) {
      var p1 = cljs.core.first(arglist__16451);
      arglist__16451 = cljs.core.next(arglist__16451);
      var p2 = cljs.core.first(arglist__16451);
      arglist__16451 = cljs.core.next(arglist__16451);
      var p3 = cljs.core.first(arglist__16451);
      var ps = cljs.core.rest(arglist__16451);
      return G__16448__delegate(p1, p2, p3, ps)
    };
    G__16448.cljs$core$IFn$_invoke$arity$variadic = G__16448__delegate;
    return G__16448
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3654__auto___16453 = size;
          var i_16454 = 0;
          while(true) {
            if(i_16454 < n__3654__auto___16453) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_16454)));
              var G__16455 = i_16454 + 1;
              i_16454 = G__16455;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          return s2
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)))
      }else {
        return null
      }
    }, null, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          var and__3941__auto____$1 = s2;
          if(and__3941__auto____$1) {
            return s3
          }else {
            return and__3941__auto____$1
          }
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)))
      }else {
        return null
      }
    }, null, null)
  };
  var map__5 = function() {
    var G__16456__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)))
          }else {
            return null
          }
        }, null, null)
      };
      return map.call(null, function(p1__16452_SHARP_) {
        return cljs.core.apply.call(null, f, p1__16452_SHARP_)
      }, step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__16456 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__16456__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__16456.cljs$lang$maxFixedArity = 4;
    G__16456.cljs$lang$applyTo = function(arglist__16457) {
      var f = cljs.core.first(arglist__16457);
      arglist__16457 = cljs.core.next(arglist__16457);
      var c1 = cljs.core.first(arglist__16457);
      arglist__16457 = cljs.core.next(arglist__16457);
      var c2 = cljs.core.first(arglist__16457);
      arglist__16457 = cljs.core.next(arglist__16457);
      var c3 = cljs.core.first(arglist__16457);
      var colls = cljs.core.rest(arglist__16457);
      return G__16456__delegate(f, c1, c2, c3, colls)
    };
    G__16456.cljs$core$IFn$_invoke$arity$variadic = G__16456__delegate;
    return G__16456
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if(n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = n__$1 > 0;
        if(and__3941__auto__) {
          return s
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__16458 = n__$1 - 1;
        var G__16459 = cljs.core.rest.call(null, s);
        n__$1 = G__16458;
        coll__$1 = G__16459;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, n, coll)
  }, null, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead) {
      var G__16460 = cljs.core.next.call(null, s);
      var G__16461 = cljs.core.next.call(null, lead);
      s = G__16460;
      lead = G__16461;
      continue
    }else {
      return s
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = s;
        if(and__3941__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s))
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__16462 = pred__$1;
        var G__16463 = cljs.core.rest.call(null, s);
        pred__$1 = G__16462;
        coll__$1 = G__16463;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, pred, coll)
  }, null, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s))
    }else {
      return null
    }
  }, null, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          return s2
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))))
      }else {
        return null
      }
    }, null, null)
  };
  var interleave__3 = function() {
    var G__16464__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)))
        }else {
          return null
        }
      }, null, null)
    };
    var G__16464 = function(c1, c2, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16464__delegate.call(this, c1, c2, colls)
    };
    G__16464.cljs$lang$maxFixedArity = 2;
    G__16464.cljs$lang$applyTo = function(arglist__16465) {
      var c1 = cljs.core.first(arglist__16465);
      arglist__16465 = cljs.core.next(arglist__16465);
      var c2 = cljs.core.first(arglist__16465);
      var colls = cljs.core.rest(arglist__16465);
      return G__16464__delegate(c1, c2, colls)
    };
    G__16464.cljs$core$IFn$_invoke$arity$variadic = G__16464__delegate;
    return G__16464
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1))
      }else {
        if(cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1))
        }else {
          return null
        }
      }
    }, null, null)
  };
  return cat.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__16466__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__16466 = function(f, coll, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16466__delegate.call(this, f, coll, colls)
    };
    G__16466.cljs$lang$maxFixedArity = 2;
    G__16466.cljs$lang$applyTo = function(arglist__16467) {
      var f = cljs.core.first(arglist__16467);
      arglist__16467 = cljs.core.next(arglist__16467);
      var coll = cljs.core.first(arglist__16467);
      var colls = cljs.core.rest(arglist__16467);
      return G__16466__delegate(f, coll, colls)
    };
    G__16466.cljs$core$IFn$_invoke$arity$variadic = G__16466__delegate;
    return G__16466
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__3654__auto___16468 = size;
        var i_16469 = 0;
        while(true) {
          if(i_16469 < n__3654__auto___16468) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_16469)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_16469))
            }else {
            }
            var G__16470 = i_16469 + 1;
            i_16469 = G__16470;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)))
      }else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if(cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r))
        }else {
          return filter.call(null, pred, r)
        }
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null, null)
  };
  return walk.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__16471_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__16471_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(!(to == null)) {
    if(function() {
      var G__16473 = to;
      if(G__16473) {
        if(function() {
          var or__3943__auto__ = G__16473.cljs$lang$protocol_mask$partition1$ & 4;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__16473.cljs$core$IEditableCollection$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
    }else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from)
    }
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__16474__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__16474 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__16474__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__16474.cljs$lang$maxFixedArity = 4;
    G__16474.cljs$lang$applyTo = function(arglist__16475) {
      var f = cljs.core.first(arglist__16475);
      arglist__16475 = cljs.core.next(arglist__16475);
      var c1 = cljs.core.first(arglist__16475);
      arglist__16475 = cljs.core.next(arglist__16475);
      var c2 = cljs.core.first(arglist__16475);
      arglist__16475 = cljs.core.next(arglist__16475);
      var c3 = cljs.core.first(arglist__16475);
      var colls = cljs.core.rest(arglist__16475);
      return G__16474__delegate(f, c1, c2, c3, colls)
    };
    G__16474.cljs$core$IFn$_invoke$arity$variadic = G__16474__delegate;
    return G__16474
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)))
        }
      }else {
        return null
      }
    }, null, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__$1) {
        if(!function() {
          var G__16477 = m__$1;
          if(G__16477) {
            if(function() {
              var or__3943__auto__ = G__16477.cljs$lang$protocol_mask$partition0$ & 256;
              if(or__3943__auto__) {
                return or__3943__auto__
              }else {
                return G__16477.cljs$core$ILookup$
              }
            }()) {
              return true
            }else {
              if(!G__16477.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__16477)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__16477)
          }
        }()) {
          return not_found
        }else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if(sentinel === m__$2) {
            return not_found
          }else {
            var G__16478 = sentinel;
            var G__16479 = m__$2;
            var G__16480 = cljs.core.next.call(null, ks__$1);
            sentinel = G__16478;
            m__$1 = G__16479;
            ks__$1 = G__16480;
            continue
          }
        }
      }else {
        return m__$1
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__16481, v) {
  var vec__16483 = p__16481;
  var k = cljs.core.nth.call(null, vec__16483, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__16483, 1);
  if(cljs.core.truth_(ks)) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v))
  }else {
    return cljs.core.assoc.call(null, m, k, v)
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__16484, f) {
    var vec__16494 = p__16484;
    var k = cljs.core.nth.call(null, vec__16494, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__16494, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)))
    }
  };
  var update_in__4 = function(m, p__16485, f, a) {
    var vec__16495 = p__16485;
    var k = cljs.core.nth.call(null, vec__16495, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__16495, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a))
    }
  };
  var update_in__5 = function(m, p__16486, f, a, b) {
    var vec__16496 = p__16486;
    var k = cljs.core.nth.call(null, vec__16496, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__16496, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b))
    }
  };
  var update_in__6 = function(m, p__16487, f, a, b, c) {
    var vec__16497 = p__16487;
    var k = cljs.core.nth.call(null, vec__16497, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__16497, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c))
    }
  };
  var update_in__7 = function() {
    var G__16499__delegate = function(m, p__16488, f, a, b, c, args) {
      var vec__16498 = p__16488;
      var k = cljs.core.nth.call(null, vec__16498, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__16498, 1);
      if(cljs.core.truth_(ks)) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args))
      }else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args))
      }
    };
    var G__16499 = function(m, p__16488, f, a, b, c, var_args) {
      var args = null;
      if(arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0)
      }
      return G__16499__delegate.call(this, m, p__16488, f, a, b, c, args)
    };
    G__16499.cljs$lang$maxFixedArity = 6;
    G__16499.cljs$lang$applyTo = function(arglist__16500) {
      var m = cljs.core.first(arglist__16500);
      arglist__16500 = cljs.core.next(arglist__16500);
      var p__16488 = cljs.core.first(arglist__16500);
      arglist__16500 = cljs.core.next(arglist__16500);
      var f = cljs.core.first(arglist__16500);
      arglist__16500 = cljs.core.next(arglist__16500);
      var a = cljs.core.first(arglist__16500);
      arglist__16500 = cljs.core.next(arglist__16500);
      var b = cljs.core.first(arglist__16500);
      arglist__16500 = cljs.core.next(arglist__16500);
      var c = cljs.core.first(arglist__16500);
      var args = cljs.core.rest(arglist__16500);
      return G__16499__delegate(m, p__16488, f, a, b, c, args)
    };
    G__16499.cljs$core$IFn$_invoke$arity$variadic = G__16499__delegate;
    return G__16499
  }();
  update_in = function(m, p__16488, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__16488, f);
      case 4:
        return update_in__4.call(this, m, p__16488, f, a);
      case 5:
        return update_in__5.call(this, m, p__16488, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__16488, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__16488, f, a, b, c, cljs.core.array_seq(arguments, 6))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in
}();
goog.provide("cljs.core.VectorNode");
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__3438__auto__, writer__3439__auto__, opts__3440__auto__) {
  return cljs.core._write.call(null, writer__3439__auto__, "cljs.core/VectorNode")
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr)
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, new Array(32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if(cnt < 32) {
    return 0
  }else {
    return cnt - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while(true) {
    if(ll === 0) {
      return ret
    }else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__16501 = ll - 5;
      var G__16502 = r;
      ll = G__16501;
      ret = G__16502;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret
  }else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if(!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3941__auto__ = 0 <= i;
    if(and__3941__auto__) {
      return i < pv.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node = pv.root;
      var level = pv.shift;
      while(true) {
        if(level > 0) {
          var G__16503 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
          var G__16504 = level - 5;
          node = G__16503;
          level = G__16504;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt)
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret
  }else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if(function() {
      var and__3941__auto__ = new_child == null;
      if(and__3941__auto__) {
        return subidx === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return null
    }else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret
      }else {
        return null
      }
    }
  }
};
goog.provide("cljs.core.PersistentVector");
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3315__auto__ = self__.__hash;
  if(!(h__3315__auto__ == null)) {
    return h__3315__auto__
  }else {
    var h__3315__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3315__auto____$1;
    return h__3315__auto____$1
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= k;
    if(and__3941__auto__) {
      return k < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail = self__.tail.slice();
      new_tail[k & 31] = v;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null)
    }else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll, self__.shift, self__.root, k, v), self__.tail, null)
    }
  }else {
    if(k === self__.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__16506 = null;
  var G__16506__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, k)
  };
  var G__16506__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
  };
  G__16506 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16506__2.call(this, self__, k);
      case 3:
        return G__16506__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__16506
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args16505) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args16505.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var step_init = [0, init];
  var i = 0;
  while(true) {
    if(i < self__.cnt) {
      var arr = cljs.core.array_for.call(null, v, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while(true) {
          if(j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2
            }else {
              var G__16507 = j + 1;
              var G__16508 = init__$2;
              j = G__16507;
              init__$1 = G__16508;
              continue
            }
          }else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1)
      }else {
        var G__16509 = i + step_init[0];
        i = G__16509;
        continue
      }
    }else {
      return step_init[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  if(self__.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail = self__.tail.slice();
    new_tail.push(o);
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null)
  }else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r
    }() : cljs.core.push_tail.call(null, coll, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return new cljs.core.RSeq(coll, self__.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt === 0) {
    return null
  }else {
    if(self__.cnt < 32) {
      return cljs.core.array_seq.call(null, self__.tail)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll, 0, 0)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, self__.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
    }else {
      if(1 < self__.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.array_for.call(null, coll, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if(function() {
            var and__3941__auto__ = 5 < self__.shift;
            if(and__3941__auto__) {
              return cljs.core.pv_aget.call(null, new_root, 1) == null
            }else {
              return and__3941__auto__
            }
          }()) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null)
          }else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= n;
    if(and__3941__auto__) {
      return n < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash)
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, new Array(32));
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : xs.slice();
  if(l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null)
  }else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while(true) {
      if(i < l) {
        var G__16510 = i + 1;
        var G__16511 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__16510;
        out = G__16511;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__16512) {
    var args = cljs.core.seq(arglist__16512);
    return vector__delegate(args)
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector
}();
goog.provide("cljs.core.ChunkedSeq");
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3315__auto__ = self__.__hash;
  if(!(h__3315__auto__ == null)) {
    return h__3315__auto__
  }else {
    var h__3315__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3315__auto____$1;
    return h__3315__auto____$1
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return null
    }else {
      return s
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.node[self__.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return cljs.core.List.EMPTY
    }else {
      return s
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return null
  }else {
    return s
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return cljs.core.List.EMPTY
  }else {
    return s
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash)
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq
}();
goog.provide("cljs.core.Subvec");
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3315__auto__ = self__.__hash;
  if(!(h__3315__auto__ == null)) {
    return h__3315__auto__
  }else {
    var h__3315__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3315__auto____$1;
    return h__3315__auto____$1
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var v_pos = self__.start + key;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3216__auto__ = self__.end;
    var y__3217__auto__ = v_pos + 1;
    return x__3216__auto__ > y__3217__auto__ ? x__3216__auto__ : y__3217__auto__
  }(), null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__16514 = null;
  var G__16514__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, k)
  };
  var G__16514__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
  };
  G__16514 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16514__2.call(this, self__, k);
      case 3:
        return G__16514__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__16514
}();
cljs.core.Subvec.prototype.apply = function(self__, args16513) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args16513.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, coll, f, start__$1)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var subvec_seq = function subvec_seq(i) {
    if(i === self__.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function() {
        return subvec_seq.call(null, i + 1)
      }, null, null))
    }
  };
  return subvec_seq.call(null, self__.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.end - self__.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  if(function() {
    var or__3943__auto__ = n < 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return self__.end <= self__.start + n
    }
  }()) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start)
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n)
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var or__3943__auto__ = n < 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return self__.end <= self__.start + n
    }
  }()) {
    return not_found
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found)
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash)
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while(true) {
    if(v instanceof cljs.core.Subvec) {
      var G__16515 = meta;
      var G__16516 = v.v;
      var G__16517 = v.start + start;
      var G__16518 = v.start + end;
      var G__16519 = __hash;
      meta = G__16515;
      v = G__16516;
      start = G__16517;
      end = G__16518;
      __hash = G__16519;
      continue
    }else {
      var c = cljs.core.count.call(null, v);
      if(function() {
        var or__3943__auto__ = start < 0;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = end < 0;
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = start > c;
            if(or__3943__auto____$2) {
              return or__3943__auto____$2
            }else {
              return end > c
            }
          }
        }
      }()) {
        throw new Error("Index out of bounds");
      }else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash)
    }
    break
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = new Array(32);
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if(!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if(function() {
      var and__3941__auto__ = new_child == null;
      if(and__3941__auto__) {
        return subidx === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3941__auto__ = 0 <= i;
    if(and__3941__auto__) {
      return i < tv.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while(true) {
        if(level > 0) {
          var G__16520 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
          var G__16521 = level - 5;
          node = G__16520;
          level = G__16521;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
goog.provide("cljs.core.TransientVector");
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__16523 = null;
  var G__16523__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__16523__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__16523 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16523__2.call(this, self__, k);
      case 3:
        return G__16523__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__16523
}();
cljs.core.TransientVector.prototype.apply = function(self__, args16522) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args16522.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  if(self__.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= n;
    if(and__3941__auto__) {
      return n < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.root.edit) {
    return self__.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  if(self__.root.edit) {
    if(function() {
      var and__3941__auto__ = 0 <= n;
      if(and__3941__auto__) {
        return n < self__.cnt
      }else {
        return and__3941__auto__
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        self__.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__$1, n & 31, val);
            return node__$1
          }else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
            return node__$1
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll
      }
    }else {
      if(n === self__.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(self__.root.edit) {
    if(self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll
      }else {
        if((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.editable_array_for.call(null, tcoll, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll, self__.shift, self__.root);
              if(!(nr == null)) {
                return nr
              }else {
                return new cljs.core.VectorNode(self__.root.edit, new Array(32))
              }
            }();
            if(function() {
              var and__3941__auto__ = 5 < self__.shift;
              if(and__3941__auto__) {
                return cljs.core.pv_aget.call(null, new_root, 1) == null
              }else {
                return and__3941__auto__
              }
            }()) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll
            }else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  if(self__.root.edit) {
    if(self__.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll
    }else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = new Array(32);
      new_tail[0] = o;
      self__.tail = new_tail;
      if(self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = new Array(32);
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll
      }else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail)
};
goog.provide("cljs.core.PersistentQueueSeq");
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3315__auto__ = self__.__hash;
  if(!(h__3315__auto__ == null)) {
    return h__3315__auto__
  }else {
    var h__3315__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3315__auto____$1;
    return h__3315__auto____$1
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if(temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null)
  }else {
    if(self__.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash)
};
goog.provide("cljs.core.PersistentQueue");
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3315__auto__ = self__.__hash;
  if(!(h__3315__auto__ == null)) {
    return h__3315__auto__
  }else {
    var h__3315__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3315__auto____$1;
    return h__3315__auto____$1
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  if(cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3943__auto__ = self__.rear;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if(cljs.core.truth_(function() {
    var or__3943__auto__ = self__.front;
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return rear__$1
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if(temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null)
    }else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash)
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
goog.provide("cljs.core.NeverEquiv");
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  return false
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while(true) {
    if(i < len) {
      if(k === array[i]) {
        return i
      }else {
        var G__16524 = i + incr;
        i = G__16524;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if(a__$1 < b__$1) {
    return-1
  }else {
    if(a__$1 > b__$1) {
      return 1
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var k__$1 = ks[i];
      var G__16525 = i + 1;
      var G__16526 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__16525;
      out = G__16526;
      continue
    }else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm)
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_16527 = 0;
  while(true) {
    if(i_16527 < l) {
      var k_16528 = ks[i_16527];
      new_obj[k_16528] = obj[k_16528];
      var G__16529 = i_16527 + 1;
      i_16527 = G__16529;
      continue
    }else {
    }
    break
  }
  return new_obj
};
goog.provide("cljs.core.ObjMap");
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3315__auto__ = self__.__hash;
  if(!(h__3315__auto__ == null)) {
    return h__3315__auto__
  }else {
    var h__3315__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3315__auto____$1;
    return h__3315__auto____$1
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    return self__.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3943__auto__ = self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null)
      }else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = self__.keys.slice();
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__16532 = null;
  var G__16532__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__16532__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__16532 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16532__2.call(this, self__, k);
      case 3:
        return G__16532__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__16532
}();
cljs.core.ObjMap.prototype.apply = function(self__, args16531) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args16531.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while(true) {
    if(cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__16533 = cljs.core.rest.call(null, keys__$1);
        var G__16534 = init__$2;
        keys__$1 = G__16533;
        init__$1 = G__16534;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__16530_SHARP_) {
      return cljs.core.vector.call(null, p1__16530_SHARP_, self__.strobj[p1__16530_SHARP_])
    }, self__.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    var new_keys = self__.keys.slice();
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash)
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(arr[i] == null) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__16535 = i + 2;
          i = G__16535;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(function() {
        var k_SINGLEQUOTE_ = arr[i];
        var and__3941__auto__ = k_SINGLEQUOTE_ instanceof cljs.core.Keyword;
        if(and__3941__auto__) {
          return kstr === k_SINGLEQUOTE_.fqn
        }else {
          return and__3941__auto__
        }
      }()) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__16536 = i + 2;
          i = G__16536;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(function() {
        var k_SINGLEQUOTE_ = arr[i];
        var and__3941__auto__ = k_SINGLEQUOTE_ instanceof cljs.core.Symbol;
        if(and__3941__auto__) {
          return kstr === k_SINGLEQUOTE_.str
        }else {
          return and__3941__auto__
        }
      }()) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__16537 = i + 2;
          i = G__16537;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(k === arr[i]) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__16538 = i + 2;
          i = G__16538;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, k, arr[i])) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__16539 = i + 2;
          i = G__16539;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if(k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k)
  }else {
    if(function() {
      var or__3943__auto__ = goog.isString(k);
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return typeof k === "number"
      }
    }()) {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k)
    }else {
      if(k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k)
      }else {
        if(k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_16540 = 0;
  while(true) {
    if(i_16540 < l) {
      narr[i_16540] = arr[i_16540];
      var G__16541 = i_16540 + 1;
      i_16540 = G__16541;
      continue
    }else {
    }
    break
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr
};
goog.provide("cljs.core.PersistentArrayMapSeq");
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/PersistentArrayMapSeq")
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return(self__.arr.length - self__.i) / 2
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.arr[self__.i], self__.arr[self__.i + 1]], true)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if(i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
  }else {
    return null
  }
};
goog.provide("cljs.core.PersistentArrayMap");
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, self__.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3315__auto__ = self__.__hash;
  if(!(h__3315__auto__ == null)) {
    return h__3315__auto__
  }else {
    var h__3315__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3315__auto____$1;
    return h__3315__auto____$1
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx === -1) {
    return not_found
  }else {
    return self__.arr[idx + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx === -1) {
    if(self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null)
    }else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll), k, v), self__.meta)
    }
  }else {
    if(v === self__.arr[idx + 1]) {
      return coll
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__16543 = self__.arr.slice();
          G__16543[idx + 1] = v;
          return G__16543
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__16544 = null;
  var G__16544__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__16544__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__16544 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16544__2.call(this, self__, k);
      case 3:
        return G__16544__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__16544
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args16542) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args16542.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__16545 = i + 2;
        var G__16546 = init__$2;
        i = G__16545;
        init__$1 = G__16546;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if(new_len === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while(true) {
        if(s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null)
        }else {
          if(cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__16547 = s + 2;
            var G__16548 = d;
            s = G__16547;
            d = G__16548;
            continue
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__16549 = s + 2;
              var G__16550 = d + 2;
              s = G__16549;
              d = G__16550;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash)
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : arr.slice();
  var cnt = arr__$1.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null)
};
goog.provide("cljs.core.TransientArrayMap");
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__16551_16553 = self__.arr;
      G__16551_16553.pop();
      G__16551_16553.pop();
      self__.len = self__.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx === -1) {
      if(self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val)
      }
    }else {
      if(val === self__.arr[idx + 1]) {
        return tcoll
      }else {
        self__.arr[idx + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    if(function() {
      var G__16552 = o;
      if(G__16552) {
        if(function() {
          var or__3943__auto__ = G__16552.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__16552.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__16552.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__16552)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__16552)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__16554 = cljs.core.next.call(null, es);
          var G__16555 = tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__$1, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__16554;
          tcoll__$1 = G__16555;
          continue
        }else {
          return tcoll__$1
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx === -1) {
      return not_found
    }else {
      return self__.arr[idx + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr)
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while(true) {
    if(i < len) {
      var G__16556 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__16557 = i + 2;
      out = G__16556;
      i = G__16557;
      continue
    }else {
      return out
    }
    break
  }
};
goog.provide("cljs.core.Box");
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__3438__auto__, writer__3439__auto__, opts__3440__auto__) {
  return cljs.core._write.call(null, writer__3439__auto__, "cljs.core/Box")
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val)
};
cljs.core.key_test = function key_test(key, other) {
  if(key === other) {
    return true
  }else {
    if(cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other)
      }else {
        return null
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__16560 = arr.slice();
    G__16560[i] = a;
    return G__16560
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__16561 = arr.slice();
    G__16561[i] = a;
    G__16561[j] = b;
    return G__16561
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if(!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1])
        }else {
          var node = arr[i + 1];
          if(!(node == null)) {
            return node.kv_reduce(f, init__$1)
          }else {
            return init__$1
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__16562 = i + 2;
        var G__16563 = init__$2;
        i = G__16562;
        init__$1 = G__16563;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
goog.provide("cljs.core.BitmapIndexedNode");
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if(self__.bitmap === bit) {
    return null
  }else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable
    }else {
      if(n >= 16) {
        var nodes = new Array(32);
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_16564 = 0;
        var j_16565 = 0;
        while(true) {
          if(i_16564 < 32) {
            if((self__.bitmap >>> i_16564 & 1) === 0) {
              var G__16566 = i_16564 + 1;
              var G__16567 = j_16565;
              i_16564 = G__16566;
              j_16565 = G__16567;
              continue
            }else {
              nodes[i_16564] = !(self__.arr[j_16565] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_16565]), self__.arr[j_16565], self__.arr[j_16565 + 1], added_leaf_QMARK_) : self__.arr[j_16565 + 1];
              var G__16568 = i_16564 + 1;
              var G__16569 = j_16565 + 2;
              i_16564 = G__16568;
              j_16565 = G__16569;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val)
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil, val_or_node], true)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(n >= 16) {
      var nodes = new Array(32);
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_16570 = 0;
      var j_16571 = 0;
      while(true) {
        if(i_16570 < 32) {
          if((self__.bitmap >>> i_16570 & 1) === 0) {
            var G__16572 = i_16570 + 1;
            var G__16573 = j_16571;
            i_16570 = G__16572;
            j_16571 = G__16573;
            continue
          }else {
            nodes[i_16570] = !(self__.arr[j_16571] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_16571]), self__.arr[j_16571], self__.arr[j_16571 + 1], added_leaf_QMARK_) : self__.arr[j_16571 + 1];
            var G__16574 = i_16570 + 1;
            var G__16575 = j_16571 + 2;
            i_16570 = G__16574;
            j_16571 = G__16575;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes)
    }else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr)
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val))
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr)
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, new Array(0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while(true) {
    if(i < len) {
      if(function() {
        var and__3941__auto__ = !(i === idx);
        if(and__3941__auto__) {
          return!(arr[i] == null)
        }else {
          return and__3941__auto__
        }
      }()) {
        new_arr[j] = arr[i];
        var G__16576 = i + 1;
        var G__16577 = j + 2;
        var G__16578 = bitmap | 1 << i;
        i = G__16576;
        j = G__16577;
        bitmap = G__16578;
        continue
      }else {
        var G__16579 = i + 1;
        var G__16580 = j;
        var G__16581 = bitmap;
        i = G__16579;
        j = G__16580;
        bitmap = G__16581;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr)
    }
    break
  }
};
goog.provide("cljs.core.ArrayNode");
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable
  }else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return inode
  }else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx)
        }else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    return new cljs.core.ArrayNode(e, self__.cnt, self__.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var node = self__.arr[i];
      if(!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2)
        }else {
          var G__16582 = i + 1;
          var G__16583 = init__$2;
          i = G__16582;
          init__$1 = G__16583;
          continue
        }
      }else {
        var G__16584 = i + 1;
        var G__16585 = init__$1;
        i = G__16584;
        init__$1 = G__16585;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx)
        }else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }else {
          return null
        }
      }
    }
  }else {
    return inode
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr)
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while(true) {
    if(i < lim) {
      if(cljs.core.key_test.call(null, key, arr[i])) {
        return i
      }else {
        var G__16586 = i + 2;
        i = G__16586;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
goog.provide("cljs.core.HashCollisionNode");
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      if(self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable
      }else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr)
      }
    }else {
      if(self__.arr[idx + 1] === val) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    removed_leaf_QMARK_[0] = true;
    if(self__.cnt === 1) {
      return null
    }else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return cljs.core.PersistentVector.fromArray([self__.arr[idx], self__.arr[idx + 1]], true)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    if(self__.cnt === 1) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      var len = self__.arr.length;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr)
    }else {
      if(cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode
      }else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1]
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode
  }else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array)
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr)
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node
}();
goog.provide("cljs.core.NodeSeq");
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3315__auto__ = self__.__hash;
  if(!(h__3315__auto__ == null)) {
    return h__3315__auto__
  }else {
    var h__3315__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3315__auto____$1;
    return h__3315__auto____$1
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  if(self__.s == null) {
    return cljs.core.PersistentVector.fromArray([self__.nodes[self__.i], self__.nodes[self__.i + 1]], true)
  }else {
    return cljs.core.first.call(null, self__.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          if(!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null)
          }else {
            var temp__4090__auto__ = nodes[j + 1];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if(cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null)
              }else {
                var G__16587 = j + 2;
                j = G__16587;
                continue
              }
            }else {
              var G__16588 = j + 2;
              j = G__16588;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
goog.provide("cljs.core.ArrayNodeSeq");
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3315__auto__ = self__.__hash;
  if(!(h__3315__auto__ == null)) {
    return h__3315__auto__
  }else {
    var h__3315__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3315__auto____$1;
    return h__3315__auto____$1
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          var temp__4090__auto__ = nodes[j];
          if(cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if(cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null)
            }else {
              var G__16589 = j + 1;
              j = G__16589;
              continue
            }
          }else {
            var G__16590 = j + 1;
            j = G__16590;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
goog.provide("cljs.core.PersistentHashMap");
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3315__auto__ = self__.__hash;
  if(!(h__3315__auto__ == null)) {
    return h__3315__auto__
  }else {
    var h__3315__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3315__auto____$1;
    return h__3315__auto____$1
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(k == null) {
    if(function() {
      var and__3941__auto__ = self__.has_nil_QMARK_;
      if(and__3941__auto__) {
        return v === self__.nil_val
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if(new_root === self__.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  if(k == null) {
    return self__.has_nil_QMARK_
  }else {
    if(self__.root == null) {
      return false
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__16592 = null;
  var G__16592__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__16592__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__16592 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16592__2.call(this, self__, k);
      case 3:
        return G__16592__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__16592
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args16591) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args16591.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    if(!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if(self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, self__.nil_val], true), s)
    }else {
      return s
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(self__.root == null) {
      return coll
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root === self__.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash)
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var G__16593 = i + 1;
      var G__16594 = cljs.core.assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__16593;
      out = G__16594;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out)
    }
    break
  }
};
goog.provide("cljs.core.TransientHashMap");
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return null
    }
  }else {
    if(self__.root == null) {
      return null
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.edit) {
    return self__.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(function() {
      var G__16595 = o;
      if(G__16595) {
        if(function() {
          var or__3943__auto__ = G__16595.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__16595.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__16595.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__16595)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__16595)
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__16596 = cljs.core.next.call(null, es);
          var G__16597 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__16596;
          tcoll__$1 = G__16597;
          continue
        }else {
          return tcoll__$1
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.nil_val === v) {
      }else {
        self__.nil_val = v
      }
      if(self__.has_nil_QMARK_) {
      }else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true
      }
      return tcoll
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if(node === self__.root) {
      }else {
        self__.root = node
      }
      if(added_leaf_QMARK_.val) {
        self__.count = self__.count + 1
      }else {
      }
      return tcoll
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll
      }else {
        return tcoll
      }
    }else {
      if(self__.root == null) {
        return tcoll
      }else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if(node === self__.root) {
        }else {
          self__.root = node
        }
        if(cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1
        }else {
        }
        return tcoll
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val)
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while(true) {
    if(!(t == null)) {
      var G__16598 = ascending_QMARK_ ? t.left : t.right;
      var G__16599 = cljs.core.conj.call(null, stack__$1, t);
      t = G__16598;
      stack__$1 = G__16599;
      continue
    }else {
      return stack__$1
    }
    break
  }
};
goog.provide("cljs.core.PersistentTreeMapSeq");
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3315__auto__ = self__.__hash;
  if(!(h__3315__auto__ == null)) {
    return h__3315__auto__
  }else {
    var h__3315__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3315__auto____$1;
    return h__3315__auto____$1
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return self__.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  return cljs.core.peek.call(null, self__.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if(!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash)
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3941__auto__ = right instanceof cljs.core.RedNode;
        if(and__3941__auto__) {
          return right.left instanceof cljs.core.BlackNode
        }else {
          return and__3941__auto__
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3941__auto__ = left instanceof cljs.core.RedNode;
        if(and__3941__auto__) {
          return left.right instanceof cljs.core.BlackNode
        }else {
          return and__3941__auto__
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2)
    }else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if(cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3)
      }else {
        return init__$3
      }
    }
  }
};
goog.provide("cljs.core.BlackNode");
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3315__auto__ = self__.__hash;
  if(!(h__3315__auto__ == null)) {
    return h__3315__auto__
  }else {
    var h__3315__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3315__auto____$1;
    return h__3315__auto____$1
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__16601 = null;
  var G__16601__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(node, k)
  };
  var G__16601__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(node, k, not_found)
  };
  G__16601 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16601__2.call(this, self__, k);
      case 3:
        return G__16601__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__16601
}();
cljs.core.BlackNode.prototype.apply = function(self__, args16600) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args16600.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key, self__.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  return self__.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node)
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash)
};
goog.provide("cljs.core.RedNode");
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3315__auto__ = self__.__hash;
  if(!(h__3315__auto__ == null)) {
    return h__3315__auto__
  }else {
    var h__3315__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3315__auto____$1;
    return h__3315__auto____$1
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__16603 = null;
  var G__16603__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(node, k)
  };
  var G__16603__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(node, k, not_found)
  };
  G__16603 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16603__2.call(this, self__, k);
      case 3:
        return G__16603__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__16603
}();
cljs.core.RedNode.prototype.apply = function(self__, args16602) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args16602.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key, self__.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  return self__.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null)
  }else {
    if(self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null)
  }else {
    if(self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash)
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return null
    }else {
      if(c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins == null)) {
          return tree.add_left(ins)
        }else {
          return null
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins == null)) {
            return tree.add_right(ins)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(left instanceof cljs.core.RedNode) {
        if(right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if(app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if(app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3943__auto__ = !(del == null);
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3943__auto__ = !(del == null);
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if(c === 0) {
    return tree.replace(tk, v, tree.left, tree.right)
  }else {
    if(c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
goog.provide("cljs.core.PersistentTreeMap");
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3315__auto__ = self__.__hash;
  if(!(h__3315__auto__ == null)) {
    return h__3315__auto__
  }else {
    var h__3315__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3315__auto____$1;
    return h__3315__auto____$1
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var n = coll.entry_at(k);
  if(!(n == null)) {
    return n.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if(t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if(cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__16605 = null;
  var G__16605__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__16605__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__16605 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16605__2.call(this, self__, k);
      case 3:
        return G__16605__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__16605
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args16604) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args16604.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  if(!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while(true) {
    if(!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if(c === 0) {
        return t
      }else {
        if(c < 0) {
          var G__16606 = t.left;
          t = G__16606;
          continue
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__16607 = t.right;
            t = G__16607;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  if(self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while(true) {
      if(!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if(c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c < 0) {
              var G__16608 = cljs.core.conj.call(null, stack, t);
              var G__16609 = t.left;
              stack = G__16608;
              t = G__16609;
              continue
            }else {
              var G__16610 = stack;
              var G__16611 = t.right;
              stack = G__16610;
              t = G__16611;
              continue
            }
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if(c > 0) {
                var G__16612 = cljs.core.conj.call(null, stack, t);
                var G__16613 = t.right;
                stack = G__16612;
                t = G__16613;
                continue
              }else {
                var G__16614 = stack;
                var G__16615 = t.left;
                stack = G__16614;
                t = G__16615;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack == null) {
          return null
        }else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null)
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  return self__.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if(t == null) {
    if(cljs.core.nth.call(null, found, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null)
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash)
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in$) {
        var G__16616 = cljs.core.nnext.call(null, in$);
        var G__16617 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__16616;
        out = G__16617;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__16618) {
    var keyvals = cljs.core.seq(arglist__16618);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__16619) {
    var keyvals = cljs.core.seq(arglist__16619);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = {};
    var kvs = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__16620 = cljs.core.nnext.call(null, kvs);
        kvs = G__16620;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__16621) {
    var keyvals = cljs.core.seq(arglist__16621);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in$) {
        var G__16622 = cljs.core.nnext.call(null, in$);
        var G__16623 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__16622;
        out = G__16623;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__16624) {
    var keyvals = cljs.core.seq(arglist__16624);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while(true) {
      if(in$) {
        var G__16625 = cljs.core.nnext.call(null, in$);
        var G__16626 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__16625;
        out = G__16626;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__16627) {
    var comparator = cljs.core.first(arglist__16627);
    var keyvals = cljs.core.rest(arglist__16627);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
goog.provide("cljs.core.KeySeq");
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/KeySeq")
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__16628 = self__.mseq;
    if(G__16628) {
      if(function() {
        var or__3943__auto__ = G__16628.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__16628.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__16628.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__16628)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__16628)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me)
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__16629 = self__.mseq;
    if(G__16629) {
      if(function() {
        var or__3943__auto__ = G__16629.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__16629.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__16629.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__16629)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__16629)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta)
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta)
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
goog.provide("cljs.core.ValSeq");
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/ValSeq")
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__16630 = self__.mseq;
    if(G__16630) {
      if(function() {
        var or__3943__auto__ = G__16630.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__16630.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__16630.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__16630)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__16630)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me)
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__16631 = self__.mseq;
    if(G__16631) {
      if(function() {
        var or__3943__auto__ = G__16631.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__16631.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__16631.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__16631)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__16631)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta)
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta)
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__16632_SHARP_, p2__16633_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3943__auto__ = p1__16632_SHARP_;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.PersistentArrayMap.EMPTY
          }
        }(), p2__16633_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__16634) {
    var maps = cljs.core.seq(arglist__16634);
    return merge__delegate(maps)
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v))
        }else {
          return cljs.core.assoc.call(null, m, k, v)
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3943__auto__ = m1;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return cljs.core.PersistentArrayMap.EMPTY
            }
          }(), cljs.core.seq.call(null, m2))
        }
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__16635) {
    var f = cljs.core.first(arglist__16635);
    var maps = cljs.core.rest(arglist__16635);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__16636 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__16637 = cljs.core.next.call(null, keys);
      ret = G__16636;
      keys = G__16637;
      continue
    }else {
      return ret
    }
    break
  }
};
goog.provide("cljs.core.PersistentHashSet");
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3315__auto__ = self__.__hash;
  if(!(h__3315__auto__ == null)) {
    return h__3315__auto__
  }else {
    var h__3315__auto____$1 = cljs.core.hash_iset.call(null, coll);
    self__.__hash = h__3315__auto____$1;
    return h__3315__auto____$1
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__16640 = null;
  var G__16640__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__16640__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__16640 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16640__2.call(this, self__, k);
      case 3:
        return G__16640__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__16640
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args16639) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args16639.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.keys.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._count.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var and__3941__auto__ = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto__) {
    var and__3941__auto____$1 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____$1) {
      return cljs.core.every_QMARK_.call(null, function(p1__16638_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__16638_SHARP_)
      }, other)
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash)
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if(len / 2 <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : items.slice();
    return new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.fromArray.call(null, arr, true), null)
  }else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while(true) {
      if(i < len) {
        var G__16641 = i + 2;
        var G__16642 = cljs.core.conj_BANG_.call(null, out, items[i]);
        i = G__16641;
        out = G__16642;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
goog.provide("cljs.core.TransientHashSet");
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__16644 = null;
  var G__16644__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__16644__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__16644 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16644__2.call(this, self__, k);
      case 3:
        return G__16644__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__16644
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args16643) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args16643.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  if(cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  return cljs.core.count.call(null, self__.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null)
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map)
};
goog.provide("cljs.core.PersistentTreeSet");
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3315__auto__ = self__.__hash;
  if(!(h__3315__auto__ == null)) {
    return h__3315__auto__
  }else {
    var h__3315__auto____$1 = cljs.core.hash_iset.call(null, coll);
    self__.__hash = h__3315__auto____$1;
    return h__3315__auto____$1
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var n = self__.tree_map.entry_at(v);
  if(!(n == null)) {
    return n.key
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__16647 = null;
  var G__16647__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__16647__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__16647 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16647__2.call(this, self__, k);
      case 3:
        return G__16647__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__16647
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args16646) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args16646.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._comparator.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.keys.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.count.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var and__3941__auto__ = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto__) {
    var and__3941__auto____$1 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____$1) {
      return cljs.core.every_QMARK_.call(null, function(p1__16645_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__16645_SHARP_)
      }, other)
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash)
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__3648__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while(true) {
      if(i < a__3648__auto__.length) {
        var G__16648 = i + 1;
        var G__16649 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__16648;
        res = G__16649;
        continue
      }else {
        return res
      }
      break
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret)
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if(in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY
  }else {
    if(in$ instanceof cljs.core.IndexedSeq) {
      return cljs.core.set_from_indexed_seq.call(null, in$)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while(true) {
          if(!(in$__$1 == null)) {
            var G__16650 = cljs.core._next.call(null, in$__$1);
            var G__16651 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__16650;
            out = G__16651;
            continue
          }else {
            return cljs.core._persistent_BANG_.call(null, out)
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__16652__delegate = function(keys) {
      return cljs.core.set.call(null, keys)
    };
    var G__16652 = function(var_args) {
      var keys = null;
      if(arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__16652__delegate.call(this, keys)
    };
    G__16652.cljs$lang$maxFixedArity = 0;
    G__16652.cljs$lang$applyTo = function(arglist__16653) {
      var keys = cljs.core.seq(arglist__16653);
      return G__16652__delegate(keys)
    };
    G__16652.cljs$core$IFn$_invoke$arity$variadic = G__16652__delegate;
    return G__16652
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__16654) {
    var keys = cljs.core.seq(arglist__16654);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__16655) {
    var comparator = cljs.core.first(arglist__16655);
    var keys = cljs.core.rest(arglist__16655);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__16656_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__16656_SHARP_);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e)
      }else {
        return p1__16656_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__16663, seen__$1) {
        while(true) {
          var vec__16664 = p__16663;
          var f = cljs.core.nth.call(null, vec__16664, 0, null);
          var xs__$1 = vec__16664;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if(temp__4092__auto__) {
            var s = temp__4092__auto__;
            if(cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__16665 = cljs.core.rest.call(null, s);
              var G__16666 = seen__$1;
              p__16663 = G__16665;
              seen__$1 = G__16666;
              continue
            }else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null, null)
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while(true) {
    if(cljs.core.next.call(null, s__$1)) {
      var G__16667 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__16668 = cljs.core.next.call(null, s__$1);
      ret = G__16667;
      s__$1 = G__16668;
      continue
    }else {
      return cljs.core.seq.call(null, ret)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(function() {
    var G__16670 = x;
    if(G__16670) {
      if(function() {
        var or__3943__auto__ = G__16670.cljs$lang$protocol_mask$partition1$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__16670.cljs$core$INamed$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._name.call(null, x)
  }else {
    if(typeof x === "string") {
      return x
    }else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var G__16672 = x;
    if(G__16672) {
      if(function() {
        var or__3943__auto__ = G__16672.cljs$lang$protocol_mask$partition1$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__16672.cljs$core$INamed$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._namespace.call(null, x)
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3941__auto__ = ks;
      if(and__3941__auto__) {
        return vs
      }else {
        return and__3941__auto__
      }
    }()) {
      var G__16673 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__16674 = cljs.core.next.call(null, ks);
      var G__16675 = cljs.core.next.call(null, vs);
      map = G__16673;
      ks = G__16674;
      vs = G__16675;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, map)
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__16678__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__16676_SHARP_, p2__16677_SHARP_) {
        return max_key.call(null, k, p1__16676_SHARP_, p2__16677_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__16678 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__16678__delegate.call(this, k, x, y, more)
    };
    G__16678.cljs$lang$maxFixedArity = 3;
    G__16678.cljs$lang$applyTo = function(arglist__16679) {
      var k = cljs.core.first(arglist__16679);
      arglist__16679 = cljs.core.next(arglist__16679);
      var x = cljs.core.first(arglist__16679);
      arglist__16679 = cljs.core.next(arglist__16679);
      var y = cljs.core.first(arglist__16679);
      var more = cljs.core.rest(arglist__16679);
      return G__16678__delegate(k, x, y, more)
    };
    G__16678.cljs$core$IFn$_invoke$arity$variadic = G__16678__delegate;
    return G__16678
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__16682__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__16680_SHARP_, p2__16681_SHARP_) {
        return min_key.call(null, k, p1__16680_SHARP_, p2__16681_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__16682 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__16682__delegate.call(this, k, x, y, more)
    };
    G__16682.cljs$lang$maxFixedArity = 3;
    G__16682.cljs$lang$applyTo = function(arglist__16683) {
      var k = cljs.core.first(arglist__16683);
      arglist__16683 = cljs.core.next(arglist__16683);
      var x = cljs.core.first(arglist__16683);
      arglist__16683 = cljs.core.next(arglist__16683);
      var y = cljs.core.first(arglist__16683);
      var more = cljs.core.rest(arglist__16683);
      return G__16682__delegate(k, x, y, more)
    };
    G__16682.cljs$core$IFn$_invoke$arity$variadic = G__16682__delegate;
    return G__16682
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)))
      }else {
        return null
      }
    }, null, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, null, cljs.core._GT__EQ_, null], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__16686 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__16686, 0, null);
        var s = vec__16686;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__16687 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__16687, 0, null);
      var s = vec__16687;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, null, cljs.core._LT__EQ_, null], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__16690 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__16690, 0, null);
        var s = vec__16690;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__16691 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__16691, 0, null);
      var s = vec__16691;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq
}();
goog.provide("cljs.core.Range");
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var h__3315__auto__ = self__.__hash;
  if(!(h__3315__auto__ == null)) {
    return h__3315__auto__
  }else {
    var h__3315__auto____$1 = cljs.core.hash_coll.call(null, rng);
    self__.__hash = h__3315__auto____$1;
    return h__3315__auto____$1
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  if(self__.step > 0) {
    if(self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }else {
    if(self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  if(self__.step > 0) {
    if(self__.start < self__.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(self__.start > self__.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((self__.end - self__.start) / self__.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  return self__.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  return self__.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return self__.start + n * self__.step
  }else {
    if(function() {
      var and__3941__auto__ = self__.start > self__.end;
      if(and__3941__auto__) {
        return self__.step === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return self__.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return self__.start + n * self__.step
  }else {
    if(function() {
      var and__3941__auto__ = self__.start > self__.end;
      if(and__3941__auto__) {
        return self__.step === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return self__.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash)
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)))
    }else {
      return null
    }
  }, null, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv) {
        return function(p1__16692_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__16692_SHARP_))
        }
      }(fst, fv), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))))
    }else {
      return null
    }
  }, null, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s))
      }else {
        return null
      }
    }, null, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__16703 = null;
      var G__16703__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__16703__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__16703__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__16703__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__16703__4 = function() {
        var G__16704__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__16704 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__16704__delegate.call(this, x, y, z, args)
        };
        G__16704.cljs$lang$maxFixedArity = 3;
        G__16704.cljs$lang$applyTo = function(arglist__16705) {
          var x = cljs.core.first(arglist__16705);
          arglist__16705 = cljs.core.next(arglist__16705);
          var y = cljs.core.first(arglist__16705);
          arglist__16705 = cljs.core.next(arglist__16705);
          var z = cljs.core.first(arglist__16705);
          var args = cljs.core.rest(arglist__16705);
          return G__16704__delegate(x, y, z, args)
        };
        G__16704.cljs$core$IFn$_invoke$arity$variadic = G__16704__delegate;
        return G__16704
      }();
      G__16703 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__16703__0.call(this);
          case 1:
            return G__16703__1.call(this, x);
          case 2:
            return G__16703__2.call(this, x, y);
          case 3:
            return G__16703__3.call(this, x, y, z);
          default:
            return G__16703__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16703.cljs$lang$maxFixedArity = 3;
      G__16703.cljs$lang$applyTo = G__16703__4.cljs$lang$applyTo;
      return G__16703
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__16706 = null;
      var G__16706__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__16706__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__16706__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__16706__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__16706__4 = function() {
        var G__16707__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__16707 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__16707__delegate.call(this, x, y, z, args)
        };
        G__16707.cljs$lang$maxFixedArity = 3;
        G__16707.cljs$lang$applyTo = function(arglist__16708) {
          var x = cljs.core.first(arglist__16708);
          arglist__16708 = cljs.core.next(arglist__16708);
          var y = cljs.core.first(arglist__16708);
          arglist__16708 = cljs.core.next(arglist__16708);
          var z = cljs.core.first(arglist__16708);
          var args = cljs.core.rest(arglist__16708);
          return G__16707__delegate(x, y, z, args)
        };
        G__16707.cljs$core$IFn$_invoke$arity$variadic = G__16707__delegate;
        return G__16707
      }();
      G__16706 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__16706__0.call(this);
          case 1:
            return G__16706__1.call(this, x);
          case 2:
            return G__16706__2.call(this, x, y);
          case 3:
            return G__16706__3.call(this, x, y, z);
          default:
            return G__16706__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16706.cljs$lang$maxFixedArity = 3;
      G__16706.cljs$lang$applyTo = G__16706__4.cljs$lang$applyTo;
      return G__16706
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__16709 = null;
      var G__16709__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__16709__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__16709__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__16709__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__16709__4 = function() {
        var G__16710__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__16710 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__16710__delegate.call(this, x, y, z, args)
        };
        G__16710.cljs$lang$maxFixedArity = 3;
        G__16710.cljs$lang$applyTo = function(arglist__16711) {
          var x = cljs.core.first(arglist__16711);
          arglist__16711 = cljs.core.next(arglist__16711);
          var y = cljs.core.first(arglist__16711);
          arglist__16711 = cljs.core.next(arglist__16711);
          var z = cljs.core.first(arglist__16711);
          var args = cljs.core.rest(arglist__16711);
          return G__16710__delegate(x, y, z, args)
        };
        G__16710.cljs$core$IFn$_invoke$arity$variadic = G__16710__delegate;
        return G__16710
      }();
      G__16709 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__16709__0.call(this);
          case 1:
            return G__16709__1.call(this, x);
          case 2:
            return G__16709__2.call(this, x, y);
          case 3:
            return G__16709__3.call(this, x, y, z);
          default:
            return G__16709__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16709.cljs$lang$maxFixedArity = 3;
      G__16709.cljs$lang$applyTo = G__16709__4.cljs$lang$applyTo;
      return G__16709
    }()
  };
  var juxt__4 = function() {
    var G__16712__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__16713 = null;
        var G__16713__0 = function() {
          return cljs.core.reduce.call(null, function(p1__16693_SHARP_, p2__16694_SHARP_) {
            return cljs.core.conj.call(null, p1__16693_SHARP_, p2__16694_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__16713__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__16695_SHARP_, p2__16696_SHARP_) {
            return cljs.core.conj.call(null, p1__16695_SHARP_, p2__16696_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__16713__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__16697_SHARP_, p2__16698_SHARP_) {
            return cljs.core.conj.call(null, p1__16697_SHARP_, p2__16698_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__16713__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__16699_SHARP_, p2__16700_SHARP_) {
            return cljs.core.conj.call(null, p1__16699_SHARP_, p2__16700_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__16713__4 = function() {
          var G__16714__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__16701_SHARP_, p2__16702_SHARP_) {
              return cljs.core.conj.call(null, p1__16701_SHARP_, cljs.core.apply.call(null, p2__16702_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__$1)
          };
          var G__16714 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__16714__delegate.call(this, x, y, z, args)
          };
          G__16714.cljs$lang$maxFixedArity = 3;
          G__16714.cljs$lang$applyTo = function(arglist__16715) {
            var x = cljs.core.first(arglist__16715);
            arglist__16715 = cljs.core.next(arglist__16715);
            var y = cljs.core.first(arglist__16715);
            arglist__16715 = cljs.core.next(arglist__16715);
            var z = cljs.core.first(arglist__16715);
            var args = cljs.core.rest(arglist__16715);
            return G__16714__delegate(x, y, z, args)
          };
          G__16714.cljs$core$IFn$_invoke$arity$variadic = G__16714__delegate;
          return G__16714
        }();
        G__16713 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__16713__0.call(this);
            case 1:
              return G__16713__1.call(this, x);
            case 2:
              return G__16713__2.call(this, x, y);
            case 3:
              return G__16713__3.call(this, x, y, z);
            default:
              return G__16713__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__16713.cljs$lang$maxFixedArity = 3;
        G__16713.cljs$lang$applyTo = G__16713__4.cljs$lang$applyTo;
        return G__16713
      }()
    };
    var G__16712 = function(f, g, h, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__16712__delegate.call(this, f, g, h, fs)
    };
    G__16712.cljs$lang$maxFixedArity = 3;
    G__16712.cljs$lang$applyTo = function(arglist__16716) {
      var f = cljs.core.first(arglist__16716);
      arglist__16716 = cljs.core.next(arglist__16716);
      var g = cljs.core.first(arglist__16716);
      arglist__16716 = cljs.core.next(arglist__16716);
      var h = cljs.core.first(arglist__16716);
      var fs = cljs.core.rest(arglist__16716);
      return G__16712__delegate(f, g, h, fs)
    };
    G__16712.cljs$core$IFn$_invoke$arity$variadic = G__16712__delegate;
    return G__16712
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__16717 = cljs.core.next.call(null, coll);
        coll = G__16717;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = cljs.core.seq.call(null, coll);
        if(and__3941__auto__) {
          return n > 0
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__16718 = n - 1;
        var G__16719 = cljs.core.next.call(null, coll);
        n = G__16718;
        coll = G__16719;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if(matches == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if(cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, match_data, re_seq.call(null, re, post_match))
    }, null, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__16721 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__16721, 0, null);
  var flags = cljs.core.nth.call(null, vec__16721, 1, null);
  var pattern = cljs.core.nth.call(null, vec__16721, 2, null);
  return new RegExp(pattern, flags)
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  cljs.core._write.call(null, writer, begin);
  if(cljs.core.seq.call(null, coll)) {
    print_one.call(null, cljs.core.first.call(null, coll), writer, opts)
  }else {
  }
  var seq__16726_16730 = cljs.core.seq.call(null, cljs.core.next.call(null, coll));
  var chunk__16727_16731 = null;
  var count__16728_16732 = 0;
  var i__16729_16733 = 0;
  while(true) {
    if(i__16729_16733 < count__16728_16732) {
      var o_16734 = cljs.core._nth.call(null, chunk__16727_16731, i__16729_16733);
      cljs.core._write.call(null, writer, sep);
      print_one.call(null, o_16734, writer, opts);
      var G__16735 = seq__16726_16730;
      var G__16736 = chunk__16727_16731;
      var G__16737 = count__16728_16732;
      var G__16738 = i__16729_16733 + 1;
      seq__16726_16730 = G__16735;
      chunk__16727_16731 = G__16736;
      count__16728_16732 = G__16737;
      i__16729_16733 = G__16738;
      continue
    }else {
      var temp__4092__auto___16739 = cljs.core.seq.call(null, seq__16726_16730);
      if(temp__4092__auto___16739) {
        var seq__16726_16740__$1 = temp__4092__auto___16739;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__16726_16740__$1)) {
          var c__3607__auto___16741 = cljs.core.chunk_first.call(null, seq__16726_16740__$1);
          var G__16742 = cljs.core.chunk_rest.call(null, seq__16726_16740__$1);
          var G__16743 = c__3607__auto___16741;
          var G__16744 = cljs.core.count.call(null, c__3607__auto___16741);
          var G__16745 = 0;
          seq__16726_16730 = G__16742;
          chunk__16727_16731 = G__16743;
          count__16728_16732 = G__16744;
          i__16729_16733 = G__16745;
          continue
        }else {
          var o_16746 = cljs.core.first.call(null, seq__16726_16740__$1);
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, o_16746, writer, opts);
          var G__16747 = cljs.core.next.call(null, seq__16726_16740__$1);
          var G__16748 = null;
          var G__16749 = 0;
          var G__16750 = 0;
          seq__16726_16730 = G__16747;
          chunk__16727_16731 = G__16748;
          count__16728_16732 = G__16749;
          i__16729_16733 = G__16750;
          continue
        }
      }else {
      }
    }
    break
  }
  return cljs.core._write.call(null, writer, end)
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__16755 = cljs.core.seq.call(null, ss);
    var chunk__16756 = null;
    var count__16757 = 0;
    var i__16758 = 0;
    while(true) {
      if(i__16758 < count__16757) {
        var s = cljs.core._nth.call(null, chunk__16756, i__16758);
        cljs.core._write.call(null, writer, s);
        var G__16759 = seq__16755;
        var G__16760 = chunk__16756;
        var G__16761 = count__16757;
        var G__16762 = i__16758 + 1;
        seq__16755 = G__16759;
        chunk__16756 = G__16760;
        count__16757 = G__16761;
        i__16758 = G__16762;
        continue
      }else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__16755);
        if(temp__4092__auto__) {
          var seq__16755__$1 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__16755__$1)) {
            var c__3607__auto__ = cljs.core.chunk_first.call(null, seq__16755__$1);
            var G__16763 = cljs.core.chunk_rest.call(null, seq__16755__$1);
            var G__16764 = c__3607__auto__;
            var G__16765 = cljs.core.count.call(null, c__3607__auto__);
            var G__16766 = 0;
            seq__16755 = G__16763;
            chunk__16756 = G__16764;
            count__16757 = G__16765;
            i__16758 = G__16766;
            continue
          }else {
            var s = cljs.core.first.call(null, seq__16755__$1);
            cljs.core._write.call(null, writer, s);
            var G__16767 = cljs.core.next.call(null, seq__16755__$1);
            var G__16768 = null;
            var G__16769 = 0;
            var G__16770 = 0;
            seq__16755 = G__16767;
            chunk__16756 = G__16768;
            count__16757 = G__16769;
            i__16758 = G__16770;
            continue
          }
        }else {
          return null
        }
      }
      break
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if(arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return write_all__delegate.call(this, writer, ss)
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__16771) {
    var writer = cljs.core.first(arglist__16771);
    var ss = cljs.core.rest(arglist__16771);
    return write_all__delegate(writer, ss)
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.char_escapes = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match]
  })), cljs.core.str('"')].join("")
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if(obj == null) {
    return cljs.core._write.call(null, writer, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e")
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = function() {
              var G__16775 = obj;
              if(G__16775) {
                if(function() {
                  var or__3943__auto__ = G__16775.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3943__auto__) {
                    return or__3943__auto__
                  }else {
                    return G__16775.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__16775.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__16775)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__16775)
              }
            }();
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ")
        }else {
        }
        if(obj == null) {
          return cljs.core._write.call(null, writer, "nil")
        }else {
          if(obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts)
          }else {
            if(function() {
              var G__16776 = obj;
              if(G__16776) {
                if(function() {
                  var or__3943__auto__ = G__16776.cljs$lang$protocol_mask$partition0$ & 2147483648;
                  if(or__3943__auto__) {
                    return or__3943__auto__
                  }else {
                    return G__16776.cljs$core$IPrintWithWriter$
                  }
                }()) {
                  return true
                }else {
                  return false
                }
              }else {
                return false
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts)
            }else {
              if(function() {
                var or__3943__auto__ = cljs.core.type.call(null, obj) === Boolean;
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return typeof obj === "number"
                }
              }()) {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""))
              }else {
                if(obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#\x3cArray [", ", ", "]\x3e", opts, obj)
                }else {
                  if(goog.isString(obj)) {
                    if(cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).call(null, opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj))
                    }else {
                      return cljs.core._write.call(null, writer, obj)
                    }
                  }else {
                    if(cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e")
                    }else {
                      if(obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while(true) {
                            if(cljs.core.count.call(null, ns) < len) {
                              var G__16778 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__16778;
                              continue
                            }else {
                              return ns
                            }
                            break
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"')
                      }else {
                        if(cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj))) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"')
                        }else {
                          if(function() {
                            var G__16777 = obj;
                            if(G__16777) {
                              if(function() {
                                var or__3943__auto__ = G__16777.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if(or__3943__auto__) {
                                  return or__3943__auto__
                                }else {
                                  return G__16777.cljs$core$IPrintWithWriter$
                                }
                              }()) {
                                return true
                              }else {
                                if(!G__16777.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.type_satisfies_.call(null, cljs.core.IPrintWithWriter, G__16777)
                                }else {
                                  return false
                                }
                              }
                            }else {
                              return cljs.core.type_satisfies_.call(null, cljs.core.IPrintWithWriter, G__16777)
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts)
                          }else {
                            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e")
                            }else {
                              return null
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__16783 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__16784 = null;
  var count__16785 = 0;
  var i__16786 = 0;
  while(true) {
    if(i__16786 < count__16785) {
      var obj = cljs.core._nth.call(null, chunk__16784, i__16786);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__16787 = seq__16783;
      var G__16788 = chunk__16784;
      var G__16789 = count__16785;
      var G__16790 = i__16786 + 1;
      seq__16783 = G__16787;
      chunk__16784 = G__16788;
      count__16785 = G__16789;
      i__16786 = G__16790;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__16783);
      if(temp__4092__auto__) {
        var seq__16783__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__16783__$1)) {
          var c__3607__auto__ = cljs.core.chunk_first.call(null, seq__16783__$1);
          var G__16791 = cljs.core.chunk_rest.call(null, seq__16783__$1);
          var G__16792 = c__3607__auto__;
          var G__16793 = cljs.core.count.call(null, c__3607__auto__);
          var G__16794 = 0;
          seq__16783 = G__16791;
          chunk__16784 = G__16792;
          count__16785 = G__16793;
          i__16786 = G__16794;
          continue
        }else {
          var obj = cljs.core.first.call(null, seq__16783__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__16795 = cljs.core.next.call(null, seq__16783__$1);
          var G__16796 = null;
          var G__16797 = 0;
          var G__16798 = 0;
          seq__16783 = G__16795;
          chunk__16784 = G__16796;
          count__16785 = G__16797;
          i__16786 = G__16798;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return""
  }else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("")
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return"\n"
  }else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("")
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts))
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__16799) {
    var objs = cljs.core.seq(arglist__16799);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__16800) {
    var objs = cljs.core.seq(arglist__16800);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__16801) {
    var objs = cljs.core.seq(arglist__16801);
    return pr__delegate(objs)
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__16802) {
    var objs = cljs.core.seq(arglist__16802);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__16803) {
    var objs = cljs.core.seq(arglist__16803);
    return print_str__delegate(objs)
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__16804) {
    var objs = cljs.core.seq(arglist__16804);
    return println__delegate(objs)
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__16805) {
    var objs = cljs.core.seq(arglist__16805);
    return println_str__delegate(objs)
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__16806) {
    var objs = cljs.core.seq(arglist__16806);
    return prn__delegate(objs)
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core._write.call(null, writer, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
goog.provide("cljs.core.Atom");
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 2
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var seq__16807 = cljs.core.seq.call(null, self__.watches);
  var chunk__16808 = null;
  var count__16809 = 0;
  var i__16810 = 0;
  while(true) {
    if(i__16810 < count__16809) {
      var vec__16811 = cljs.core._nth.call(null, chunk__16808, i__16810);
      var key = cljs.core.nth.call(null, vec__16811, 0, null);
      var f = cljs.core.nth.call(null, vec__16811, 1, null);
      f.call(null, key, this$, oldval, newval);
      var G__16813 = seq__16807;
      var G__16814 = chunk__16808;
      var G__16815 = count__16809;
      var G__16816 = i__16810 + 1;
      seq__16807 = G__16813;
      chunk__16808 = G__16814;
      count__16809 = G__16815;
      i__16810 = G__16816;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__16807);
      if(temp__4092__auto__) {
        var seq__16807__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__16807__$1)) {
          var c__3607__auto__ = cljs.core.chunk_first.call(null, seq__16807__$1);
          var G__16817 = cljs.core.chunk_rest.call(null, seq__16807__$1);
          var G__16818 = c__3607__auto__;
          var G__16819 = cljs.core.count.call(null, c__3607__auto__);
          var G__16820 = 0;
          seq__16807 = G__16817;
          chunk__16808 = G__16818;
          count__16809 = G__16819;
          i__16810 = G__16820;
          continue
        }else {
          var vec__16812 = cljs.core.first.call(null, seq__16807__$1);
          var key = cljs.core.nth.call(null, vec__16812, 0, null);
          var f = cljs.core.nth.call(null, vec__16812, 1, null);
          f.call(null, key, this$, oldval, newval);
          var G__16821 = cljs.core.next.call(null, seq__16807__$1);
          var G__16822 = null;
          var G__16823 = 0;
          var G__16824 = 0;
          seq__16807 = G__16821;
          chunk__16808 = G__16822;
          count__16809 = G__16823;
          i__16810 = G__16824;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  return this$.watches = cljs.core.assoc.call(null, self__.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  return this$.watches = cljs.core.dissoc.call(null, self__.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  return self__.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  return self__.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  return o === other
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches)
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__16828__delegate = function(x, p__16825) {
      var map__16827 = p__16825;
      var map__16827__$1 = cljs.core.seq_QMARK_.call(null, map__16827) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16827) : map__16827;
      var validator = cljs.core.get.call(null, map__16827__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__16827__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null)
    };
    var G__16828 = function(x, var_args) {
      var p__16825 = null;
      if(arguments.length > 1) {
        p__16825 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__16828__delegate.call(this, x, p__16825)
    };
    G__16828.cljs$lang$maxFixedArity = 1;
    G__16828.cljs$lang$applyTo = function(arglist__16829) {
      var x = cljs.core.first(arglist__16829);
      var p__16825 = cljs.core.rest(arglist__16829);
      return G__16828__delegate(x, p__16825)
    };
    G__16828.cljs$core$IFn$_invoke$arity$variadic = G__16828__delegate;
    return G__16828
  }();
  atom = function(x, var_args) {
    var p__16825 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__4092__auto___16830 = a.validator;
  if(cljs.core.truth_(temp__4092__auto___16830)) {
    var validate_16831 = temp__4092__auto___16830;
    if(cljs.core.truth_(validate_16831.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
    }
  }else {
  }
  var old_value_16832 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value_16832, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__16833__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__16833 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(arguments.length > 5) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__16833__delegate.call(this, a, f, x, y, z, more)
    };
    G__16833.cljs$lang$maxFixedArity = 5;
    G__16833.cljs$lang$applyTo = function(arglist__16834) {
      var a = cljs.core.first(arglist__16834);
      arglist__16834 = cljs.core.next(arglist__16834);
      var f = cljs.core.first(arglist__16834);
      arglist__16834 = cljs.core.next(arglist__16834);
      var x = cljs.core.first(arglist__16834);
      arglist__16834 = cljs.core.next(arglist__16834);
      var y = cljs.core.first(arglist__16834);
      arglist__16834 = cljs.core.next(arglist__16834);
      var z = cljs.core.first(arglist__16834);
      var more = cljs.core.rest(arglist__16834);
      return G__16833__delegate(a, f, x, y, z, more)
    };
    G__16833.cljs$core$IFn$_invoke$arity$variadic = G__16833__delegate;
    return G__16833
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__16835) {
    var iref = cljs.core.first(arglist__16835);
    arglist__16835 = cljs.core.next(arglist__16835);
    var f = cljs.core.first(arglist__16835);
    var args = cljs.core.rest(arglist__16835);
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
goog.provide("cljs.core.Delay");
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).call(null, cljs.core.deref.call(null, self__.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).call(null, cljs.core.swap_BANG_.call(null, self__.state, function(p__16836) {
    var map__16837 = p__16836;
    var map__16837__$1 = cljs.core.seq_QMARK_.call(null, map__16837) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16837) : map__16837;
    var curr_state = map__16837__$1;
    var done = cljs.core.get.call(null, map__16837__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
    if(cljs.core.truth_(done)) {
      return curr_state
    }else {
      return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], true)
    }
  }))
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f)
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.IEncodeJS = {};
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x)
  }else {
    var x__3494__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._clj__GT_js["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x)
  }else {
    var x__3494__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._key__GT_js[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._key__GT_js["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if(function() {
    var G__16839 = k;
    if(G__16839) {
      if(cljs.core.truth_(function() {
        var or__3943__auto__ = null;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return G__16839.cljs$core$IEncodeJS$
        }
      }())) {
        return true
      }else {
        if(!G__16839.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__16839)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__16839)
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k)
  }else {
    if(function() {
      var or__3943__auto__ = typeof k === "string";
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = typeof k === "number";
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          var or__3943__auto____$2 = k instanceof cljs.core.Keyword;
          if(or__3943__auto____$2) {
            return or__3943__auto____$2
          }else {
            return k instanceof cljs.core.Symbol
          }
        }
      }
    }()) {
      return cljs.core.clj__GT_js.call(null, k)
    }else {
      return cljs.core.pr_str.call(null, k)
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if(x == null) {
    return null
  }else {
    if(function() {
      var G__16847 = x;
      if(G__16847) {
        if(cljs.core.truth_(function() {
          var or__3943__auto__ = null;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return G__16847.cljs$core$IEncodeJS$
          }
        }())) {
          return true
        }else {
          if(!G__16847.cljs$lang$protocol_mask$partition$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__16847)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__16847)
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x)
    }else {
      if(x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x)
      }else {
        if(x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("")
        }else {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m = {};
            var seq__16848_16854 = cljs.core.seq.call(null, x);
            var chunk__16849_16855 = null;
            var count__16850_16856 = 0;
            var i__16851_16857 = 0;
            while(true) {
              if(i__16851_16857 < count__16850_16856) {
                var vec__16852_16858 = cljs.core._nth.call(null, chunk__16849_16855, i__16851_16857);
                var k_16859 = cljs.core.nth.call(null, vec__16852_16858, 0, null);
                var v_16860 = cljs.core.nth.call(null, vec__16852_16858, 1, null);
                m[cljs.core.key__GT_js.call(null, k_16859)] = clj__GT_js.call(null, v_16860);
                var G__16861 = seq__16848_16854;
                var G__16862 = chunk__16849_16855;
                var G__16863 = count__16850_16856;
                var G__16864 = i__16851_16857 + 1;
                seq__16848_16854 = G__16861;
                chunk__16849_16855 = G__16862;
                count__16850_16856 = G__16863;
                i__16851_16857 = G__16864;
                continue
              }else {
                var temp__4092__auto___16865 = cljs.core.seq.call(null, seq__16848_16854);
                if(temp__4092__auto___16865) {
                  var seq__16848_16866__$1 = temp__4092__auto___16865;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__16848_16866__$1)) {
                    var c__3607__auto___16867 = cljs.core.chunk_first.call(null, seq__16848_16866__$1);
                    var G__16868 = cljs.core.chunk_rest.call(null, seq__16848_16866__$1);
                    var G__16869 = c__3607__auto___16867;
                    var G__16870 = cljs.core.count.call(null, c__3607__auto___16867);
                    var G__16871 = 0;
                    seq__16848_16854 = G__16868;
                    chunk__16849_16855 = G__16869;
                    count__16850_16856 = G__16870;
                    i__16851_16857 = G__16871;
                    continue
                  }else {
                    var vec__16853_16872 = cljs.core.first.call(null, seq__16848_16866__$1);
                    var k_16873 = cljs.core.nth.call(null, vec__16853_16872, 0, null);
                    var v_16874 = cljs.core.nth.call(null, vec__16853_16872, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_16873)] = clj__GT_js.call(null, v_16874);
                    var G__16875 = cljs.core.next.call(null, seq__16848_16866__$1);
                    var G__16876 = null;
                    var G__16877 = 0;
                    var G__16878 = 0;
                    seq__16848_16854 = G__16875;
                    chunk__16849_16855 = G__16876;
                    count__16850_16856 = G__16877;
                    i__16851_16857 = G__16878;
                    continue
                  }
                }else {
                }
              }
              break
            }
            return m
          }else {
            if(cljs.core.coll_QMARK_.call(null, x)) {
              return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = {};
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options)
  }else {
    var x__3494__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._js__GT_clj["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options)
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], true))
  };
  var js__GT_clj__2 = function() {
    var G__16899__delegate = function(x, opts) {
      if(function() {
        var G__16889 = x;
        if(G__16889) {
          if(cljs.core.truth_(function() {
            var or__3943__auto__ = null;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return G__16889.cljs$core$IEncodeClojure$
            }
          }())) {
            return true
          }else {
            if(!G__16889.cljs$lang$protocol_mask$partition$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeClojure, G__16889)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeClojure, G__16889)
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts))
      }else {
        if(cljs.core.seq.call(null, opts)) {
          var map__16890 = opts;
          var map__16890__$1 = cljs.core.seq_QMARK_.call(null, map__16890) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16890) : map__16890;
          var keywordize_keys = cljs.core.get.call(null, map__16890__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__16890, map__16890__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if(cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1))
              }else {
                if(cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1))
                }else {
                  if(x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1))
                  }else {
                    if(cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__3576__auto__ = function(map__16890, map__16890__$1, keywordize_keys, keyfn) {
                          return function iter__16895(s__16896) {
                            return new cljs.core.LazySeq(null, function(map__16890, map__16890__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__16896__$1 = s__16896;
                                while(true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__16896__$1);
                                  if(temp__4092__auto__) {
                                    var s__16896__$2 = temp__4092__auto__;
                                    if(cljs.core.chunked_seq_QMARK_.call(null, s__16896__$2)) {
                                      var c__3574__auto__ = cljs.core.chunk_first.call(null, s__16896__$2);
                                      var size__3575__auto__ = cljs.core.count.call(null, c__3574__auto__);
                                      var b__16898 = cljs.core.chunk_buffer.call(null, size__3575__auto__);
                                      if(function() {
                                        var i__16897 = 0;
                                        while(true) {
                                          if(i__16897 < size__3575__auto__) {
                                            var k = cljs.core._nth.call(null, c__3574__auto__, i__16897);
                                            cljs.core.chunk_append.call(null, b__16898, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true));
                                            var G__16900 = i__16897 + 1;
                                            i__16897 = G__16900;
                                            continue
                                          }else {
                                            return true
                                          }
                                          break
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__16898), iter__16895.call(null, cljs.core.chunk_rest.call(null, s__16896__$2)))
                                      }else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__16898), null)
                                      }
                                    }else {
                                      var k = cljs.core.first.call(null, s__16896__$2);
                                      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true), iter__16895.call(null, cljs.core.rest.call(null, s__16896__$2)))
                                    }
                                  }else {
                                    return null
                                  }
                                  break
                                }
                              }
                            }(map__16890, map__16890__$1, keywordize_keys, keyfn), null, null)
                          }
                        }(map__16890, map__16890__$1, keywordize_keys, keyfn);
                        return iter__3576__auto__.call(null, cljs.core.js_keys.call(null, x__$1))
                      }())
                    }else {
                      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1
                      }else {
                        return null
                      }
                    }
                  }
                }
              }
            }
          }(map__16890, map__16890__$1, keywordize_keys, keyfn);
          return f.call(null, x)
        }else {
          return null
        }
      }
    };
    var G__16899 = function(x, var_args) {
      var opts = null;
      if(arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__16899__delegate.call(this, x, opts)
    };
    G__16899.cljs$lang$maxFixedArity = 1;
    G__16899.cljs$lang$applyTo = function(arglist__16901) {
      var x = cljs.core.first(arglist__16901);
      var opts = cljs.core.rest(arglist__16901);
      return G__16899__delegate(x, opts)
    };
    G__16899.cljs$core$IFn$_invoke$arity$variadic = G__16899__delegate;
    return G__16899
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__16902__delegate = function(args) {
      var temp__4090__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var v = temp__4090__auto__;
        return v
      }else {
        var ret = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
        return ret
      }
    };
    var G__16902 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__16902__delegate.call(this, args)
    };
    G__16902.cljs$lang$maxFixedArity = 0;
    G__16902.cljs$lang$applyTo = function(arglist__16903) {
      var args = cljs.core.seq(arglist__16903);
      return G__16902__delegate(args)
    };
    G__16902.cljs$core$IFn$_invoke$arity$variadic = G__16902__delegate;
    return G__16902
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret)) {
        var G__16904 = ret;
        f = G__16904;
        continue
      }else {
        return ret
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__16905__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__16905 = function(f, var_args) {
      var args = null;
      if(arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__16905__delegate.call(this, f, args)
    };
    G__16905.cljs$lang$maxFixedArity = 1;
    G__16905.cljs$lang$applyTo = function(arglist__16906) {
      var f = cljs.core.first(arglist__16906);
      var args = cljs.core.rest(arglist__16906);
      return G__16905__delegate(f, args)
    };
    G__16905.cljs$core$IFn$_invoke$arity$variadic = G__16905__delegate;
    return G__16905
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.PersistentArrayMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], true)
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if(cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null))
  }else {
  }
  return cljs.core._global_hierarchy
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args)
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args)
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__16907) {
    var f = cljs.core.first(arglist__16907);
    var args = cljs.core.rest(arglist__16907);
    return swap_global_hierarchy_BANG___delegate(f, args)
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3943__auto__ = cljs.core._EQ_.call(null, child, parent);
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      var or__3943__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).call(null, h).call(null, child), parent);
      if(or__3943__auto____$1) {
        return or__3943__auto____$1
      }else {
        var and__3941__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3941__auto__) {
          var and__3941__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3941__auto____$1) {
            var and__3941__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3941__auto____$2) {
              var ret = true;
              var i = 0;
              while(true) {
                if(function() {
                  var or__3943__auto____$2 = cljs.core.not.call(null, ret);
                  if(or__3943__auto____$2) {
                    return or__3943__auto____$2
                  }else {
                    return i === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret
                }else {
                  var G__16908 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__16909 = i + 1;
                  ret = G__16908;
                  i = G__16909;
                  continue
                }
                break
              }
            }else {
              return and__3941__auto____$2
            }
          }else {
            return and__3941__auto____$1
          }
        }else {
          return and__3941__auto__
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).call(null, h), tag))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).call(null, h), tag))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).call(null, h), tag))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).call(null, h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).call(null, h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).call(null, h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
          }
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)))
      }
    }(tp, td, ta);
    var or__3943__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).call(null, h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).call(null, h), tag, td, 
      parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).call(null, h), parent, ta, tag, td)], true)
    }();
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).call(null, h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__16910_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__16910_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__16910_SHARP_), cljs.core.second.call(null, p1__16910_SHARP_)))
      }
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if(cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__16911_SHARP_, p2__16912_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__16911_SHARP_, p2__16912_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3943__auto__ = cljs.core.truth_(function() {
    var and__3941__auto__ = xprefs;
    if(cljs.core.truth_(and__3941__auto__)) {
      return xprefs.call(null, y)
    }else {
      return and__3941__auto__
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    var or__3943__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          }else {
          }
          var G__16913 = cljs.core.rest.call(null, ps);
          ps = G__16913;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3943__auto____$1)) {
      return or__3943__auto____$1
    }else {
      var or__3943__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            }else {
            }
            var G__16914 = cljs.core.rest.call(null, ps);
            ps = G__16914;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3943__auto____$2)) {
        return or__3943__auto____$2
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3943__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__16917) {
    var vec__16918 = p__16917;
    var k = cljs.core.nth.call(null, vec__16918, 0, null);
    var _ = cljs.core.nth.call(null, vec__16918, 1, null);
    var e = vec__16918;
    if(cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3943__auto__ = be == null;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__3494__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._reset[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._reset["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__3494__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._add_method[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._add_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__3494__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._remove_method[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._remove_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__3494__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._prefer_method[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._prefer_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__3494__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._get_method[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._get_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__3494__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._methods[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._methods["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__3494__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._prefers[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._prefers["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__3494__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._dispatch[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dispatch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, name, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if(cljs.core.truth_(target_fn)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args)
};
goog.provide("cljs.core.MultiFn");
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn
  }else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if(cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn
    }else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  return cljs.core.deref.call(null, self__.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  return cljs.core.deref.call(null, self__.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  return cljs.core.do_dispatch.call(null, mf, self__.name, self__.dispatch_fn, args)
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
};
cljs.core.MultiFn.prototype.call = function() {
  var G__16919__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args)
  };
  var G__16919 = function(_, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__16919__delegate.call(this, _, args)
  };
  G__16919.cljs$lang$maxFixedArity = 1;
  G__16919.cljs$lang$applyTo = function(arglist__16920) {
    var _ = cljs.core.first(arglist__16920);
    var args = cljs.core.rest(arglist__16920);
    return G__16919__delegate(_, args)
  };
  G__16919.cljs$core$IFn$_invoke$arity$variadic = G__16919__delegate;
  return G__16919
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
goog.provide("cljs.core.UUID");
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var and__3941__auto__ = other instanceof cljs.core.UUID;
  if(and__3941__auto__) {
    return self__.uuid === other.uuid
  }else {
    return and__3941__auto__
  }
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid)
};
goog.provide("cljs.core.ExceptionInfo");
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__3438__auto__, writer__3439__auto__, opts__3440__auto__) {
  return cljs.core._write.call(null, writer__3439__auto__, "cljs.core/ExceptionInfo")
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause)
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null)
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause)
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info
}();
cljs.core.ex_data = function ex_data(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.data
  }else {
    return null
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if(ex instanceof Error) {
    return ex.message
  }else {
    return null
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause
  }else {
    return null
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if(cljs.core.truth_(pred.call(null, x, y))) {
      return-1
    }else {
      if(cljs.core.truth_(pred.call(null, y, x))) {
        return 1
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray([new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, "recur", "recur", -1532142362, null), 
  null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, null), null, new cljs.core.Symbol(null, 
  "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "try", "try", -1640416396, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], true), x)
};
goog.provide("phil_and_amber.data");
goog.require("cljs.core");
phil_and_amber.data.contacts = cljs.core.PersistentArrayMap.fromArray(["phil", cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "name", "name", 1017277949), "Philip Doctor", new cljs.core.Keyword(null, "email", "email", 1110523662), "philip.s.doctor@gmail.com", new cljs.core.Keyword(null, "github", "github", 4063235925), "https://github.com/philipsdoctor", new cljs.core.Keyword(null, "linkedin", "linkedin", 2208597104), "http://www.linkedin.com/in/philipsdoctor"], true), "amber", 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "name", "name", 1017277949), "Amber Doctor", new cljs.core.Keyword(null, "email", "email", 1110523662), "amberdoctor@gmail.com", new cljs.core.Keyword(null, "github", "github", 4063235925), "https://github.com/amberdoctor", new cljs.core.Keyword(null, "linkedin", "linkedin", 2208597104), "http://www.linkedin.com/in/amberdoctor"], true)], true);
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function walk(inner, outer, form) {
  if(cljs.core.seq_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)))
  }else {
    if(cljs.core.coll_QMARK_.call(null, form)) {
      return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)))
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return outer.call(null, form)
      }else {
        return null
      }
    }
  }
};
clojure.walk.postwalk = function postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, postwalk, f), f, form)
};
clojure.walk.prewalk = function prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, prewalk, f), cljs.core.identity, f.call(null, form))
};
clojure.walk.keywordize_keys = function keywordize_keys(m) {
  var f = function(p__20518) {
    var vec__20519 = p__20518;
    var k = cljs.core.nth.call(null, vec__20519, 0, null);
    var v = cljs.core.nth.call(null, vec__20519, 1, null);
    if(typeof k === "string") {
      return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k), v], true)
    }else {
      return cljs.core.PersistentVector.fromArray([k, v], true)
    }
  };
  return clojure.walk.postwalk.call(null, function(x) {
    if(cljs.core.map_QMARK_.call(null, x)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x))
    }else {
      return x
    }
  }, m)
};
clojure.walk.stringify_keys = function stringify_keys(m) {
  var f = function(p__20522) {
    var vec__20523 = p__20522;
    var k = cljs.core.nth.call(null, vec__20523, 0, null);
    var v = cljs.core.nth.call(null, vec__20523, 1, null);
    if(k instanceof cljs.core.Keyword) {
      return cljs.core.PersistentVector.fromArray([cljs.core.name.call(null, k), v], true)
    }else {
      return cljs.core.PersistentVector.fromArray([k, v], true)
    }
  };
  return clojure.walk.postwalk.call(null, function(x) {
    if(cljs.core.map_QMARK_.call(null, x)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x))
    }else {
      return x
    }
  }, m)
};
clojure.walk.prewalk_replace = function prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if(cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x)
    }else {
      return x
    }
  }, form)
};
clojure.walk.postwalk_replace = function postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if(cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x)
    }else {
      return x
    }
  }, form)
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while(true) {
    if(cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__20524 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__20524;
      continue
    }else {
      return v__$1
    }
    break
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if(cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v)
  }else {
    return v
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if(function() {
    var or__3943__auto__ = limit <= 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return limit >= 2 + cljs.core.count.call(null, s)
    }
  }()) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "")
  }else {
    var pred__20528 = cljs.core._EQ_;
    var expr__20529 = limit;
    if(pred__20528.call(null, 1, expr__20529)) {
      return cljs.core.vector.call(null, s)
    }else {
      if(pred__20528.call(null, 2, expr__20529)) {
        return cljs.core.vector.call(null, "", s)
      }else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c))
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0)
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1)
        }else {
          var temp__4090__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if(cljs.core.truth_(temp__4090__auto__)) {
            var m = temp__4090__auto__;
            var index = s__$1.indexOf(m);
            var G__20531 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__20532 = limit__$1 - 1;
            var G__20533 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__20531;
            limit__$1 = G__20532;
            parts = G__20533;
            continue
          }else {
            return cljs.core.conj.call(null, parts, s__$1)
          }
        }
        break
      }
    }())
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while(true) {
    if(index === 0) {
      return""
    }else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if(function() {
        var or__3943__auto__ = cljs.core._EQ_.call(null, ch, "\n");
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return cljs.core._EQ_.call(null, ch, "\r")
        }
      }()) {
        var G__20534 = index - 1;
        index = G__20534;
        continue
      }else {
        return s.substring(0, index)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s)
};
clojure.string.escape = function escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString()
    }else {
      var ch = s.charAt(index);
      var temp__4090__auto___20535 = cljs.core.get.call(null, cmap, ch);
      if(cljs.core.truth_(temp__4090__auto___20535)) {
        var replacement_20536 = temp__4090__auto___20535;
        buffer.append([cljs.core.str(replacement_20536)].join(""))
      }else {
        buffer.append(ch)
      }
      var G__20537 = index + 1;
      index = G__20537;
      continue
    }
    break
  }
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(p1__20538_SHARP_) {
    return max === p1__20538_SHARP_
  }, coll))
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var union__1 = function(s1) {
    return s1
  };
  var union__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2)
    }
  };
  var union__3 = function() {
    var G__20539__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets))
    };
    var G__20539 = function(s1, s2, var_args) {
      var sets = null;
      if(arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__20539__delegate.call(this, s1, s2, sets)
    };
    G__20539.cljs$lang$maxFixedArity = 2;
    G__20539.cljs$lang$applyTo = function(arglist__20540) {
      var s1 = cljs.core.first(arglist__20540);
      arglist__20540 = cljs.core.next(arglist__20540);
      var s2 = cljs.core.first(arglist__20540);
      var sets = cljs.core.rest(arglist__20540);
      return G__20539__delegate(s1, s2, sets)
    };
    G__20539.cljs$core$IFn$_invoke$arity$variadic = G__20539__delegate;
    return G__20539
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1
  };
  var intersection__2 = function(s1, s2) {
    while(true) {
      if(cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__20542 = s2;
        var G__20543 = s1;
        s1 = G__20542;
        s2 = G__20543;
        continue
      }else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if(cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result
            }else {
              return cljs.core.disj.call(null, result, item)
            }
          }
        }(s1, s2), s1, s1)
      }
      break
    }
  };
  var intersection__3 = function() {
    var G__20544__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__20541_SHARP_) {
        return-cljs.core.count.call(null, p1__20541_SHARP_)
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets))
    };
    var G__20544 = function(s1, s2, var_args) {
      var sets = null;
      if(arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__20544__delegate.call(this, s1, s2, sets)
    };
    G__20544.cljs$lang$maxFixedArity = 2;
    G__20544.cljs$lang$applyTo = function(arglist__20545) {
      var s1 = cljs.core.first(arglist__20545);
      arglist__20545 = cljs.core.next(arglist__20545);
      var s2 = cljs.core.first(arglist__20545);
      var sets = cljs.core.rest(arglist__20545);
      return G__20544__delegate(s1, s2, sets)
    };
    G__20544.cljs$core$IFn$_invoke$arity$variadic = G__20544__delegate;
    return G__20544
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1
  };
  var difference__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if(cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item)
        }else {
          return result
        }
      }, s1, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2)
    }
  };
  var difference__3 = function() {
    var G__20546__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2))
    };
    var G__20546 = function(s1, s2, var_args) {
      var sets = null;
      if(arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__20546__delegate.call(this, s1, s2, sets)
    };
    G__20546.cljs$lang$maxFixedArity = 2;
    G__20546.cljs$lang$applyTo = function(arglist__20547) {
      var s1 = cljs.core.first(arglist__20547);
      arglist__20547 = cljs.core.next(arglist__20547);
      var s2 = cljs.core.first(arglist__20547);
      var sets = cljs.core.rest(arglist__20547);
      return G__20546__delegate(s1, s2, sets)
    };
    G__20546.cljs$core$IFn$_invoke$arity$variadic = G__20546__delegate;
    return G__20546
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if(cljs.core.truth_(pred.call(null, k))) {
      return s
    }else {
      return cljs.core.disj.call(null, s, k)
    }
  }, xset, xset)
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__20548_SHARP_) {
    return cljs.core.select_keys.call(null, p1__20548_SHARP_, ks)
  }, xrel))
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__20551) {
    var vec__20552 = p__20551;
    var old = cljs.core.nth.call(null, vec__20552, 0, null);
    var new$ = cljs.core.nth.call(null, vec__20552, 1, null);
    if(function() {
      var and__3941__auto__ = cljs.core.not_EQ_.call(null, old, new$);
      if(and__3941__auto__) {
        return cljs.core.contains_QMARK_.call(null, m, old)
      }else {
        return and__3941__auto__
      }
    }()) {
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, m, old)), old)
    }else {
      return m
    }
  }, map, kmap)
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__20553_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__20553_SHARP_, kmap)
  }, xrel))
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x))
  }, cljs.core.PersistentArrayMap.EMPTY, xrel)
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__20556) {
    var vec__20557 = p__20556;
    var k = cljs.core.nth.call(null, vec__20557, 0, null);
    var v = cljs.core.nth.call(null, vec__20557, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k)
  }, cljs.core.PersistentArrayMap.EMPTY, m)
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if(function() {
      var and__3941__auto__ = cljs.core.seq.call(null, xrel);
      if(and__3941__auto__) {
        return cljs.core.seq.call(null, yrel)
      }else {
        return and__3941__auto__
      }
    }()) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__20564 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel], true) : cljs.core.PersistentVector.fromArray([yrel, xrel], true);
      var r = cljs.core.nth.call(null, vec__20564, 0, null);
      var s = cljs.core.nth.call(null, vec__20564, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ret, x) {
        var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
        if(cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(p1__20558_SHARP_, p2__20559_SHARP_) {
            return cljs.core.conj.call(null, p1__20558_SHARP_, cljs.core.merge.call(null, p2__20559_SHARP_, x))
          }, ret, found)
        }else {
          return ret
        }
      }, cljs.core.PersistentHashSet.EMPTY, s)
    }else {
      return cljs.core.PersistentHashSet.EMPTY
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__20565 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel, clojure.set.map_invert.call(null, km)], true) : cljs.core.PersistentVector.fromArray([yrel, xrel, km], true);
    var r = cljs.core.nth.call(null, vec__20565, 0, null);
    var s = cljs.core.nth.call(null, vec__20565, 1, null);
    var k = cljs.core.nth.call(null, vec__20565, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(ret, x) {
      var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
      if(cljs.core.truth_(found)) {
        return cljs.core.reduce.call(null, function(p1__20560_SHARP_, p2__20561_SHARP_) {
          return cljs.core.conj.call(null, p1__20560_SHARP_, cljs.core.merge.call(null, p2__20561_SHARP_, x))
        }, ret, found)
      }else {
        return ret
      }
    }, cljs.core.PersistentHashSet.EMPTY, s)
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  var and__3941__auto__ = cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2);
  if(and__3941__auto__) {
    return cljs.core.every_QMARK_.call(null, function(p1__20566_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set2, p1__20566_SHARP_)
    }, set1)
  }else {
    return and__3941__auto__
  }
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  var and__3941__auto__ = cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2);
  if(and__3941__auto__) {
    return cljs.core.every_QMARK_.call(null, function(p1__20567_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set1, p1__20567_SHARP_)
    }, set2)
  }else {
    return and__3941__auto__
  }
};
goog.provide("dommy.attrs");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
dommy.attrs.class_match_QMARK_ = function class_match_QMARK_(class_name, class$, idx) {
  var and__3941__auto__ = function() {
    var or__3943__auto__ = idx === 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return" " === class_name.charAt(idx - 1)
    }
  }();
  if(cljs.core.truth_(and__3941__auto__)) {
    var total_len = class_name.length;
    var stop = idx + class$.length;
    if(stop <= total_len) {
      var or__3943__auto__ = stop === total_len;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return" " === class_name.charAt(stop)
      }
    }else {
      return null
    }
  }else {
    return and__3941__auto__
  }
};
dommy.attrs.class_index = function class_index(class_name, class$) {
  var start_from = 0;
  while(true) {
    var i = class_name.indexOf(class$, start_from);
    if(i >= 0) {
      if(dommy.attrs.class_match_QMARK_.call(null, class_name, class$, i)) {
        return i
      }else {
        var G__20161 = i + class$.length;
        start_from = G__20161;
        continue
      }
    }else {
      return null
    }
    break
  }
};
dommy.attrs.has_class_QMARK_ = function has_class_QMARK_(elem, class$) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var class$__$1 = cljs.core.name.call(null, class$);
  var temp__4090__auto__ = elem__$1.classList;
  if(cljs.core.truth_(temp__4090__auto__)) {
    var class_list = temp__4090__auto__;
    return class_list.contains(class$__$1)
  }else {
    var temp__4092__auto__ = elem__$1.className;
    if(cljs.core.truth_(temp__4092__auto__)) {
      var class_name = temp__4092__auto__;
      var temp__4092__auto____$1 = dommy.attrs.class_index.call(null, class_name, class$__$1);
      if(cljs.core.truth_(temp__4092__auto____$1)) {
        var i = temp__4092__auto____$1;
        return i >= 0
      }else {
        return null
      }
    }else {
      return null
    }
  }
};
dommy.attrs.add_class_BANG_ = function() {
  var add_class_BANG_ = null;
  var add_class_BANG___2 = function(elem, classes) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var classes__$1 = clojure.string.trim.call(null, cljs.core.name.call(null, classes));
    if(cljs.core.seq.call(null, classes__$1)) {
      var temp__4090__auto___20186 = elem__$1.classList;
      if(cljs.core.truth_(temp__4090__auto___20186)) {
        var class_list_20187 = temp__4090__auto___20186;
        var seq__20174_20188 = cljs.core.seq.call(null, classes__$1.split(/\s+/));
        var chunk__20175_20189 = null;
        var count__20176_20190 = 0;
        var i__20177_20191 = 0;
        while(true) {
          if(i__20177_20191 < count__20176_20190) {
            var class_20192 = cljs.core._nth.call(null, chunk__20175_20189, i__20177_20191);
            class_list_20187.add(class_20192);
            var G__20193 = seq__20174_20188;
            var G__20194 = chunk__20175_20189;
            var G__20195 = count__20176_20190;
            var G__20196 = i__20177_20191 + 1;
            seq__20174_20188 = G__20193;
            chunk__20175_20189 = G__20194;
            count__20176_20190 = G__20195;
            i__20177_20191 = G__20196;
            continue
          }else {
            var temp__4092__auto___20197 = cljs.core.seq.call(null, seq__20174_20188);
            if(temp__4092__auto___20197) {
              var seq__20174_20198__$1 = temp__4092__auto___20197;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__20174_20198__$1)) {
                var c__3607__auto___20199 = cljs.core.chunk_first.call(null, seq__20174_20198__$1);
                var G__20200 = cljs.core.chunk_rest.call(null, seq__20174_20198__$1);
                var G__20201 = c__3607__auto___20199;
                var G__20202 = cljs.core.count.call(null, c__3607__auto___20199);
                var G__20203 = 0;
                seq__20174_20188 = G__20200;
                chunk__20175_20189 = G__20201;
                count__20176_20190 = G__20202;
                i__20177_20191 = G__20203;
                continue
              }else {
                var class_20204 = cljs.core.first.call(null, seq__20174_20198__$1);
                class_list_20187.add(class_20204);
                var G__20205 = cljs.core.next.call(null, seq__20174_20198__$1);
                var G__20206 = null;
                var G__20207 = 0;
                var G__20208 = 0;
                seq__20174_20188 = G__20205;
                chunk__20175_20189 = G__20206;
                count__20176_20190 = G__20207;
                i__20177_20191 = G__20208;
                continue
              }
            }else {
            }
          }
          break
        }
      }else {
        var class_name_20209 = elem__$1.className;
        var seq__20178_20210 = cljs.core.seq.call(null, classes__$1.split(/\s+/));
        var chunk__20179_20211 = null;
        var count__20180_20212 = 0;
        var i__20181_20213 = 0;
        while(true) {
          if(i__20181_20213 < count__20180_20212) {
            var class_20214 = cljs.core._nth.call(null, chunk__20179_20211, i__20181_20213);
            if(cljs.core.truth_(dommy.attrs.class_index.call(null, class_name_20209, class_20214))) {
            }else {
              elem__$1.className = class_name_20209 === "" ? class_20214 : [cljs.core.str(class_name_20209), cljs.core.str(" "), cljs.core.str(class_20214)].join("")
            }
            var G__20215 = seq__20178_20210;
            var G__20216 = chunk__20179_20211;
            var G__20217 = count__20180_20212;
            var G__20218 = i__20181_20213 + 1;
            seq__20178_20210 = G__20215;
            chunk__20179_20211 = G__20216;
            count__20180_20212 = G__20217;
            i__20181_20213 = G__20218;
            continue
          }else {
            var temp__4092__auto___20219 = cljs.core.seq.call(null, seq__20178_20210);
            if(temp__4092__auto___20219) {
              var seq__20178_20220__$1 = temp__4092__auto___20219;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__20178_20220__$1)) {
                var c__3607__auto___20221 = cljs.core.chunk_first.call(null, seq__20178_20220__$1);
                var G__20222 = cljs.core.chunk_rest.call(null, seq__20178_20220__$1);
                var G__20223 = c__3607__auto___20221;
                var G__20224 = cljs.core.count.call(null, c__3607__auto___20221);
                var G__20225 = 0;
                seq__20178_20210 = G__20222;
                chunk__20179_20211 = G__20223;
                count__20180_20212 = G__20224;
                i__20181_20213 = G__20225;
                continue
              }else {
                var class_20226 = cljs.core.first.call(null, seq__20178_20220__$1);
                if(cljs.core.truth_(dommy.attrs.class_index.call(null, class_name_20209, class_20226))) {
                }else {
                  elem__$1.className = class_name_20209 === "" ? class_20226 : [cljs.core.str(class_name_20209), cljs.core.str(" "), cljs.core.str(class_20226)].join("")
                }
                var G__20227 = cljs.core.next.call(null, seq__20178_20220__$1);
                var G__20228 = null;
                var G__20229 = 0;
                var G__20230 = 0;
                seq__20178_20210 = G__20227;
                chunk__20179_20211 = G__20228;
                count__20180_20212 = G__20229;
                i__20181_20213 = G__20230;
                continue
              }
            }else {
            }
          }
          break
        }
      }
    }else {
    }
    return elem__$1
  };
  var add_class_BANG___3 = function() {
    var G__20231__delegate = function(elem, classes, more_classes) {
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__20182_20232 = cljs.core.seq.call(null, cljs.core.conj.call(null, more_classes, classes));
      var chunk__20183_20233 = null;
      var count__20184_20234 = 0;
      var i__20185_20235 = 0;
      while(true) {
        if(i__20185_20235 < count__20184_20234) {
          var c_20236 = cljs.core._nth.call(null, chunk__20183_20233, i__20185_20235);
          add_class_BANG_.call(null, elem__$1, c_20236);
          var G__20237 = seq__20182_20232;
          var G__20238 = chunk__20183_20233;
          var G__20239 = count__20184_20234;
          var G__20240 = i__20185_20235 + 1;
          seq__20182_20232 = G__20237;
          chunk__20183_20233 = G__20238;
          count__20184_20234 = G__20239;
          i__20185_20235 = G__20240;
          continue
        }else {
          var temp__4092__auto___20241 = cljs.core.seq.call(null, seq__20182_20232);
          if(temp__4092__auto___20241) {
            var seq__20182_20242__$1 = temp__4092__auto___20241;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__20182_20242__$1)) {
              var c__3607__auto___20243 = cljs.core.chunk_first.call(null, seq__20182_20242__$1);
              var G__20244 = cljs.core.chunk_rest.call(null, seq__20182_20242__$1);
              var G__20245 = c__3607__auto___20243;
              var G__20246 = cljs.core.count.call(null, c__3607__auto___20243);
              var G__20247 = 0;
              seq__20182_20232 = G__20244;
              chunk__20183_20233 = G__20245;
              count__20184_20234 = G__20246;
              i__20185_20235 = G__20247;
              continue
            }else {
              var c_20248 = cljs.core.first.call(null, seq__20182_20242__$1);
              add_class_BANG_.call(null, elem__$1, c_20248);
              var G__20249 = cljs.core.next.call(null, seq__20182_20242__$1);
              var G__20250 = null;
              var G__20251 = 0;
              var G__20252 = 0;
              seq__20182_20232 = G__20249;
              chunk__20183_20233 = G__20250;
              count__20184_20234 = G__20251;
              i__20185_20235 = G__20252;
              continue
            }
          }else {
          }
        }
        break
      }
      return elem__$1
    };
    var G__20231 = function(elem, classes, var_args) {
      var more_classes = null;
      if(arguments.length > 2) {
        more_classes = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__20231__delegate.call(this, elem, classes, more_classes)
    };
    G__20231.cljs$lang$maxFixedArity = 2;
    G__20231.cljs$lang$applyTo = function(arglist__20253) {
      var elem = cljs.core.first(arglist__20253);
      arglist__20253 = cljs.core.next(arglist__20253);
      var classes = cljs.core.first(arglist__20253);
      var more_classes = cljs.core.rest(arglist__20253);
      return G__20231__delegate(elem, classes, more_classes)
    };
    G__20231.cljs$core$IFn$_invoke$arity$variadic = G__20231__delegate;
    return G__20231
  }();
  add_class_BANG_ = function(elem, classes, var_args) {
    var more_classes = var_args;
    switch(arguments.length) {
      case 2:
        return add_class_BANG___2.call(this, elem, classes);
      default:
        return add_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic(elem, classes, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_class_BANG_.cljs$lang$maxFixedArity = 2;
  add_class_BANG_.cljs$lang$applyTo = add_class_BANG___3.cljs$lang$applyTo;
  add_class_BANG_.cljs$core$IFn$_invoke$arity$2 = add_class_BANG___2;
  add_class_BANG_.cljs$core$IFn$_invoke$arity$variadic = add_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return add_class_BANG_
}();
dommy.attrs.remove_class_str = function remove_class_str(init_class_name, class$) {
  var class_name = init_class_name;
  while(true) {
    var class_len = class_name.length;
    var temp__4090__auto__ = dommy.attrs.class_index.call(null, class_name, class$);
    if(cljs.core.truth_(temp__4090__auto__)) {
      var i = temp__4090__auto__;
      var G__20254 = function() {
        var end = i + class$.length;
        return[cljs.core.str(end < class_len ? [cljs.core.str(class_name.substring(0, i)), cljs.core.str(class_name.substr(end + 1))].join("") : class_name.substring(0, i - 1))].join("")
      }();
      class_name = G__20254;
      continue
    }else {
      return class_name
    }
    break
  }
};
dommy.attrs.remove_class_BANG_ = function() {
  var remove_class_BANG_ = null;
  var remove_class_BANG___2 = function(elem, class$) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var class$__$1 = cljs.core.name.call(null, class$);
    var temp__4090__auto___20263 = elem__$1.classList;
    if(cljs.core.truth_(temp__4090__auto___20263)) {
      var class_list_20264 = temp__4090__auto___20263;
      class_list_20264.remove(class$__$1)
    }else {
      var class_name_20265 = elem__$1.className;
      var new_class_name_20266 = dommy.attrs.remove_class_str.call(null, class_name_20265, class$__$1);
      if(class_name_20265 === new_class_name_20266) {
      }else {
        elem__$1.className = new_class_name_20266
      }
    }
    return elem__$1
  };
  var remove_class_BANG___3 = function() {
    var G__20267__delegate = function(elem, class$, classes) {
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__20259 = cljs.core.seq.call(null, cljs.core.conj.call(null, classes, class$));
      var chunk__20260 = null;
      var count__20261 = 0;
      var i__20262 = 0;
      while(true) {
        if(i__20262 < count__20261) {
          var c = cljs.core._nth.call(null, chunk__20260, i__20262);
          remove_class_BANG_.call(null, elem__$1, c);
          var G__20268 = seq__20259;
          var G__20269 = chunk__20260;
          var G__20270 = count__20261;
          var G__20271 = i__20262 + 1;
          seq__20259 = G__20268;
          chunk__20260 = G__20269;
          count__20261 = G__20270;
          i__20262 = G__20271;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__20259);
          if(temp__4092__auto__) {
            var seq__20259__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__20259__$1)) {
              var c__3607__auto__ = cljs.core.chunk_first.call(null, seq__20259__$1);
              var G__20272 = cljs.core.chunk_rest.call(null, seq__20259__$1);
              var G__20273 = c__3607__auto__;
              var G__20274 = cljs.core.count.call(null, c__3607__auto__);
              var G__20275 = 0;
              seq__20259 = G__20272;
              chunk__20260 = G__20273;
              count__20261 = G__20274;
              i__20262 = G__20275;
              continue
            }else {
              var c = cljs.core.first.call(null, seq__20259__$1);
              remove_class_BANG_.call(null, elem__$1, c);
              var G__20276 = cljs.core.next.call(null, seq__20259__$1);
              var G__20277 = null;
              var G__20278 = 0;
              var G__20279 = 0;
              seq__20259 = G__20276;
              chunk__20260 = G__20277;
              count__20261 = G__20278;
              i__20262 = G__20279;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    };
    var G__20267 = function(elem, class$, var_args) {
      var classes = null;
      if(arguments.length > 2) {
        classes = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__20267__delegate.call(this, elem, class$, classes)
    };
    G__20267.cljs$lang$maxFixedArity = 2;
    G__20267.cljs$lang$applyTo = function(arglist__20280) {
      var elem = cljs.core.first(arglist__20280);
      arglist__20280 = cljs.core.next(arglist__20280);
      var class$ = cljs.core.first(arglist__20280);
      var classes = cljs.core.rest(arglist__20280);
      return G__20267__delegate(elem, class$, classes)
    };
    G__20267.cljs$core$IFn$_invoke$arity$variadic = G__20267__delegate;
    return G__20267
  }();
  remove_class_BANG_ = function(elem, class$, var_args) {
    var classes = var_args;
    switch(arguments.length) {
      case 2:
        return remove_class_BANG___2.call(this, elem, class$);
      default:
        return remove_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic(elem, class$, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_class_BANG_.cljs$lang$maxFixedArity = 2;
  remove_class_BANG_.cljs$lang$applyTo = remove_class_BANG___3.cljs$lang$applyTo;
  remove_class_BANG_.cljs$core$IFn$_invoke$arity$2 = remove_class_BANG___2;
  remove_class_BANG_.cljs$core$IFn$_invoke$arity$variadic = remove_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return remove_class_BANG_
}();
dommy.attrs.toggle_class_BANG_ = function() {
  var toggle_class_BANG_ = null;
  var toggle_class_BANG___2 = function(elem, class$) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var temp__4090__auto___20281 = elem__$1.classList;
    if(cljs.core.truth_(temp__4090__auto___20281)) {
      var class_list_20282 = temp__4090__auto___20281;
      class_list_20282.toggle(class$)
    }else {
      toggle_class_BANG_.call(null, elem__$1, class$, !dommy.attrs.has_class_QMARK_.call(null, elem__$1, class$))
    }
    return elem__$1
  };
  var toggle_class_BANG___3 = function(elem, class$, add_QMARK_) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    if(add_QMARK_) {
      dommy.attrs.add_class_BANG_.call(null, elem__$1, class$)
    }else {
      dommy.attrs.remove_class_BANG_.call(null, elem__$1, class$)
    }
    return elem__$1
  };
  toggle_class_BANG_ = function(elem, class$, add_QMARK_) {
    switch(arguments.length) {
      case 2:
        return toggle_class_BANG___2.call(this, elem, class$);
      case 3:
        return toggle_class_BANG___3.call(this, elem, class$, add_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  toggle_class_BANG_.cljs$core$IFn$_invoke$arity$2 = toggle_class_BANG___2;
  toggle_class_BANG_.cljs$core$IFn$_invoke$arity$3 = toggle_class_BANG___3;
  return toggle_class_BANG_
}();
dommy.attrs.style_str = function style_str(x) {
  if(typeof x === "string") {
    return x
  }else {
    return clojure.string.join.call(null, " ", cljs.core.map.call(null, function(p__20285) {
      var vec__20286 = p__20285;
      var k = cljs.core.nth.call(null, vec__20286, 0, null);
      var v = cljs.core.nth.call(null, vec__20286, 1, null);
      return[cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str(":"), cljs.core.str(cljs.core.name.call(null, v)), cljs.core.str(";")].join("")
    }, x))
  }
};
dommy.attrs.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(elem, kvs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "kvs", "kvs", -1640424927, null)))))].join(""));
    }
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var style = elem__$1.style;
    var seq__20293_20299 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, kvs));
    var chunk__20294_20300 = null;
    var count__20295_20301 = 0;
    var i__20296_20302 = 0;
    while(true) {
      if(i__20296_20302 < count__20295_20301) {
        var vec__20297_20303 = cljs.core._nth.call(null, chunk__20294_20300, i__20296_20302);
        var k_20304 = cljs.core.nth.call(null, vec__20297_20303, 0, null);
        var v_20305 = cljs.core.nth.call(null, vec__20297_20303, 1, null);
        style[cljs.core.name.call(null, k_20304)] = v_20305;
        var G__20306 = seq__20293_20299;
        var G__20307 = chunk__20294_20300;
        var G__20308 = count__20295_20301;
        var G__20309 = i__20296_20302 + 1;
        seq__20293_20299 = G__20306;
        chunk__20294_20300 = G__20307;
        count__20295_20301 = G__20308;
        i__20296_20302 = G__20309;
        continue
      }else {
        var temp__4092__auto___20310 = cljs.core.seq.call(null, seq__20293_20299);
        if(temp__4092__auto___20310) {
          var seq__20293_20311__$1 = temp__4092__auto___20310;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__20293_20311__$1)) {
            var c__3607__auto___20312 = cljs.core.chunk_first.call(null, seq__20293_20311__$1);
            var G__20313 = cljs.core.chunk_rest.call(null, seq__20293_20311__$1);
            var G__20314 = c__3607__auto___20312;
            var G__20315 = cljs.core.count.call(null, c__3607__auto___20312);
            var G__20316 = 0;
            seq__20293_20299 = G__20313;
            chunk__20294_20300 = G__20314;
            count__20295_20301 = G__20315;
            i__20296_20302 = G__20316;
            continue
          }else {
            var vec__20298_20317 = cljs.core.first.call(null, seq__20293_20311__$1);
            var k_20318 = cljs.core.nth.call(null, vec__20298_20317, 0, null);
            var v_20319 = cljs.core.nth.call(null, vec__20298_20317, 1, null);
            style[cljs.core.name.call(null, k_20318)] = v_20319;
            var G__20320 = cljs.core.next.call(null, seq__20293_20311__$1);
            var G__20321 = null;
            var G__20322 = 0;
            var G__20323 = 0;
            seq__20293_20299 = G__20320;
            chunk__20294_20300 = G__20321;
            count__20295_20301 = G__20322;
            i__20296_20302 = G__20323;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem__$1
  };
  var set_style_BANG_ = function(elem, var_args) {
    var kvs = null;
    if(arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return set_style_BANG___delegate.call(this, elem, kvs)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 1;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__20324) {
    var elem = cljs.core.first(arglist__20324);
    var kvs = cljs.core.rest(arglist__20324);
    return set_style_BANG___delegate(elem, kvs)
  };
  set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
dommy.attrs.style = function style(elem, k) {
  if(cljs.core.truth_(k)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "k", "k", -1640531420, null)))].join(""));
  }
  return window.getComputedStyle(dommy.template.__GT_node_like.call(null, elem))[cljs.core.name.call(null, k)]
};
dommy.attrs.set_px_BANG_ = function() {
  var set_px_BANG___delegate = function(elem, kvs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "kvs", "kvs", -1640424927, null)))))].join(""));
    }
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var seq__20331_20337 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, kvs));
    var chunk__20332_20338 = null;
    var count__20333_20339 = 0;
    var i__20334_20340 = 0;
    while(true) {
      if(i__20334_20340 < count__20333_20339) {
        var vec__20335_20341 = cljs.core._nth.call(null, chunk__20332_20338, i__20334_20340);
        var k_20342 = cljs.core.nth.call(null, vec__20335_20341, 0, null);
        var v_20343 = cljs.core.nth.call(null, vec__20335_20341, 1, null);
        dommy.attrs.set_style_BANG_.call(null, elem__$1, k_20342, [cljs.core.str(v_20343), cljs.core.str("px")].join(""));
        var G__20344 = seq__20331_20337;
        var G__20345 = chunk__20332_20338;
        var G__20346 = count__20333_20339;
        var G__20347 = i__20334_20340 + 1;
        seq__20331_20337 = G__20344;
        chunk__20332_20338 = G__20345;
        count__20333_20339 = G__20346;
        i__20334_20340 = G__20347;
        continue
      }else {
        var temp__4092__auto___20348 = cljs.core.seq.call(null, seq__20331_20337);
        if(temp__4092__auto___20348) {
          var seq__20331_20349__$1 = temp__4092__auto___20348;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__20331_20349__$1)) {
            var c__3607__auto___20350 = cljs.core.chunk_first.call(null, seq__20331_20349__$1);
            var G__20351 = cljs.core.chunk_rest.call(null, seq__20331_20349__$1);
            var G__20352 = c__3607__auto___20350;
            var G__20353 = cljs.core.count.call(null, c__3607__auto___20350);
            var G__20354 = 0;
            seq__20331_20337 = G__20351;
            chunk__20332_20338 = G__20352;
            count__20333_20339 = G__20353;
            i__20334_20340 = G__20354;
            continue
          }else {
            var vec__20336_20355 = cljs.core.first.call(null, seq__20331_20349__$1);
            var k_20356 = cljs.core.nth.call(null, vec__20336_20355, 0, null);
            var v_20357 = cljs.core.nth.call(null, vec__20336_20355, 1, null);
            dommy.attrs.set_style_BANG_.call(null, elem__$1, k_20356, [cljs.core.str(v_20357), cljs.core.str("px")].join(""));
            var G__20358 = cljs.core.next.call(null, seq__20331_20349__$1);
            var G__20359 = null;
            var G__20360 = 0;
            var G__20361 = 0;
            seq__20331_20337 = G__20358;
            chunk__20332_20338 = G__20359;
            count__20333_20339 = G__20360;
            i__20334_20340 = G__20361;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem__$1
  };
  var set_px_BANG_ = function(elem, var_args) {
    var kvs = null;
    if(arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return set_px_BANG___delegate.call(this, elem, kvs)
  };
  set_px_BANG_.cljs$lang$maxFixedArity = 1;
  set_px_BANG_.cljs$lang$applyTo = function(arglist__20362) {
    var elem = cljs.core.first(arglist__20362);
    var kvs = cljs.core.rest(arglist__20362);
    return set_px_BANG___delegate(elem, kvs)
  };
  set_px_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_px_BANG___delegate;
  return set_px_BANG_
}();
dommy.attrs.px = function px(elem, k) {
  var pixels = dommy.attrs.style.call(null, dommy.template.__GT_node_like.call(null, elem), k);
  if(cljs.core.seq.call(null, pixels)) {
    return parseInt(pixels)
  }else {
    return null
  }
};
dommy.attrs.set_attr_BANG_ = function() {
  var set_attr_BANG_ = null;
  var set_attr_BANG___2 = function(elem, k) {
    return set_attr_BANG_.call(null, dommy.template.__GT_node_like.call(null, elem), k, "true")
  };
  var set_attr_BANG___3 = function(elem, k, v) {
    if(cljs.core.truth_(v)) {
      if(cljs.core.fn_QMARK_.call(null, v)) {
        var G__20371 = dommy.template.__GT_node_like.call(null, elem);
        G__20371[cljs.core.name.call(null, k)] = v;
        return G__20371
      }else {
        var G__20372 = dommy.template.__GT_node_like.call(null, elem);
        G__20372.setAttribute(cljs.core.name.call(null, k), k === new cljs.core.Keyword(null, "style", "style", 1123684643) ? dommy.attrs.style_str.call(null, v) : v);
        return G__20372
      }
    }else {
      return null
    }
  };
  var set_attr_BANG___4 = function() {
    var G__20379__delegate = function(elem, k, v, kvs) {
      if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
      }else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "kvs", "kvs", -1640424927, null)))))].join(""));
      }
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__20373_20380 = cljs.core.seq.call(null, cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([k, v], true), cljs.core.partition.call(null, 2, kvs)));
      var chunk__20374_20381 = null;
      var count__20375_20382 = 0;
      var i__20376_20383 = 0;
      while(true) {
        if(i__20376_20383 < count__20375_20382) {
          var vec__20377_20384 = cljs.core._nth.call(null, chunk__20374_20381, i__20376_20383);
          var k_20385__$1 = cljs.core.nth.call(null, vec__20377_20384, 0, null);
          var v_20386__$1 = cljs.core.nth.call(null, vec__20377_20384, 1, null);
          set_attr_BANG_.call(null, elem__$1, k_20385__$1, v_20386__$1);
          var G__20387 = seq__20373_20380;
          var G__20388 = chunk__20374_20381;
          var G__20389 = count__20375_20382;
          var G__20390 = i__20376_20383 + 1;
          seq__20373_20380 = G__20387;
          chunk__20374_20381 = G__20388;
          count__20375_20382 = G__20389;
          i__20376_20383 = G__20390;
          continue
        }else {
          var temp__4092__auto___20391 = cljs.core.seq.call(null, seq__20373_20380);
          if(temp__4092__auto___20391) {
            var seq__20373_20392__$1 = temp__4092__auto___20391;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__20373_20392__$1)) {
              var c__3607__auto___20393 = cljs.core.chunk_first.call(null, seq__20373_20392__$1);
              var G__20394 = cljs.core.chunk_rest.call(null, seq__20373_20392__$1);
              var G__20395 = c__3607__auto___20393;
              var G__20396 = cljs.core.count.call(null, c__3607__auto___20393);
              var G__20397 = 0;
              seq__20373_20380 = G__20394;
              chunk__20374_20381 = G__20395;
              count__20375_20382 = G__20396;
              i__20376_20383 = G__20397;
              continue
            }else {
              var vec__20378_20398 = cljs.core.first.call(null, seq__20373_20392__$1);
              var k_20399__$1 = cljs.core.nth.call(null, vec__20378_20398, 0, null);
              var v_20400__$1 = cljs.core.nth.call(null, vec__20378_20398, 1, null);
              set_attr_BANG_.call(null, elem__$1, k_20399__$1, v_20400__$1);
              var G__20401 = cljs.core.next.call(null, seq__20373_20392__$1);
              var G__20402 = null;
              var G__20403 = 0;
              var G__20404 = 0;
              seq__20373_20380 = G__20401;
              chunk__20374_20381 = G__20402;
              count__20375_20382 = G__20403;
              i__20376_20383 = G__20404;
              continue
            }
          }else {
          }
        }
        break
      }
      return elem__$1
    };
    var G__20379 = function(elem, k, v, var_args) {
      var kvs = null;
      if(arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__20379__delegate.call(this, elem, k, v, kvs)
    };
    G__20379.cljs$lang$maxFixedArity = 3;
    G__20379.cljs$lang$applyTo = function(arglist__20405) {
      var elem = cljs.core.first(arglist__20405);
      arglist__20405 = cljs.core.next(arglist__20405);
      var k = cljs.core.first(arglist__20405);
      arglist__20405 = cljs.core.next(arglist__20405);
      var v = cljs.core.first(arglist__20405);
      var kvs = cljs.core.rest(arglist__20405);
      return G__20379__delegate(elem, k, v, kvs)
    };
    G__20379.cljs$core$IFn$_invoke$arity$variadic = G__20379__delegate;
    return G__20379
  }();
  set_attr_BANG_ = function(elem, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 2:
        return set_attr_BANG___2.call(this, elem, k);
      case 3:
        return set_attr_BANG___3.call(this, elem, k, v);
      default:
        return set_attr_BANG___4.cljs$core$IFn$_invoke$arity$variadic(elem, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 3;
  set_attr_BANG_.cljs$lang$applyTo = set_attr_BANG___4.cljs$lang$applyTo;
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$2 = set_attr_BANG___2;
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$3 = set_attr_BANG___3;
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_attr_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return set_attr_BANG_
}();
dommy.attrs.remove_attr_BANG_ = function() {
  var remove_attr_BANG_ = null;
  var remove_attr_BANG___2 = function(elem, k) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([new cljs.core.Keyword(null, "class", "class", 1108647146), null, new cljs.core.Keyword(null, "classes", "classes", 1867525016), null], true).call(null, k))) {
      elem__$1.className = ""
    }else {
      elem__$1.removeAttribute(cljs.core.name.call(null, k))
    }
    return elem__$1
  };
  var remove_attr_BANG___3 = function() {
    var G__20414__delegate = function(elem, k, ks) {
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__20410_20415 = cljs.core.seq.call(null, cljs.core.cons.call(null, k, ks));
      var chunk__20411_20416 = null;
      var count__20412_20417 = 0;
      var i__20413_20418 = 0;
      while(true) {
        if(i__20413_20418 < count__20412_20417) {
          var k_20419__$1 = cljs.core._nth.call(null, chunk__20411_20416, i__20413_20418);
          remove_attr_BANG_.call(null, elem__$1, k_20419__$1);
          var G__20420 = seq__20410_20415;
          var G__20421 = chunk__20411_20416;
          var G__20422 = count__20412_20417;
          var G__20423 = i__20413_20418 + 1;
          seq__20410_20415 = G__20420;
          chunk__20411_20416 = G__20421;
          count__20412_20417 = G__20422;
          i__20413_20418 = G__20423;
          continue
        }else {
          var temp__4092__auto___20424 = cljs.core.seq.call(null, seq__20410_20415);
          if(temp__4092__auto___20424) {
            var seq__20410_20425__$1 = temp__4092__auto___20424;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__20410_20425__$1)) {
              var c__3607__auto___20426 = cljs.core.chunk_first.call(null, seq__20410_20425__$1);
              var G__20427 = cljs.core.chunk_rest.call(null, seq__20410_20425__$1);
              var G__20428 = c__3607__auto___20426;
              var G__20429 = cljs.core.count.call(null, c__3607__auto___20426);
              var G__20430 = 0;
              seq__20410_20415 = G__20427;
              chunk__20411_20416 = G__20428;
              count__20412_20417 = G__20429;
              i__20413_20418 = G__20430;
              continue
            }else {
              var k_20431__$1 = cljs.core.first.call(null, seq__20410_20425__$1);
              remove_attr_BANG_.call(null, elem__$1, k_20431__$1);
              var G__20432 = cljs.core.next.call(null, seq__20410_20425__$1);
              var G__20433 = null;
              var G__20434 = 0;
              var G__20435 = 0;
              seq__20410_20415 = G__20432;
              chunk__20411_20416 = G__20433;
              count__20412_20417 = G__20434;
              i__20413_20418 = G__20435;
              continue
            }
          }else {
          }
        }
        break
      }
      return elem__$1
    };
    var G__20414 = function(elem, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__20414__delegate.call(this, elem, k, ks)
    };
    G__20414.cljs$lang$maxFixedArity = 2;
    G__20414.cljs$lang$applyTo = function(arglist__20436) {
      var elem = cljs.core.first(arglist__20436);
      arglist__20436 = cljs.core.next(arglist__20436);
      var k = cljs.core.first(arglist__20436);
      var ks = cljs.core.rest(arglist__20436);
      return G__20414__delegate(elem, k, ks)
    };
    G__20414.cljs$core$IFn$_invoke$arity$variadic = G__20414__delegate;
    return G__20414
  }();
  remove_attr_BANG_ = function(elem, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return remove_attr_BANG___2.call(this, elem, k);
      default:
        return remove_attr_BANG___3.cljs$core$IFn$_invoke$arity$variadic(elem, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_attr_BANG_.cljs$lang$maxFixedArity = 2;
  remove_attr_BANG_.cljs$lang$applyTo = remove_attr_BANG___3.cljs$lang$applyTo;
  remove_attr_BANG_.cljs$core$IFn$_invoke$arity$2 = remove_attr_BANG___2;
  remove_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = remove_attr_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return remove_attr_BANG_
}();
dommy.attrs.attr = function attr(elem, k) {
  if(cljs.core.truth_(k)) {
    return dommy.template.__GT_node_like.call(null, elem).getAttribute(cljs.core.name.call(null, k))
  }else {
    return null
  }
};
dommy.attrs.hidden_QMARK_ = function hidden_QMARK_(elem) {
  return"none" === dommy.template.__GT_node_like.call(null, elem).style.display
};
dommy.attrs.toggle_BANG_ = function() {
  var toggle_BANG_ = null;
  var toggle_BANG___1 = function(elem) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    toggle_BANG_.call(null, elem__$1, dommy.attrs.hidden_QMARK_.call(null, elem__$1));
    return elem__$1
  };
  var toggle_BANG___2 = function(elem, show_QMARK_) {
    var G__20438 = dommy.template.__GT_node_like.call(null, elem);
    G__20438.style.display = show_QMARK_ ? "" : "none";
    return G__20438
  };
  toggle_BANG_ = function(elem, show_QMARK_) {
    switch(arguments.length) {
      case 1:
        return toggle_BANG___1.call(this, elem);
      case 2:
        return toggle_BANG___2.call(this, elem, show_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  toggle_BANG_.cljs$core$IFn$_invoke$arity$1 = toggle_BANG___1;
  toggle_BANG_.cljs$core$IFn$_invoke$arity$2 = toggle_BANG___2;
  return toggle_BANG_
}();
dommy.attrs.hide_BANG_ = function hide_BANG_(elem) {
  var G__20440 = dommy.template.__GT_node_like.call(null, elem);
  dommy.attrs.toggle_BANG_.call(null, G__20440, false);
  return G__20440
};
dommy.attrs.show_BANG_ = function show_BANG_(elem) {
  var G__20442 = dommy.template.__GT_node_like.call(null, elem);
  dommy.attrs.toggle_BANG_.call(null, G__20442, true);
  return G__20442
};
dommy.attrs.bounding_client_rect = function bounding_client_rect(elem) {
  return cljs.core.js__GT_clj.call(null, function() {
    var G__20444 = dommy.template.__GT_node_like.call(null, elem).getBoundingClientRect();
    G__20444["constructor"] = Object;
    return G__20444
  }(), new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), true)
};
goog.provide("dommy.template");
goog.require("cljs.core");
goog.require("dommy.attrs");
goog.require("dommy.attrs");
goog.require("clojure.string");
goog.require("clojure.string");
dommy.template.PElement = {};
dommy.template._elem = function _elem(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.dommy$template$PElement$_elem$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.dommy$template$PElement$_elem$arity$1(this$)
  }else {
    var x__3494__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = dommy.template._elem[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = dommy.template._elem["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "PElement.-elem", this$);
        }
      }
    }().call(null, this$)
  }
};
dommy.template.next_css_index = function next_css_index(s, start_idx) {
  var id_idx = s.indexOf("#", start_idx);
  var class_idx = s.indexOf(".", start_idx);
  var idx = Math.min(id_idx, class_idx);
  if(idx < 0) {
    return Math.max(id_idx, class_idx)
  }else {
    return idx
  }
};
dommy.template.base_element = function base_element(node_key) {
  var node_str = cljs.core.name.call(null, node_key);
  var base_idx = dommy.template.next_css_index.call(null, node_str, 0);
  var tag = base_idx > 0 ? node_str.substring(0, base_idx) : base_idx === 0 ? "div" : new cljs.core.Keyword(null, "else", "else", 1017020587) ? node_str : null;
  var node = document.createElement(tag);
  if(base_idx >= 0) {
    var str_20013 = node_str.substring(base_idx);
    while(true) {
      var next_idx_20014 = dommy.template.next_css_index.call(null, str_20013, 1);
      var frag_20015 = next_idx_20014 >= 0 ? str_20013.substring(0, next_idx_20014) : str_20013;
      var G__20012_20016 = frag_20015.charAt(0);
      if(cljs.core._EQ_.call(null, "#", G__20012_20016)) {
        node.setAttribute("id", frag_20015.substring(1))
      }else {
        if(cljs.core._EQ_.call(null, ".", G__20012_20016)) {
          dommy.attrs.add_class_BANG_.call(null, node, frag_20015.substring(1))
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(frag_20015.charAt(0))].join(""));
          }else {
          }
        }
      }
      if(next_idx_20014 >= 0) {
        var G__20017 = str_20013.substring(next_idx_20014);
        str_20013 = G__20017;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return node
};
dommy.template.throw_unable_to_make_node = function throw_unable_to_make_node(node_data) {
  throw[cljs.core.str("Don't know how to make node from: "), cljs.core.str(cljs.core.pr_str.call(null, node_data))].join("");
};
dommy.template.__GT_document_fragment = function() {
  var __GT_document_fragment = null;
  var __GT_document_fragment__1 = function(data) {
    return __GT_document_fragment.call(null, document.createDocumentFragment(), data)
  };
  var __GT_document_fragment__2 = function(result_frag, data) {
    if(function() {
      var G__20023 = data;
      if(G__20023) {
        if(cljs.core.truth_(function() {
          var or__3943__auto__ = null;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return G__20023.dommy$template$PElement$
          }
        }())) {
          return true
        }else {
          if(!G__20023.cljs$lang$protocol_mask$partition$) {
            return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__20023)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__20023)
      }
    }()) {
      result_frag.appendChild(dommy.template._elem.call(null, data));
      return result_frag
    }else {
      if(cljs.core.seq_QMARK_.call(null, data)) {
        var seq__20024_20028 = cljs.core.seq.call(null, data);
        var chunk__20025_20029 = null;
        var count__20026_20030 = 0;
        var i__20027_20031 = 0;
        while(true) {
          if(i__20027_20031 < count__20026_20030) {
            var child_20032 = cljs.core._nth.call(null, chunk__20025_20029, i__20027_20031);
            __GT_document_fragment.call(null, result_frag, child_20032);
            var G__20033 = seq__20024_20028;
            var G__20034 = chunk__20025_20029;
            var G__20035 = count__20026_20030;
            var G__20036 = i__20027_20031 + 1;
            seq__20024_20028 = G__20033;
            chunk__20025_20029 = G__20034;
            count__20026_20030 = G__20035;
            i__20027_20031 = G__20036;
            continue
          }else {
            var temp__4092__auto___20037 = cljs.core.seq.call(null, seq__20024_20028);
            if(temp__4092__auto___20037) {
              var seq__20024_20038__$1 = temp__4092__auto___20037;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__20024_20038__$1)) {
                var c__3607__auto___20039 = cljs.core.chunk_first.call(null, seq__20024_20038__$1);
                var G__20040 = cljs.core.chunk_rest.call(null, seq__20024_20038__$1);
                var G__20041 = c__3607__auto___20039;
                var G__20042 = cljs.core.count.call(null, c__3607__auto___20039);
                var G__20043 = 0;
                seq__20024_20028 = G__20040;
                chunk__20025_20029 = G__20041;
                count__20026_20030 = G__20042;
                i__20027_20031 = G__20043;
                continue
              }else {
                var child_20044 = cljs.core.first.call(null, seq__20024_20038__$1);
                __GT_document_fragment.call(null, result_frag, child_20044);
                var G__20045 = cljs.core.next.call(null, seq__20024_20038__$1);
                var G__20046 = null;
                var G__20047 = 0;
                var G__20048 = 0;
                seq__20024_20028 = G__20045;
                chunk__20025_20029 = G__20046;
                count__20026_20030 = G__20047;
                i__20027_20031 = G__20048;
                continue
              }
            }else {
            }
          }
          break
        }
        return result_frag
      }else {
        if(data == null) {
          return result_frag
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return dommy.template.throw_unable_to_make_node.call(null, data)
          }else {
            return null
          }
        }
      }
    }
  };
  __GT_document_fragment = function(result_frag, data) {
    switch(arguments.length) {
      case 1:
        return __GT_document_fragment__1.call(this, result_frag);
      case 2:
        return __GT_document_fragment__2.call(this, result_frag, data)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_document_fragment.cljs$core$IFn$_invoke$arity$1 = __GT_document_fragment__1;
  __GT_document_fragment.cljs$core$IFn$_invoke$arity$2 = __GT_document_fragment__2;
  return __GT_document_fragment
}();
dommy.template.__GT_node_like = function __GT_node_like(data) {
  if(function() {
    var G__20050 = data;
    if(G__20050) {
      if(cljs.core.truth_(function() {
        var or__3943__auto__ = null;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return G__20050.dommy$template$PElement$
        }
      }())) {
        return true
      }else {
        if(!G__20050.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__20050)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__20050)
    }
  }()) {
    return dommy.template._elem.call(null, data)
  }else {
    return dommy.template.__GT_document_fragment.call(null, data)
  }
};
dommy.template.compound_element = function compound_element(p__20051) {
  var vec__20070 = p__20051;
  var tag_name = cljs.core.nth.call(null, vec__20070, 0, null);
  var maybe_attrs = cljs.core.nth.call(null, vec__20070, 1, null);
  var children = cljs.core.nthnext.call(null, vec__20070, 2);
  var n = dommy.template.base_element.call(null, tag_name);
  var attrs = function() {
    var and__3941__auto__ = cljs.core.map_QMARK_.call(null, maybe_attrs);
    if(and__3941__auto__) {
      return!function() {
        var G__20071 = maybe_attrs;
        if(G__20071) {
          if(cljs.core.truth_(function() {
            var or__3943__auto__ = null;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return G__20071.dommy$template$PElement$
            }
          }())) {
            return true
          }else {
            if(!G__20071.cljs$lang$protocol_mask$partition$) {
              return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__20071)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__20071)
        }
      }()
    }else {
      return and__3941__auto__
    }
  }() ? maybe_attrs : null;
  var children__$1 = cljs.core.truth_(attrs) ? children : cljs.core.cons.call(null, maybe_attrs, children);
  var seq__20072_20088 = cljs.core.seq.call(null, attrs);
  var chunk__20073_20089 = null;
  var count__20074_20090 = 0;
  var i__20075_20091 = 0;
  while(true) {
    if(i__20075_20091 < count__20074_20090) {
      var vec__20076_20092 = cljs.core._nth.call(null, chunk__20073_20089, i__20075_20091);
      var k_20093 = cljs.core.nth.call(null, vec__20076_20092, 0, null);
      var v_20094 = cljs.core.nth.call(null, vec__20076_20092, 1, null);
      var G__20077_20095 = k_20093;
      if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "classes", "classes", 1867525016), G__20077_20095)) {
        var seq__20078_20096 = cljs.core.seq.call(null, v_20094);
        var chunk__20079_20097 = null;
        var count__20080_20098 = 0;
        var i__20081_20099 = 0;
        while(true) {
          if(i__20081_20099 < count__20080_20098) {
            var c_20100 = cljs.core._nth.call(null, chunk__20079_20097, i__20081_20099);
            dommy.attrs.add_class_BANG_.call(null, n, c_20100);
            var G__20101 = seq__20078_20096;
            var G__20102 = chunk__20079_20097;
            var G__20103 = count__20080_20098;
            var G__20104 = i__20081_20099 + 1;
            seq__20078_20096 = G__20101;
            chunk__20079_20097 = G__20102;
            count__20080_20098 = G__20103;
            i__20081_20099 = G__20104;
            continue
          }else {
            var temp__4092__auto___20105 = cljs.core.seq.call(null, seq__20078_20096);
            if(temp__4092__auto___20105) {
              var seq__20078_20106__$1 = temp__4092__auto___20105;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__20078_20106__$1)) {
                var c__3607__auto___20107 = cljs.core.chunk_first.call(null, seq__20078_20106__$1);
                var G__20108 = cljs.core.chunk_rest.call(null, seq__20078_20106__$1);
                var G__20109 = c__3607__auto___20107;
                var G__20110 = cljs.core.count.call(null, c__3607__auto___20107);
                var G__20111 = 0;
                seq__20078_20096 = G__20108;
                chunk__20079_20097 = G__20109;
                count__20080_20098 = G__20110;
                i__20081_20099 = G__20111;
                continue
              }else {
                var c_20112 = cljs.core.first.call(null, seq__20078_20106__$1);
                dommy.attrs.add_class_BANG_.call(null, n, c_20112);
                var G__20113 = cljs.core.next.call(null, seq__20078_20106__$1);
                var G__20114 = null;
                var G__20115 = 0;
                var G__20116 = 0;
                seq__20078_20096 = G__20113;
                chunk__20079_20097 = G__20114;
                count__20080_20098 = G__20115;
                i__20081_20099 = G__20116;
                continue
              }
            }else {
            }
          }
          break
        }
      }else {
        if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "class", "class", 1108647146), G__20077_20095)) {
          dommy.attrs.add_class_BANG_.call(null, n, v_20094)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            dommy.attrs.set_attr_BANG_.call(null, n, k_20093, v_20094)
          }else {
          }
        }
      }
      var G__20117 = seq__20072_20088;
      var G__20118 = chunk__20073_20089;
      var G__20119 = count__20074_20090;
      var G__20120 = i__20075_20091 + 1;
      seq__20072_20088 = G__20117;
      chunk__20073_20089 = G__20118;
      count__20074_20090 = G__20119;
      i__20075_20091 = G__20120;
      continue
    }else {
      var temp__4092__auto___20121 = cljs.core.seq.call(null, seq__20072_20088);
      if(temp__4092__auto___20121) {
        var seq__20072_20122__$1 = temp__4092__auto___20121;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__20072_20122__$1)) {
          var c__3607__auto___20123 = cljs.core.chunk_first.call(null, seq__20072_20122__$1);
          var G__20124 = cljs.core.chunk_rest.call(null, seq__20072_20122__$1);
          var G__20125 = c__3607__auto___20123;
          var G__20126 = cljs.core.count.call(null, c__3607__auto___20123);
          var G__20127 = 0;
          seq__20072_20088 = G__20124;
          chunk__20073_20089 = G__20125;
          count__20074_20090 = G__20126;
          i__20075_20091 = G__20127;
          continue
        }else {
          var vec__20082_20128 = cljs.core.first.call(null, seq__20072_20122__$1);
          var k_20129 = cljs.core.nth.call(null, vec__20082_20128, 0, null);
          var v_20130 = cljs.core.nth.call(null, vec__20082_20128, 1, null);
          var G__20083_20131 = k_20129;
          if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "classes", "classes", 1867525016), G__20083_20131)) {
            var seq__20084_20132 = cljs.core.seq.call(null, v_20130);
            var chunk__20085_20133 = null;
            var count__20086_20134 = 0;
            var i__20087_20135 = 0;
            while(true) {
              if(i__20087_20135 < count__20086_20134) {
                var c_20136 = cljs.core._nth.call(null, chunk__20085_20133, i__20087_20135);
                dommy.attrs.add_class_BANG_.call(null, n, c_20136);
                var G__20137 = seq__20084_20132;
                var G__20138 = chunk__20085_20133;
                var G__20139 = count__20086_20134;
                var G__20140 = i__20087_20135 + 1;
                seq__20084_20132 = G__20137;
                chunk__20085_20133 = G__20138;
                count__20086_20134 = G__20139;
                i__20087_20135 = G__20140;
                continue
              }else {
                var temp__4092__auto___20141__$1 = cljs.core.seq.call(null, seq__20084_20132);
                if(temp__4092__auto___20141__$1) {
                  var seq__20084_20142__$1 = temp__4092__auto___20141__$1;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__20084_20142__$1)) {
                    var c__3607__auto___20143 = cljs.core.chunk_first.call(null, seq__20084_20142__$1);
                    var G__20144 = cljs.core.chunk_rest.call(null, seq__20084_20142__$1);
                    var G__20145 = c__3607__auto___20143;
                    var G__20146 = cljs.core.count.call(null, c__3607__auto___20143);
                    var G__20147 = 0;
                    seq__20084_20132 = G__20144;
                    chunk__20085_20133 = G__20145;
                    count__20086_20134 = G__20146;
                    i__20087_20135 = G__20147;
                    continue
                  }else {
                    var c_20148 = cljs.core.first.call(null, seq__20084_20142__$1);
                    dommy.attrs.add_class_BANG_.call(null, n, c_20148);
                    var G__20149 = cljs.core.next.call(null, seq__20084_20142__$1);
                    var G__20150 = null;
                    var G__20151 = 0;
                    var G__20152 = 0;
                    seq__20084_20132 = G__20149;
                    chunk__20085_20133 = G__20150;
                    count__20086_20134 = G__20151;
                    i__20087_20135 = G__20152;
                    continue
                  }
                }else {
                }
              }
              break
            }
          }else {
            if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "class", "class", 1108647146), G__20083_20131)) {
              dommy.attrs.add_class_BANG_.call(null, n, v_20130)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                dommy.attrs.set_attr_BANG_.call(null, n, k_20129, v_20130)
              }else {
              }
            }
          }
          var G__20153 = cljs.core.next.call(null, seq__20072_20122__$1);
          var G__20154 = null;
          var G__20155 = 0;
          var G__20156 = 0;
          seq__20072_20088 = G__20153;
          chunk__20073_20089 = G__20154;
          count__20074_20090 = G__20155;
          i__20075_20091 = G__20156;
          continue
        }
      }else {
      }
    }
    break
  }
  n.appendChild(dommy.template.__GT_node_like.call(null, children__$1));
  return n
};
dommy.template.PElement["string"] = true;
dommy.template._elem["string"] = function(this$) {
  if(this$ instanceof cljs.core.Keyword) {
    return dommy.template.base_element.call(null, this$)
  }else {
    return document.createTextNode([cljs.core.str(this$)].join(""))
  }
};
dommy.template.PElement["number"] = true;
dommy.template._elem["number"] = function(this$) {
  return document.createTextNode([cljs.core.str(this$)].join(""))
};
cljs.core.PersistentVector.prototype.dommy$template$PElement$ = true;
cljs.core.PersistentVector.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  return dommy.template.compound_element.call(null, this$)
};
Document.prototype.dommy$template$PElement$ = true;
Document.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  return this$
};
Text.prototype.dommy$template$PElement$ = true;
Text.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  return this$
};
DocumentFragment.prototype.dommy$template$PElement$ = true;
DocumentFragment.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  return this$
};
HTMLElement.prototype.dommy$template$PElement$ = true;
HTMLElement.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  return this$
};
try {
  Window.prototype.dommy$template$PElement$ = true;
  Window.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
    return this$
  }
}catch(e20157) {
  if(e20157 instanceof ReferenceError) {
    var __20158 = e20157;
    console.log("PElement: js/Window not defined by browser, skipping it... (running on phantomjs?)")
  }else {
    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      throw e20157;
    }else {
    }
  }
}
dommy.template.node = function node(data) {
  if(function() {
    var G__20160 = data;
    if(G__20160) {
      if(cljs.core.truth_(function() {
        var or__3943__auto__ = null;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return G__20160.dommy$template$PElement$
        }
      }())) {
        return true
      }else {
        if(!G__20160.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__20160)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__20160)
    }
  }()) {
    return dommy.template._elem.call(null, data)
  }else {
    return dommy.template.throw_unable_to_make_node.call(null, data)
  }
};
dommy.template.html__GT_nodes = function html__GT_nodes(html) {
  var parent = document.createElement("div");
  parent.insertAdjacentHTML("beforeend", html);
  return cljs.core.seq.call(null, Array.prototype.slice.call(parent.childNodes))
};
goog.provide("dommy.utils");
goog.require("cljs.core");
dommy.utils.dissoc_in = function dissoc_in(m, p__20008) {
  var vec__20010 = p__20008;
  var k = cljs.core.nth.call(null, vec__20010, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__20010, 1);
  if(cljs.core.truth_(m)) {
    var temp__4090__auto__ = function() {
      var and__3941__auto__ = ks;
      if(cljs.core.truth_(and__3941__auto__)) {
        return dissoc_in.call(null, m.call(null, k), ks)
      }else {
        return and__3941__auto__
      }
    }();
    if(cljs.core.truth_(temp__4090__auto__)) {
      var res = temp__4090__auto__;
      return cljs.core.assoc.call(null, m, k, res)
    }else {
      var res = cljs.core.dissoc.call(null, m, k);
      if(cljs.core.empty_QMARK_.call(null, res)) {
        return null
      }else {
        return res
      }
    }
  }else {
    return null
  }
};
dommy.utils.__GT_Array = function __GT_Array(array_like) {
  return Array.prototype.slice.call(array_like)
};
goog.provide("dommy.core");
goog.require("cljs.core");
goog.require("dommy.template");
goog.require("dommy.template");
goog.require("dommy.attrs");
goog.require("dommy.attrs");
goog.require("dommy.utils");
goog.require("dommy.utils");
goog.require("clojure.string");
goog.require("clojure.string");
dommy.core.has_class_QMARK_ = dommy.attrs.has_class_QMARK_;
dommy.core.add_class_BANG_ = dommy.attrs.add_class_BANG_;
dommy.core.remove_class_BANG_ = dommy.attrs.remove_class_BANG_;
dommy.core.toggle_class_BANG_ = dommy.attrs.toggle_class_BANG_;
dommy.core.set_attr_BANG_ = dommy.attrs.set_attr_BANG_;
dommy.core.set_style_BANG_ = dommy.attrs.set_style_BANG_;
dommy.core.set_px_BANG_ = dommy.attrs.set_px_BANG_;
dommy.core.px = dommy.attrs.px;
dommy.core.style_str = dommy.attrs.style_str;
dommy.core.style = dommy.attrs.style;
dommy.core.remove_attr_BANG_ = dommy.attrs.remove_attr_BANG_;
dommy.core.attr = dommy.attrs.attr;
dommy.core.hidden_QMARK_ = dommy.attrs.hidden_QMARK_;
dommy.core.toggle_BANG_ = dommy.attrs.toggle_BANG_;
dommy.core.hide_BANG_ = dommy.attrs.hide_BANG_;
dommy.core.show_BANG_ = dommy.attrs.show_BANG_;
dommy.core.bounding_client_rect = dommy.attrs.bounding_client_rect;
dommy.core.dissoc_in = dommy.utils.dissoc_in;
dommy.core.__GT_Array = dommy.utils.__GT_Array;
dommy.core.set_html_BANG_ = function set_html_BANG_(elem, html) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  elem__$1.innerHTML = html;
  return elem__$1
};
dommy.core.html = function html(elem) {
  return dommy.template.__GT_node_like.call(null, elem).innerHTML
};
dommy.core.set_text_BANG_ = function set_text_BANG_(elem, text) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var prop = cljs.core.truth_(elem__$1.textContent) ? "textContent" : "innerText";
  elem__$1[prop] = text;
  return elem__$1
};
dommy.core.text = function text(elem) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var or__3943__auto__ = elem__$1.textContent;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return elem__$1.innerText
  }
};
dommy.core.value = function value(elem) {
  return dommy.template.__GT_node_like.call(null, elem).value
};
dommy.core.set_value_BANG_ = function set_value_BANG_(elem, value) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  elem__$1.value = value;
  return elem__$1
};
dommy.core.append_BANG_ = function() {
  var append_BANG_ = null;
  var append_BANG___2 = function(parent, child) {
    var G__19626 = dommy.template.__GT_node_like.call(null, parent);
    G__19626.appendChild(dommy.template.__GT_node_like.call(null, child));
    return G__19626
  };
  var append_BANG___3 = function() {
    var G__19631__delegate = function(parent, child, more_children) {
      var parent__$1 = dommy.template.__GT_node_like.call(null, parent);
      var seq__19627_19632 = cljs.core.seq.call(null, cljs.core.cons.call(null, child, more_children));
      var chunk__19628_19633 = null;
      var count__19629_19634 = 0;
      var i__19630_19635 = 0;
      while(true) {
        if(i__19630_19635 < count__19629_19634) {
          var c_19636 = cljs.core._nth.call(null, chunk__19628_19633, i__19630_19635);
          append_BANG_.call(null, parent__$1, c_19636);
          var G__19637 = seq__19627_19632;
          var G__19638 = chunk__19628_19633;
          var G__19639 = count__19629_19634;
          var G__19640 = i__19630_19635 + 1;
          seq__19627_19632 = G__19637;
          chunk__19628_19633 = G__19638;
          count__19629_19634 = G__19639;
          i__19630_19635 = G__19640;
          continue
        }else {
          var temp__4092__auto___19641 = cljs.core.seq.call(null, seq__19627_19632);
          if(temp__4092__auto___19641) {
            var seq__19627_19642__$1 = temp__4092__auto___19641;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__19627_19642__$1)) {
              var c__3607__auto___19643 = cljs.core.chunk_first.call(null, seq__19627_19642__$1);
              var G__19644 = cljs.core.chunk_rest.call(null, seq__19627_19642__$1);
              var G__19645 = c__3607__auto___19643;
              var G__19646 = cljs.core.count.call(null, c__3607__auto___19643);
              var G__19647 = 0;
              seq__19627_19632 = G__19644;
              chunk__19628_19633 = G__19645;
              count__19629_19634 = G__19646;
              i__19630_19635 = G__19647;
              continue
            }else {
              var c_19648 = cljs.core.first.call(null, seq__19627_19642__$1);
              append_BANG_.call(null, parent__$1, c_19648);
              var G__19649 = cljs.core.next.call(null, seq__19627_19642__$1);
              var G__19650 = null;
              var G__19651 = 0;
              var G__19652 = 0;
              seq__19627_19632 = G__19649;
              chunk__19628_19633 = G__19650;
              count__19629_19634 = G__19651;
              i__19630_19635 = G__19652;
              continue
            }
          }else {
          }
        }
        break
      }
      return parent__$1
    };
    var G__19631 = function(parent, child, var_args) {
      var more_children = null;
      if(arguments.length > 2) {
        more_children = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__19631__delegate.call(this, parent, child, more_children)
    };
    G__19631.cljs$lang$maxFixedArity = 2;
    G__19631.cljs$lang$applyTo = function(arglist__19653) {
      var parent = cljs.core.first(arglist__19653);
      arglist__19653 = cljs.core.next(arglist__19653);
      var child = cljs.core.first(arglist__19653);
      var more_children = cljs.core.rest(arglist__19653);
      return G__19631__delegate(parent, child, more_children)
    };
    G__19631.cljs$core$IFn$_invoke$arity$variadic = G__19631__delegate;
    return G__19631
  }();
  append_BANG_ = function(parent, child, var_args) {
    var more_children = var_args;
    switch(arguments.length) {
      case 2:
        return append_BANG___2.call(this, parent, child);
      default:
        return append_BANG___3.cljs$core$IFn$_invoke$arity$variadic(parent, child, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  append_BANG_.cljs$lang$maxFixedArity = 2;
  append_BANG_.cljs$lang$applyTo = append_BANG___3.cljs$lang$applyTo;
  append_BANG_.cljs$core$IFn$_invoke$arity$2 = append_BANG___2;
  append_BANG_.cljs$core$IFn$_invoke$arity$variadic = append_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return append_BANG_
}();
dommy.core.prepend_BANG_ = function() {
  var prepend_BANG_ = null;
  var prepend_BANG___2 = function(parent, child) {
    var G__19659 = dommy.template.__GT_node_like.call(null, parent);
    G__19659.insertBefore(dommy.template.__GT_node_like.call(null, child), parent.firstChild);
    return G__19659
  };
  var prepend_BANG___3 = function() {
    var G__19664__delegate = function(parent, child, more_children) {
      var parent__$1 = dommy.template.__GT_node_like.call(null, parent);
      var seq__19660_19665 = cljs.core.seq.call(null, cljs.core.cons.call(null, child, more_children));
      var chunk__19661_19666 = null;
      var count__19662_19667 = 0;
      var i__19663_19668 = 0;
      while(true) {
        if(i__19663_19668 < count__19662_19667) {
          var c_19669 = cljs.core._nth.call(null, chunk__19661_19666, i__19663_19668);
          prepend_BANG_.call(null, parent__$1, c_19669);
          var G__19670 = seq__19660_19665;
          var G__19671 = chunk__19661_19666;
          var G__19672 = count__19662_19667;
          var G__19673 = i__19663_19668 + 1;
          seq__19660_19665 = G__19670;
          chunk__19661_19666 = G__19671;
          count__19662_19667 = G__19672;
          i__19663_19668 = G__19673;
          continue
        }else {
          var temp__4092__auto___19674 = cljs.core.seq.call(null, seq__19660_19665);
          if(temp__4092__auto___19674) {
            var seq__19660_19675__$1 = temp__4092__auto___19674;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__19660_19675__$1)) {
              var c__3607__auto___19676 = cljs.core.chunk_first.call(null, seq__19660_19675__$1);
              var G__19677 = cljs.core.chunk_rest.call(null, seq__19660_19675__$1);
              var G__19678 = c__3607__auto___19676;
              var G__19679 = cljs.core.count.call(null, c__3607__auto___19676);
              var G__19680 = 0;
              seq__19660_19665 = G__19677;
              chunk__19661_19666 = G__19678;
              count__19662_19667 = G__19679;
              i__19663_19668 = G__19680;
              continue
            }else {
              var c_19681 = cljs.core.first.call(null, seq__19660_19675__$1);
              prepend_BANG_.call(null, parent__$1, c_19681);
              var G__19682 = cljs.core.next.call(null, seq__19660_19675__$1);
              var G__19683 = null;
              var G__19684 = 0;
              var G__19685 = 0;
              seq__19660_19665 = G__19682;
              chunk__19661_19666 = G__19683;
              count__19662_19667 = G__19684;
              i__19663_19668 = G__19685;
              continue
            }
          }else {
          }
        }
        break
      }
      return parent__$1
    };
    var G__19664 = function(parent, child, var_args) {
      var more_children = null;
      if(arguments.length > 2) {
        more_children = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__19664__delegate.call(this, parent, child, more_children)
    };
    G__19664.cljs$lang$maxFixedArity = 2;
    G__19664.cljs$lang$applyTo = function(arglist__19686) {
      var parent = cljs.core.first(arglist__19686);
      arglist__19686 = cljs.core.next(arglist__19686);
      var child = cljs.core.first(arglist__19686);
      var more_children = cljs.core.rest(arglist__19686);
      return G__19664__delegate(parent, child, more_children)
    };
    G__19664.cljs$core$IFn$_invoke$arity$variadic = G__19664__delegate;
    return G__19664
  }();
  prepend_BANG_ = function(parent, child, var_args) {
    var more_children = var_args;
    switch(arguments.length) {
      case 2:
        return prepend_BANG___2.call(this, parent, child);
      default:
        return prepend_BANG___3.cljs$core$IFn$_invoke$arity$variadic(parent, child, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prepend_BANG_.cljs$lang$maxFixedArity = 2;
  prepend_BANG_.cljs$lang$applyTo = prepend_BANG___3.cljs$lang$applyTo;
  prepend_BANG_.cljs$core$IFn$_invoke$arity$2 = prepend_BANG___2;
  prepend_BANG_.cljs$core$IFn$_invoke$arity$variadic = prepend_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return prepend_BANG_
}();
dommy.core.insert_before_BANG_ = function insert_before_BANG_(elem, other) {
  var actual_node = dommy.template.__GT_node_like.call(null, elem);
  var other__$1 = dommy.template.__GT_node_like.call(null, other);
  if(cljs.core.truth_(other__$1.parentNode)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, ".-parentNode", ".-parentNode", 499016324, null), new cljs.core.Symbol(null, "other", "other", -1534461751, null))))].join(""));
  }
  other__$1.parentNode.insertBefore(actual_node, other__$1);
  return actual_node
};
dommy.core.insert_after_BANG_ = function insert_after_BANG_(elem, other) {
  var actual_node = dommy.template.__GT_node_like.call(null, elem);
  var other__$1 = dommy.template.__GT_node_like.call(null, other);
  var parent = other__$1.parentNode;
  var temp__4090__auto___19687 = other__$1.nextSibling;
  if(cljs.core.truth_(temp__4090__auto___19687)) {
    var next_19688 = temp__4090__auto___19687;
    parent.insertBefore(actual_node, next_19688)
  }else {
    parent.appendChild(actual_node)
  }
  return actual_node
};
dommy.core.replace_BANG_ = function replace_BANG_(elem, new$) {
  var new$__$1 = dommy.template.__GT_node_like.call(null, new$);
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  if(cljs.core.truth_(elem__$1.parentNode)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, ".-parentNode", ".-parentNode", 499016324, null), new cljs.core.Symbol(null, "elem", "elem", -1637415608, null))))].join(""));
  }
  elem__$1.parentNode.replaceChild(new$__$1, elem__$1);
  return new$__$1
};
dommy.core.replace_contents_BANG_ = function replace_contents_BANG_(parent, node_like) {
  var G__19690 = dommy.template.__GT_node_like.call(null, parent);
  G__19690.innerHTML = "";
  dommy.core.append_BANG_.call(null, G__19690, node_like);
  return G__19690
};
dommy.core.remove_BANG_ = function remove_BANG_(elem) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var G__19692 = elem__$1.parentNode;
  G__19692.removeChild(elem__$1);
  return G__19692
};
dommy.core.selector = function selector(data) {
  if(cljs.core.coll_QMARK_.call(null, data)) {
    return clojure.string.join.call(null, " ", cljs.core.map.call(null, selector, data))
  }else {
    if(function() {
      var or__3943__auto__ = typeof data === "string";
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return data instanceof cljs.core.Keyword
      }
    }()) {
      return cljs.core.name.call(null, data)
    }else {
      return null
    }
  }
};
dommy.core.ancestor_nodes = function ancestor_nodes(elem) {
  return cljs.core.take_while.call(null, cljs.core.identity, cljs.core.iterate.call(null, function(p1__19693_SHARP_) {
    return p1__19693_SHARP_.parentNode
  }, dommy.template.__GT_node_like.call(null, elem)))
};
dommy.core.matches_pred = function() {
  var matches_pred = null;
  var matches_pred__1 = function(selector) {
    return matches_pred.call(null, document, selector)
  };
  var matches_pred__2 = function(base, selector) {
    var matches = dommy.utils.__GT_Array.call(null, dommy.template.__GT_node_like.call(null, dommy.template.__GT_node_like.call(null, base)).querySelectorAll(dommy.core.selector.call(null, selector)));
    return function(elem) {
      return matches.indexOf(elem) >= 0
    }
  };
  matches_pred = function(base, selector) {
    switch(arguments.length) {
      case 1:
        return matches_pred__1.call(this, base);
      case 2:
        return matches_pred__2.call(this, base, selector)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  matches_pred.cljs$core$IFn$_invoke$arity$1 = matches_pred__1;
  matches_pred.cljs$core$IFn$_invoke$arity$2 = matches_pred__2;
  return matches_pred
}();
dommy.core.closest = function() {
  var closest = null;
  var closest__2 = function(elem, selector) {
    return cljs.core.first.call(null, cljs.core.filter.call(null, dommy.core.matches_pred.call(null, selector), dommy.core.ancestor_nodes.call(null, dommy.template.__GT_node_like.call(null, elem))))
  };
  var closest__3 = function(base, elem, selector) {
    var base__$1 = dommy.template.__GT_node_like.call(null, base);
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    return cljs.core.first.call(null, cljs.core.filter.call(null, dommy.core.matches_pred.call(null, base__$1, selector), cljs.core.take_while.call(null, function(p1__19694_SHARP_) {
      return!(p1__19694_SHARP_ === base__$1)
    }, dommy.core.ancestor_nodes.call(null, elem__$1))))
  };
  closest = function(base, elem, selector) {
    switch(arguments.length) {
      case 2:
        return closest__2.call(this, base, elem);
      case 3:
        return closest__3.call(this, base, elem, selector)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  closest.cljs$core$IFn$_invoke$arity$2 = closest__2;
  closest.cljs$core$IFn$_invoke$arity$3 = closest__3;
  return closest
}();
dommy.core.descendant_QMARK_ = function descendant_QMARK_(descendant, ancestor) {
  var descendant__$1 = dommy.template.__GT_node_like.call(null, descendant);
  var ancestor__$1 = dommy.template.__GT_node_like.call(null, ancestor);
  if(cljs.core.truth_(ancestor__$1.contains)) {
    return ancestor__$1.contains(descendant__$1)
  }else {
    if(cljs.core.truth_(ancestor__$1.compareDocumentPosition)) {
      return(ancestor__$1.compareDocumentPosition(descendant__$1) & 1 << 4) != 0
    }else {
      return null
    }
  }
};
dommy.core.special_listener_makers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__19695) {
  var vec__19696 = p__19695;
  var special_mouse_event = cljs.core.nth.call(null, vec__19696, 0, null);
  var real_mouse_event = cljs.core.nth.call(null, vec__19696, 1, null);
  return cljs.core.PersistentVector.fromArray([special_mouse_event, cljs.core.PersistentArrayMap.fromArray([real_mouse_event, function(f) {
    return function(event) {
      var related_target = event.relatedTarget;
      var listener_target = function() {
        var or__3943__auto__ = event.selectedTarget;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return event.currentTarget
        }
      }();
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = related_target;
        if(cljs.core.truth_(and__3941__auto__)) {
          return dommy.core.descendant_QMARK_.call(null, related_target, listener_target)
        }else {
          return and__3941__auto__
        }
      }())) {
        return null
      }else {
        return f.call(null, event)
      }
    }
  }], true)], true)
}, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "mouseenter", "mouseenter", 2027084997), new cljs.core.Keyword(null, "mouseover", "mouseover", 1601081963), new cljs.core.Keyword(null, "mouseleave", "mouseleave", 2033263780), new cljs.core.Keyword(null, "mouseout", "mouseout", 894298107)], true)));
dommy.core.live_listener = function live_listener(elem, selector, f) {
  return function(event) {
    var temp__4092__auto__ = dommy.core.closest.call(null, dommy.template.__GT_node_like.call(null, elem), event.target, selector);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var selected_target = temp__4092__auto__;
      event.selectedTarget = selected_target;
      return f.call(null, event)
    }else {
      return null
    }
  }
};
dommy.core.event_listeners = function event_listeners(elem) {
  var or__3943__auto__ = dommy.template.__GT_node_like.call(null, elem).dommyEventListeners;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return cljs.core.PersistentArrayMap.EMPTY
  }
};
dommy.core.update_event_listeners_BANG_ = function() {
  var update_event_listeners_BANG___delegate = function(elem, f, args) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    return elem__$1.dommyEventListeners = cljs.core.apply.call(null, f, dommy.core.event_listeners.call(null, elem__$1), args)
  };
  var update_event_listeners_BANG_ = function(elem, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return update_event_listeners_BANG___delegate.call(this, elem, f, args)
  };
  update_event_listeners_BANG_.cljs$lang$maxFixedArity = 2;
  update_event_listeners_BANG_.cljs$lang$applyTo = function(arglist__19697) {
    var elem = cljs.core.first(arglist__19697);
    arglist__19697 = cljs.core.next(arglist__19697);
    var f = cljs.core.first(arglist__19697);
    var args = cljs.core.rest(arglist__19697);
    return update_event_listeners_BANG___delegate(elem, f, args)
  };
  update_event_listeners_BANG_.cljs$core$IFn$_invoke$arity$variadic = update_event_listeners_BANG___delegate;
  return update_event_listeners_BANG_
}();
dommy.core.elem_and_selector = function elem_and_selector(elem_sel) {
  if(cljs.core.sequential_QMARK_.call(null, elem_sel)) {
    return cljs.core.juxt.call(null, function(p1__19698_SHARP_) {
      return dommy.template.__GT_node_like.call(null, cljs.core.first.call(null, p1__19698_SHARP_))
    }, cljs.core.rest).call(null, elem_sel)
  }else {
    return cljs.core.PersistentVector.fromArray([dommy.template.__GT_node_like.call(null, elem_sel), null], true)
  }
};
dommy.core.listen_BANG_ = function() {
  var listen_BANG___delegate = function(elem_sel, type_fs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1801297401, null)))))].join(""));
    }
    var vec__19722_19745 = dommy.core.elem_and_selector.call(null, elem_sel);
    var elem_19746 = cljs.core.nth.call(null, vec__19722_19745, 0, null);
    var selector_19747 = cljs.core.nth.call(null, vec__19722_19745, 1, null);
    var seq__19723_19748 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
    var chunk__19730_19749 = null;
    var count__19731_19750 = 0;
    var i__19732_19751 = 0;
    while(true) {
      if(i__19732_19751 < count__19731_19750) {
        var vec__19739_19752 = cljs.core._nth.call(null, chunk__19730_19749, i__19732_19751);
        var orig_type_19753 = cljs.core.nth.call(null, vec__19739_19752, 0, null);
        var f_19754 = cljs.core.nth.call(null, vec__19739_19752, 1, null);
        var seq__19733_19755 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_19753, cljs.core.PersistentArrayMap.fromArray([orig_type_19753, cljs.core.identity], true)));
        var chunk__19735_19756 = null;
        var count__19736_19757 = 0;
        var i__19737_19758 = 0;
        while(true) {
          if(i__19737_19758 < count__19736_19757) {
            var vec__19740_19759 = cljs.core._nth.call(null, chunk__19735_19756, i__19737_19758);
            var actual_type_19760 = cljs.core.nth.call(null, vec__19740_19759, 0, null);
            var factory_19761 = cljs.core.nth.call(null, vec__19740_19759, 1, null);
            var canonical_f_19762 = (cljs.core.truth_(selector_19747) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_19746, selector_19747) : cljs.core.identity).call(null, factory_19761.call(null, f_19754));
            dommy.core.update_event_listeners_BANG_.call(null, elem_19746, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_19747, actual_type_19760, f_19754], true), canonical_f_19762);
            if(cljs.core.truth_(elem_19746.addEventListener)) {
              elem_19746.addEventListener(cljs.core.name.call(null, actual_type_19760), canonical_f_19762)
            }else {
              elem_19746.attachEvent(cljs.core.name.call(null, actual_type_19760), canonical_f_19762)
            }
            var G__19763 = seq__19733_19755;
            var G__19764 = chunk__19735_19756;
            var G__19765 = count__19736_19757;
            var G__19766 = i__19737_19758 + 1;
            seq__19733_19755 = G__19763;
            chunk__19735_19756 = G__19764;
            count__19736_19757 = G__19765;
            i__19737_19758 = G__19766;
            continue
          }else {
            var temp__4092__auto___19767 = cljs.core.seq.call(null, seq__19733_19755);
            if(temp__4092__auto___19767) {
              var seq__19733_19768__$1 = temp__4092__auto___19767;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__19733_19768__$1)) {
                var c__3607__auto___19769 = cljs.core.chunk_first.call(null, seq__19733_19768__$1);
                var G__19770 = cljs.core.chunk_rest.call(null, seq__19733_19768__$1);
                var G__19771 = c__3607__auto___19769;
                var G__19772 = cljs.core.count.call(null, c__3607__auto___19769);
                var G__19773 = 0;
                seq__19733_19755 = G__19770;
                chunk__19735_19756 = G__19771;
                count__19736_19757 = G__19772;
                i__19737_19758 = G__19773;
                continue
              }else {
                var vec__19741_19774 = cljs.core.first.call(null, seq__19733_19768__$1);
                var actual_type_19775 = cljs.core.nth.call(null, vec__19741_19774, 0, null);
                var factory_19776 = cljs.core.nth.call(null, vec__19741_19774, 1, null);
                var canonical_f_19777 = (cljs.core.truth_(selector_19747) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_19746, selector_19747) : cljs.core.identity).call(null, factory_19776.call(null, f_19754));
                dommy.core.update_event_listeners_BANG_.call(null, elem_19746, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_19747, actual_type_19775, f_19754], true), canonical_f_19777);
                if(cljs.core.truth_(elem_19746.addEventListener)) {
                  elem_19746.addEventListener(cljs.core.name.call(null, actual_type_19775), canonical_f_19777)
                }else {
                  elem_19746.attachEvent(cljs.core.name.call(null, actual_type_19775), canonical_f_19777)
                }
                var G__19778 = cljs.core.next.call(null, seq__19733_19768__$1);
                var G__19779 = null;
                var G__19780 = 0;
                var G__19781 = 0;
                seq__19733_19755 = G__19778;
                chunk__19735_19756 = G__19779;
                count__19736_19757 = G__19780;
                i__19737_19758 = G__19781;
                continue
              }
            }else {
            }
          }
          break
        }
        var G__19782 = seq__19723_19748;
        var G__19783 = chunk__19730_19749;
        var G__19784 = count__19731_19750;
        var G__19785 = i__19732_19751 + 1;
        seq__19723_19748 = G__19782;
        chunk__19730_19749 = G__19783;
        count__19731_19750 = G__19784;
        i__19732_19751 = G__19785;
        continue
      }else {
        var temp__4092__auto___19786 = cljs.core.seq.call(null, seq__19723_19748);
        if(temp__4092__auto___19786) {
          var seq__19723_19787__$1 = temp__4092__auto___19786;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__19723_19787__$1)) {
            var c__3607__auto___19788 = cljs.core.chunk_first.call(null, seq__19723_19787__$1);
            var G__19789 = cljs.core.chunk_rest.call(null, seq__19723_19787__$1);
            var G__19790 = c__3607__auto___19788;
            var G__19791 = cljs.core.count.call(null, c__3607__auto___19788);
            var G__19792 = 0;
            seq__19723_19748 = G__19789;
            chunk__19730_19749 = G__19790;
            count__19731_19750 = G__19791;
            i__19732_19751 = G__19792;
            continue
          }else {
            var vec__19742_19793 = cljs.core.first.call(null, seq__19723_19787__$1);
            var orig_type_19794 = cljs.core.nth.call(null, vec__19742_19793, 0, null);
            var f_19795 = cljs.core.nth.call(null, vec__19742_19793, 1, null);
            var seq__19724_19796 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_19794, cljs.core.PersistentArrayMap.fromArray([orig_type_19794, cljs.core.identity], true)));
            var chunk__19726_19797 = null;
            var count__19727_19798 = 0;
            var i__19728_19799 = 0;
            while(true) {
              if(i__19728_19799 < count__19727_19798) {
                var vec__19743_19800 = cljs.core._nth.call(null, chunk__19726_19797, i__19728_19799);
                var actual_type_19801 = cljs.core.nth.call(null, vec__19743_19800, 0, null);
                var factory_19802 = cljs.core.nth.call(null, vec__19743_19800, 1, null);
                var canonical_f_19803 = (cljs.core.truth_(selector_19747) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_19746, selector_19747) : cljs.core.identity).call(null, factory_19802.call(null, f_19795));
                dommy.core.update_event_listeners_BANG_.call(null, elem_19746, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_19747, actual_type_19801, f_19795], true), canonical_f_19803);
                if(cljs.core.truth_(elem_19746.addEventListener)) {
                  elem_19746.addEventListener(cljs.core.name.call(null, actual_type_19801), canonical_f_19803)
                }else {
                  elem_19746.attachEvent(cljs.core.name.call(null, actual_type_19801), canonical_f_19803)
                }
                var G__19804 = seq__19724_19796;
                var G__19805 = chunk__19726_19797;
                var G__19806 = count__19727_19798;
                var G__19807 = i__19728_19799 + 1;
                seq__19724_19796 = G__19804;
                chunk__19726_19797 = G__19805;
                count__19727_19798 = G__19806;
                i__19728_19799 = G__19807;
                continue
              }else {
                var temp__4092__auto___19808__$1 = cljs.core.seq.call(null, seq__19724_19796);
                if(temp__4092__auto___19808__$1) {
                  var seq__19724_19809__$1 = temp__4092__auto___19808__$1;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__19724_19809__$1)) {
                    var c__3607__auto___19810 = cljs.core.chunk_first.call(null, seq__19724_19809__$1);
                    var G__19811 = cljs.core.chunk_rest.call(null, seq__19724_19809__$1);
                    var G__19812 = c__3607__auto___19810;
                    var G__19813 = cljs.core.count.call(null, c__3607__auto___19810);
                    var G__19814 = 0;
                    seq__19724_19796 = G__19811;
                    chunk__19726_19797 = G__19812;
                    count__19727_19798 = G__19813;
                    i__19728_19799 = G__19814;
                    continue
                  }else {
                    var vec__19744_19815 = cljs.core.first.call(null, seq__19724_19809__$1);
                    var actual_type_19816 = cljs.core.nth.call(null, vec__19744_19815, 0, null);
                    var factory_19817 = cljs.core.nth.call(null, vec__19744_19815, 1, null);
                    var canonical_f_19818 = (cljs.core.truth_(selector_19747) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_19746, selector_19747) : cljs.core.identity).call(null, factory_19817.call(null, f_19795));
                    dommy.core.update_event_listeners_BANG_.call(null, elem_19746, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_19747, actual_type_19816, f_19795], true), canonical_f_19818);
                    if(cljs.core.truth_(elem_19746.addEventListener)) {
                      elem_19746.addEventListener(cljs.core.name.call(null, actual_type_19816), canonical_f_19818)
                    }else {
                      elem_19746.attachEvent(cljs.core.name.call(null, actual_type_19816), canonical_f_19818)
                    }
                    var G__19819 = cljs.core.next.call(null, seq__19724_19809__$1);
                    var G__19820 = null;
                    var G__19821 = 0;
                    var G__19822 = 0;
                    seq__19724_19796 = G__19819;
                    chunk__19726_19797 = G__19820;
                    count__19727_19798 = G__19821;
                    i__19728_19799 = G__19822;
                    continue
                  }
                }else {
                }
              }
              break
            }
            var G__19823 = cljs.core.next.call(null, seq__19723_19787__$1);
            var G__19824 = null;
            var G__19825 = 0;
            var G__19826 = 0;
            seq__19723_19748 = G__19823;
            chunk__19730_19749 = G__19824;
            count__19731_19750 = G__19825;
            i__19732_19751 = G__19826;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem_sel
  };
  var listen_BANG_ = function(elem_sel, var_args) {
    var type_fs = null;
    if(arguments.length > 1) {
      type_fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return listen_BANG___delegate.call(this, elem_sel, type_fs)
  };
  listen_BANG_.cljs$lang$maxFixedArity = 1;
  listen_BANG_.cljs$lang$applyTo = function(arglist__19827) {
    var elem_sel = cljs.core.first(arglist__19827);
    var type_fs = cljs.core.rest(arglist__19827);
    return listen_BANG___delegate(elem_sel, type_fs)
  };
  listen_BANG_.cljs$core$IFn$_invoke$arity$variadic = listen_BANG___delegate;
  return listen_BANG_
}();
dommy.core.unlisten_BANG_ = function() {
  var unlisten_BANG___delegate = function(elem_sel, type_fs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1801297401, null)))))].join(""));
    }
    var vec__19851_19874 = dommy.core.elem_and_selector.call(null, elem_sel);
    var elem_19875 = cljs.core.nth.call(null, vec__19851_19874, 0, null);
    var selector_19876 = cljs.core.nth.call(null, vec__19851_19874, 1, null);
    var seq__19852_19877 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
    var chunk__19859_19878 = null;
    var count__19860_19879 = 0;
    var i__19861_19880 = 0;
    while(true) {
      if(i__19861_19880 < count__19860_19879) {
        var vec__19868_19881 = cljs.core._nth.call(null, chunk__19859_19878, i__19861_19880);
        var orig_type_19882 = cljs.core.nth.call(null, vec__19868_19881, 0, null);
        var f_19883 = cljs.core.nth.call(null, vec__19868_19881, 1, null);
        var seq__19862_19884 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_19882, cljs.core.PersistentArrayMap.fromArray([orig_type_19882, cljs.core.identity], true)));
        var chunk__19864_19885 = null;
        var count__19865_19886 = 0;
        var i__19866_19887 = 0;
        while(true) {
          if(i__19866_19887 < count__19865_19886) {
            var vec__19869_19888 = cljs.core._nth.call(null, chunk__19864_19885, i__19866_19887);
            var actual_type_19889 = cljs.core.nth.call(null, vec__19869_19888, 0, null);
            var __19890 = cljs.core.nth.call(null, vec__19869_19888, 1, null);
            var keys_19891 = cljs.core.PersistentVector.fromArray([selector_19876, actual_type_19889, f_19883], true);
            var canonical_f_19892 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_19875), keys_19891);
            dommy.core.update_event_listeners_BANG_.call(null, elem_19875, dommy.utils.dissoc_in, keys_19891);
            if(cljs.core.truth_(elem_19875.removeEventListener)) {
              elem_19875.removeEventListener(cljs.core.name.call(null, actual_type_19889), canonical_f_19892)
            }else {
              elem_19875.detachEvent(cljs.core.name.call(null, actual_type_19889), canonical_f_19892)
            }
            var G__19893 = seq__19862_19884;
            var G__19894 = chunk__19864_19885;
            var G__19895 = count__19865_19886;
            var G__19896 = i__19866_19887 + 1;
            seq__19862_19884 = G__19893;
            chunk__19864_19885 = G__19894;
            count__19865_19886 = G__19895;
            i__19866_19887 = G__19896;
            continue
          }else {
            var temp__4092__auto___19897 = cljs.core.seq.call(null, seq__19862_19884);
            if(temp__4092__auto___19897) {
              var seq__19862_19898__$1 = temp__4092__auto___19897;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__19862_19898__$1)) {
                var c__3607__auto___19899 = cljs.core.chunk_first.call(null, seq__19862_19898__$1);
                var G__19900 = cljs.core.chunk_rest.call(null, seq__19862_19898__$1);
                var G__19901 = c__3607__auto___19899;
                var G__19902 = cljs.core.count.call(null, c__3607__auto___19899);
                var G__19903 = 0;
                seq__19862_19884 = G__19900;
                chunk__19864_19885 = G__19901;
                count__19865_19886 = G__19902;
                i__19866_19887 = G__19903;
                continue
              }else {
                var vec__19870_19904 = cljs.core.first.call(null, seq__19862_19898__$1);
                var actual_type_19905 = cljs.core.nth.call(null, vec__19870_19904, 0, null);
                var __19906 = cljs.core.nth.call(null, vec__19870_19904, 1, null);
                var keys_19907 = cljs.core.PersistentVector.fromArray([selector_19876, actual_type_19905, f_19883], true);
                var canonical_f_19908 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_19875), keys_19907);
                dommy.core.update_event_listeners_BANG_.call(null, elem_19875, dommy.utils.dissoc_in, keys_19907);
                if(cljs.core.truth_(elem_19875.removeEventListener)) {
                  elem_19875.removeEventListener(cljs.core.name.call(null, actual_type_19905), canonical_f_19908)
                }else {
                  elem_19875.detachEvent(cljs.core.name.call(null, actual_type_19905), canonical_f_19908)
                }
                var G__19909 = cljs.core.next.call(null, seq__19862_19898__$1);
                var G__19910 = null;
                var G__19911 = 0;
                var G__19912 = 0;
                seq__19862_19884 = G__19909;
                chunk__19864_19885 = G__19910;
                count__19865_19886 = G__19911;
                i__19866_19887 = G__19912;
                continue
              }
            }else {
            }
          }
          break
        }
        var G__19913 = seq__19852_19877;
        var G__19914 = chunk__19859_19878;
        var G__19915 = count__19860_19879;
        var G__19916 = i__19861_19880 + 1;
        seq__19852_19877 = G__19913;
        chunk__19859_19878 = G__19914;
        count__19860_19879 = G__19915;
        i__19861_19880 = G__19916;
        continue
      }else {
        var temp__4092__auto___19917 = cljs.core.seq.call(null, seq__19852_19877);
        if(temp__4092__auto___19917) {
          var seq__19852_19918__$1 = temp__4092__auto___19917;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__19852_19918__$1)) {
            var c__3607__auto___19919 = cljs.core.chunk_first.call(null, seq__19852_19918__$1);
            var G__19920 = cljs.core.chunk_rest.call(null, seq__19852_19918__$1);
            var G__19921 = c__3607__auto___19919;
            var G__19922 = cljs.core.count.call(null, c__3607__auto___19919);
            var G__19923 = 0;
            seq__19852_19877 = G__19920;
            chunk__19859_19878 = G__19921;
            count__19860_19879 = G__19922;
            i__19861_19880 = G__19923;
            continue
          }else {
            var vec__19871_19924 = cljs.core.first.call(null, seq__19852_19918__$1);
            var orig_type_19925 = cljs.core.nth.call(null, vec__19871_19924, 0, null);
            var f_19926 = cljs.core.nth.call(null, vec__19871_19924, 1, null);
            var seq__19853_19927 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_19925, cljs.core.PersistentArrayMap.fromArray([orig_type_19925, cljs.core.identity], true)));
            var chunk__19855_19928 = null;
            var count__19856_19929 = 0;
            var i__19857_19930 = 0;
            while(true) {
              if(i__19857_19930 < count__19856_19929) {
                var vec__19872_19931 = cljs.core._nth.call(null, chunk__19855_19928, i__19857_19930);
                var actual_type_19932 = cljs.core.nth.call(null, vec__19872_19931, 0, null);
                var __19933 = cljs.core.nth.call(null, vec__19872_19931, 1, null);
                var keys_19934 = cljs.core.PersistentVector.fromArray([selector_19876, actual_type_19932, f_19926], true);
                var canonical_f_19935 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_19875), keys_19934);
                dommy.core.update_event_listeners_BANG_.call(null, elem_19875, dommy.utils.dissoc_in, keys_19934);
                if(cljs.core.truth_(elem_19875.removeEventListener)) {
                  elem_19875.removeEventListener(cljs.core.name.call(null, actual_type_19932), canonical_f_19935)
                }else {
                  elem_19875.detachEvent(cljs.core.name.call(null, actual_type_19932), canonical_f_19935)
                }
                var G__19936 = seq__19853_19927;
                var G__19937 = chunk__19855_19928;
                var G__19938 = count__19856_19929;
                var G__19939 = i__19857_19930 + 1;
                seq__19853_19927 = G__19936;
                chunk__19855_19928 = G__19937;
                count__19856_19929 = G__19938;
                i__19857_19930 = G__19939;
                continue
              }else {
                var temp__4092__auto___19940__$1 = cljs.core.seq.call(null, seq__19853_19927);
                if(temp__4092__auto___19940__$1) {
                  var seq__19853_19941__$1 = temp__4092__auto___19940__$1;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__19853_19941__$1)) {
                    var c__3607__auto___19942 = cljs.core.chunk_first.call(null, seq__19853_19941__$1);
                    var G__19943 = cljs.core.chunk_rest.call(null, seq__19853_19941__$1);
                    var G__19944 = c__3607__auto___19942;
                    var G__19945 = cljs.core.count.call(null, c__3607__auto___19942);
                    var G__19946 = 0;
                    seq__19853_19927 = G__19943;
                    chunk__19855_19928 = G__19944;
                    count__19856_19929 = G__19945;
                    i__19857_19930 = G__19946;
                    continue
                  }else {
                    var vec__19873_19947 = cljs.core.first.call(null, seq__19853_19941__$1);
                    var actual_type_19948 = cljs.core.nth.call(null, vec__19873_19947, 0, null);
                    var __19949 = cljs.core.nth.call(null, vec__19873_19947, 1, null);
                    var keys_19950 = cljs.core.PersistentVector.fromArray([selector_19876, actual_type_19948, f_19926], true);
                    var canonical_f_19951 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_19875), keys_19950);
                    dommy.core.update_event_listeners_BANG_.call(null, elem_19875, dommy.utils.dissoc_in, keys_19950);
                    if(cljs.core.truth_(elem_19875.removeEventListener)) {
                      elem_19875.removeEventListener(cljs.core.name.call(null, actual_type_19948), canonical_f_19951)
                    }else {
                      elem_19875.detachEvent(cljs.core.name.call(null, actual_type_19948), canonical_f_19951)
                    }
                    var G__19952 = cljs.core.next.call(null, seq__19853_19941__$1);
                    var G__19953 = null;
                    var G__19954 = 0;
                    var G__19955 = 0;
                    seq__19853_19927 = G__19952;
                    chunk__19855_19928 = G__19953;
                    count__19856_19929 = G__19954;
                    i__19857_19930 = G__19955;
                    continue
                  }
                }else {
                }
              }
              break
            }
            var G__19956 = cljs.core.next.call(null, seq__19852_19918__$1);
            var G__19957 = null;
            var G__19958 = 0;
            var G__19959 = 0;
            seq__19852_19877 = G__19956;
            chunk__19859_19878 = G__19957;
            count__19860_19879 = G__19958;
            i__19861_19880 = G__19959;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem_sel
  };
  var unlisten_BANG_ = function(elem_sel, var_args) {
    var type_fs = null;
    if(arguments.length > 1) {
      type_fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return unlisten_BANG___delegate.call(this, elem_sel, type_fs)
  };
  unlisten_BANG_.cljs$lang$maxFixedArity = 1;
  unlisten_BANG_.cljs$lang$applyTo = function(arglist__19960) {
    var elem_sel = cljs.core.first(arglist__19960);
    var type_fs = cljs.core.rest(arglist__19960);
    return unlisten_BANG___delegate(elem_sel, type_fs)
  };
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$variadic = unlisten_BANG___delegate;
  return unlisten_BANG_
}();
dommy.core.listen_once_BANG_ = function() {
  var listen_once_BANG___delegate = function(elem_sel, type_fs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1801297401, null)))))].join(""));
    }
    var vec__19968_19975 = dommy.core.elem_and_selector.call(null, elem_sel);
    var elem_19976 = cljs.core.nth.call(null, vec__19968_19975, 0, null);
    var selector_19977 = cljs.core.nth.call(null, vec__19968_19975, 1, null);
    var seq__19969_19978 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
    var chunk__19970_19979 = null;
    var count__19971_19980 = 0;
    var i__19972_19981 = 0;
    while(true) {
      if(i__19972_19981 < count__19971_19980) {
        var vec__19973_19982 = cljs.core._nth.call(null, chunk__19970_19979, i__19972_19981);
        var type_19983 = cljs.core.nth.call(null, vec__19973_19982, 0, null);
        var f_19984 = cljs.core.nth.call(null, vec__19973_19982, 1, null);
        dommy.core.listen_BANG_.call(null, elem_sel, type_19983, function(seq__19969_19978, chunk__19970_19979, count__19971_19980, i__19972_19981, vec__19973_19982, type_19983, f_19984) {
          return function this_fn(e) {
            dommy.core.unlisten_BANG_.call(null, elem_sel, type_19983, this_fn);
            return f_19984.call(null, e)
          }
        }(seq__19969_19978, chunk__19970_19979, count__19971_19980, i__19972_19981, vec__19973_19982, type_19983, f_19984));
        var G__19985 = seq__19969_19978;
        var G__19986 = chunk__19970_19979;
        var G__19987 = count__19971_19980;
        var G__19988 = i__19972_19981 + 1;
        seq__19969_19978 = G__19985;
        chunk__19970_19979 = G__19986;
        count__19971_19980 = G__19987;
        i__19972_19981 = G__19988;
        continue
      }else {
        var temp__4092__auto___19989 = cljs.core.seq.call(null, seq__19969_19978);
        if(temp__4092__auto___19989) {
          var seq__19969_19990__$1 = temp__4092__auto___19989;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__19969_19990__$1)) {
            var c__3607__auto___19991 = cljs.core.chunk_first.call(null, seq__19969_19990__$1);
            var G__19992 = cljs.core.chunk_rest.call(null, seq__19969_19990__$1);
            var G__19993 = c__3607__auto___19991;
            var G__19994 = cljs.core.count.call(null, c__3607__auto___19991);
            var G__19995 = 0;
            seq__19969_19978 = G__19992;
            chunk__19970_19979 = G__19993;
            count__19971_19980 = G__19994;
            i__19972_19981 = G__19995;
            continue
          }else {
            var vec__19974_19996 = cljs.core.first.call(null, seq__19969_19990__$1);
            var type_19997 = cljs.core.nth.call(null, vec__19974_19996, 0, null);
            var f_19998 = cljs.core.nth.call(null, vec__19974_19996, 1, null);
            dommy.core.listen_BANG_.call(null, elem_sel, type_19997, function(seq__19969_19978, chunk__19970_19979, count__19971_19980, i__19972_19981, vec__19974_19996, type_19997, f_19998, seq__19969_19990__$1, temp__4092__auto___19989) {
              return function this_fn(e) {
                dommy.core.unlisten_BANG_.call(null, elem_sel, type_19997, this_fn);
                return f_19998.call(null, e)
              }
            }(seq__19969_19978, chunk__19970_19979, count__19971_19980, i__19972_19981, vec__19974_19996, type_19997, f_19998, seq__19969_19990__$1, temp__4092__auto___19989));
            var G__19999 = cljs.core.next.call(null, seq__19969_19990__$1);
            var G__20000 = null;
            var G__20001 = 0;
            var G__20002 = 0;
            seq__19969_19978 = G__19999;
            chunk__19970_19979 = G__20000;
            count__19971_19980 = G__20001;
            i__19972_19981 = G__20002;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem_sel
  };
  var listen_once_BANG_ = function(elem_sel, var_args) {
    var type_fs = null;
    if(arguments.length > 1) {
      type_fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return listen_once_BANG___delegate.call(this, elem_sel, type_fs)
  };
  listen_once_BANG_.cljs$lang$maxFixedArity = 1;
  listen_once_BANG_.cljs$lang$applyTo = function(arglist__20003) {
    var elem_sel = cljs.core.first(arglist__20003);
    var type_fs = cljs.core.rest(arglist__20003);
    return listen_once_BANG___delegate(elem_sel, type_fs)
  };
  listen_once_BANG_.cljs$core$IFn$_invoke$arity$variadic = listen_once_BANG___delegate;
  return listen_once_BANG_
}();
dommy.core.fire_BANG_ = function() {
  var fire_BANG___delegate = function(node, event_type, p__20004) {
    var vec__20006 = p__20004;
    var update_event_BANG_ = cljs.core.nth.call(null, vec__20006, 0, null);
    if(dommy.core.descendant_QMARK_.call(null, node, document.documentElement)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "descendant?", "descendant?", -1886221157, null), new cljs.core.Symbol(null, "node", "node", -1637144645, null), new cljs.core.Symbol("js", "document.documentElement", "js/document.documentElement", -1449696112, null))))].join(""));
    }
    var update_event_BANG___$1 = function() {
      var or__3943__auto__ = update_event_BANG_;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core.identity
      }
    }();
    if(cljs.core.truth_(document.createEvent)) {
      var event = document.createEvent("Event");
      event.initEvent(cljs.core.name.call(null, event_type), true, true);
      return node.dispatchEvent(update_event_BANG___$1.call(null, event))
    }else {
      return node.fireEvent([cljs.core.str("on"), cljs.core.str(cljs.core.name.call(null, event_type))].join(""), update_event_BANG___$1.call(null, document.createEventObject()))
    }
  };
  var fire_BANG_ = function(node, event_type, var_args) {
    var p__20004 = null;
    if(arguments.length > 2) {
      p__20004 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return fire_BANG___delegate.call(this, node, event_type, p__20004)
  };
  fire_BANG_.cljs$lang$maxFixedArity = 2;
  fire_BANG_.cljs$lang$applyTo = function(arglist__20007) {
    var node = cljs.core.first(arglist__20007);
    arglist__20007 = cljs.core.next(arglist__20007);
    var event_type = cljs.core.first(arglist__20007);
    var p__20004 = cljs.core.rest(arglist__20007);
    return fire_BANG___delegate(node, event_type, p__20004)
  };
  fire_BANG_.cljs$core$IFn$_invoke$arity$variadic = fire_BANG___delegate;
  return fire_BANG_
}();
goog.provide("phil_and_amber.language_templates");
goog.require("cljs.core");
goog.require("clojure.walk");
goog.require("dommy.core");
goog.require("clojure.walk");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("clojure.set");
goog.require("clojure.set");
goog.require("dommy.core");
phil_and_amber.language_templates.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__15620__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args))
    };
    var G__15620 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__15620__delegate.call(this, args)
    };
    G__15620.cljs$lang$maxFixedArity = 0;
    G__15620.cljs$lang$applyTo = function(arglist__15621) {
      var args = cljs.core.seq(arglist__15621);
      return G__15620__delegate(args)
    };
    G__15620.cljs$core$IFn$_invoke$arity$variadic = G__15620__delegate;
    return G__15620
  }()
};
phil_and_amber.language_templates.enable_console_print_BANG_.call(null);
phil_and_amber.language_templates.str_to_id = function str_to_id(str_var) {
  return cljs.core.keyword.call(null, [cljs.core.str("#"), cljs.core.str(str_var)].join(""))
};
phil_and_amber.language_templates.template_pattern = function template_pattern(p__15622) {
  var vec__15624 = p__15622;
  var k = cljs.core.nth.call(null, vec__15624, 0, null);
  var v = cljs.core.nth.call(null, vec__15624, 1, null);
  return cljs.core.PersistentArrayMap.fromArray([[cljs.core.str("\\{\\{ "), cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str(" \\}\\}")].join(""), cljs.core.PersistentArrayMap.fromArray([[cljs.core.str("{{ "), cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str(" }}")].join(""), v], true)], true)
};
phil_and_amber.language_templates.contact_re = function contact_re(contact) {
  var remap = cljs.core.reduce.call(null, cljs.core.conj, cljs.core.map.call(null, phil_and_amber.language_templates.template_pattern, contact));
  var new_pattern = cljs.core.re_pattern.call(null, clojure.string.join.call(null, "|", cljs.core.keys.call(null, remap)));
  var new_match = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.vals.call(null, remap));
  return cljs.core.PersistentVector.fromArray([new_pattern, new_match], true)
};
phil_and_amber.language_templates.add_data_to_template = function add_data_to_template(template, p__15626) {
  var vec__15628 = p__15626;
  var pattern = cljs.core.nth.call(null, vec__15628, 0, null);
  var replacemap = cljs.core.nth.call(null, vec__15628, 1, null);
  return clojure.string.replace.call(null, template, pattern, function(p1__15625_SHARP_) {
    return cljs.core.get.call(null, replacemap, p1__15625_SHARP_)
  })
};
phil_and_amber.language_templates.ns_and_flatten_keys = function ns_and_flatten_keys(contacts) {
  return cljs.core.reduce.call(null, cljs.core.merge, cljs.core.map.call(null, function(p__15631) {
    var vec__15632 = p__15631;
    var k = cljs.core.nth.call(null, vec__15632, 0, null);
    var v = cljs.core.nth.call(null, vec__15632, 1, null);
    return clojure.set.rename_keys.call(null, v, cljs.core.reduce.call(null, cljs.core.merge, cljs.core.map.call(null, function(a_key) {
      return cljs.core.PersistentArrayMap.fromArray([a_key, [cljs.core.str(k), cljs.core.str("_"), cljs.core.str(cljs.core.name.call(null, a_key))].join("")], true)
    }, cljs.core.keys.call(null, v))))
  }, contacts))
};
phil_and_amber.language_templates.update_lang_div_BANG_ = function update_lang_div_BANG_(contacts, template) {
  var contacts_for_template = clojure.walk.keywordize_keys.call(null, phil_and_amber.language_templates.ns_and_flatten_keys.call(null, contacts));
  var lang_template = template.call(null, contacts_for_template);
  return dommy.core.replace_contents_BANG_.call(null, document.getElementById("contents"), function() {
    var dom15636 = document.createElement("span");
    dom15636.appendChild(function() {
      var dom15637 = document.createElement("div");
      if("code") {
        dom15637.setAttribute("id", "code")
      }else {
      }
      dom15637.appendChild(function() {
        var dom15638 = document.createElement("pre");
        dom15638.appendChild(dommy.template.__GT_node_like.call(null, lang_template));
        return dom15638
      }());
      return dom15637
    }());
    return dom15636
  }())
};
phil_and_amber.language_templates.python_template = function python_template(contacts) {
  return phil_and_amber.language_templates.update_lang_div_BANG_.call(null, contacts, function(p__15659) {
    var map__15660 = p__15659;
    var map__15660__$1 = cljs.core.seq_QMARK_.call(null, map__15660) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15660) : map__15660;
    var G__15658 = map__15660__$1;
    var G__15657 = cljs.core.get.call(null, map__15660__$1, new cljs.core.Keyword(null, "amber_linkedin", "amber_linkedin", 617419852));
    var G__15656 = cljs.core.get.call(null, map__15660__$1, new cljs.core.Keyword(null, "amber_github", "amber_github", 682812977));
    var G__15655 = cljs.core.get.call(null, map__15660__$1, new cljs.core.Keyword(null, "amber_email", "amber_email", 2664045746));
    var G__15654 = cljs.core.get.call(null, map__15660__$1, new cljs.core.Keyword(null, "amber_name", "amber_name", 1483033561));
    var G__15653 = cljs.core.get.call(null, map__15660__$1, new cljs.core.Keyword(null, "phil_linkedin", "phil_linkedin", 592496404));
    var G__15652 = cljs.core.get.call(null, map__15660__$1, new cljs.core.Keyword(null, "phil_github", "phil_github", 2559879929));
    var G__15651 = cljs.core.get.call(null, map__15660__$1, new cljs.core.Keyword(null, "phil_email", "phil_email", 3971522282));
    var G__15650 = cljs.core.get.call(null, map__15660__$1, new cljs.core.Keyword(null, "phil_name", "phil_name", 3187778209));
    var as_map_things__5499__auto___15661 = cljs.core.comp.call(null, cljs.core.set, cljs.core.keys).call(null, G__15658);
    var provided_things__5500__auto___15662 = cljs.core.PersistentHashSet.fromArray([new cljs.core.Keyword(null, "amber_email", "amber_email", 2664045746), null, new cljs.core.Keyword(null, "phil_name", "phil_name", 3187778209), null, new cljs.core.Keyword(null, "phil_email", "phil_email", 3971522282), null, new cljs.core.Keyword(null, "amber_linkedin", "amber_linkedin", 617419852), null, new cljs.core.Keyword(null, "amber_name", "amber_name", 1483033561), null, new cljs.core.Keyword(null, "amber_github", 
    "amber_github", 682812977), null, new cljs.core.Keyword(null, "phil_github", "phil_github", 2559879929), null, new cljs.core.Keyword(null, "phil_linkedin", "phil_linkedin", 592496404), null], true);
    if(cljs.core.not_EQ_.call(null, as_map_things__5499__auto___15661, provided_things__5500__auto___15662)) {
      (function(p1__5535__5537__auto__, p2__5536__5538__auto__) {
        return cljs.core.prn.call(null, [cljs.core.str("Template vars not equal "), cljs.core.str(p1__5535__5537__auto__), cljs.core.str(" vs "), cljs.core.str(p2__5536__5538__auto__)].join(""))
      }).call(null, as_map_things__5499__auto___15661, provided_things__5500__auto___15662)
    }else {
    }
    return[cljs.core.str('def contact():\n    return [{"name" : "'), cljs.core.str(G__15650), cljs.core.str('"\n             "email" : "'), cljs.core.str(G__15651), cljs.core.str('"\n             "github" : "'), cljs.core.str(G__15652), cljs.core.str('"\n             "linkedin" : "'), cljs.core.str(G__15653), cljs.core.str('"}\n            {"name" : "'), cljs.core.str(G__15654), cljs.core.str('"\n             "email" : "'), cljs.core.str(G__15655), cljs.core.str('"\n             "github" : "'), cljs.core.str(G__15656), 
    cljs.core.str('"\n             "linkedin" : "'), cljs.core.str(G__15657), cljs.core.str('"}]\n')].join("")
  })
};
phil_and_amber.language_templates.html_template = function html_template(contacts) {
  return phil_and_amber.language_templates.update_lang_div_BANG_.call(null, contacts, function(p__15683) {
    var map__15684 = p__15683;
    var map__15684__$1 = cljs.core.seq_QMARK_.call(null, map__15684) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15684) : map__15684;
    var G__15682 = map__15684__$1;
    var G__15681 = cljs.core.get.call(null, map__15684__$1, new cljs.core.Keyword(null, "amber_linkedin", "amber_linkedin", 617419852));
    var G__15680 = cljs.core.get.call(null, map__15684__$1, new cljs.core.Keyword(null, "amber_github", "amber_github", 682812977));
    var G__15679 = cljs.core.get.call(null, map__15684__$1, new cljs.core.Keyword(null, "amber_email", "amber_email", 2664045746));
    var G__15678 = cljs.core.get.call(null, map__15684__$1, new cljs.core.Keyword(null, "amber_name", "amber_name", 1483033561));
    var G__15677 = cljs.core.get.call(null, map__15684__$1, new cljs.core.Keyword(null, "phil_linkedin", "phil_linkedin", 592496404));
    var G__15676 = cljs.core.get.call(null, map__15684__$1, new cljs.core.Keyword(null, "phil_github", "phil_github", 2559879929));
    var G__15675 = cljs.core.get.call(null, map__15684__$1, new cljs.core.Keyword(null, "phil_email", "phil_email", 3971522282));
    var G__15674 = cljs.core.get.call(null, map__15684__$1, new cljs.core.Keyword(null, "phil_name", "phil_name", 3187778209));
    var as_map_things__5499__auto___15685 = cljs.core.comp.call(null, cljs.core.set, cljs.core.keys).call(null, G__15682);
    var provided_things__5500__auto___15686 = cljs.core.PersistentHashSet.fromArray([new cljs.core.Keyword(null, "amber_email", "amber_email", 2664045746), null, new cljs.core.Keyword(null, "phil_name", "phil_name", 3187778209), null, new cljs.core.Keyword(null, "phil_email", "phil_email", 3971522282), null, new cljs.core.Keyword(null, "amber_linkedin", "amber_linkedin", 617419852), null, new cljs.core.Keyword(null, "amber_name", "amber_name", 1483033561), null, new cljs.core.Keyword(null, "amber_github", 
    "amber_github", 682812977), null, new cljs.core.Keyword(null, "phil_github", "phil_github", 2559879929), null, new cljs.core.Keyword(null, "phil_linkedin", "phil_linkedin", 592496404), null], true);
    if(cljs.core.not_EQ_.call(null, as_map_things__5499__auto___15685, provided_things__5500__auto___15686)) {
      (function(p1__5526__5528__auto__, p2__5527__5529__auto__) {
        return cljs.core.prn.call(null, [cljs.core.str("Template vars not equal "), cljs.core.str(p1__5526__5528__auto__), cljs.core.str(" vs "), cljs.core.str(p2__5527__5529__auto__)].join(""))
      }).call(null, as_map_things__5499__auto___15685, provided_things__5500__auto___15686)
    }else {
    }
    return[cljs.core.str("\x3ch1\x3eContact Information\x3c/h1\x3e\n\n\x3cspan class\x3d'contact'\x3e\n\t\x3ch2 id\x3d'phil_name'\x3e"), cljs.core.str(G__15674), cljs.core.str("\x3c/h2\x3e\n\t\x3cdiv id\x3d'phil_email'\x3e"), cljs.core.str(G__15675), cljs.core.str("\x3c/div\x3e\n\t\x3cdiv id\x3d'phil_github'\x3e"), cljs.core.str(G__15676), cljs.core.str("\x3c/div\x3e\n\t\x3cdiv id\x3d'phil_linkedin'\x3e"), cljs.core.str(G__15677), cljs.core.str("\x3c/div\x3e\n\x3c/span\x3e\n\n\x3cspan class\x3d'contact'\x3e\n\t\x3ch2 id\x3d'amber_name'\x3e"), 
    cljs.core.str(G__15678), cljs.core.str("\x3c/h2\x3e\n\t\x3cdiv id\x3d'amber_email'\x3e"), cljs.core.str(G__15679), cljs.core.str("\x3c/div\x3e\n\t\x3cdiv id\x3d'amber_github'\x3e"), cljs.core.str(G__15680), cljs.core.str("\x3c/div\x3e\n\t\x3cdiv id\x3d'amber_linkedin'\x3e"), cljs.core.str(G__15681), cljs.core.str("\x3c/div\x3e\n\x3c/span\x3e\n")].join("")
  })
};
phil_and_amber.language_templates.js_template = function js_template(contacts) {
  return phil_and_amber.language_templates.update_lang_div_BANG_.call(null, contacts, function(p__15707) {
    var map__15708 = p__15707;
    var map__15708__$1 = cljs.core.seq_QMARK_.call(null, map__15708) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15708) : map__15708;
    var G__15706 = map__15708__$1;
    var G__15705 = cljs.core.get.call(null, map__15708__$1, new cljs.core.Keyword(null, "amber_linkedin", "amber_linkedin", 617419852));
    var G__15704 = cljs.core.get.call(null, map__15708__$1, new cljs.core.Keyword(null, "amber_github", "amber_github", 682812977));
    var G__15703 = cljs.core.get.call(null, map__15708__$1, new cljs.core.Keyword(null, "amber_email", "amber_email", 2664045746));
    var G__15702 = cljs.core.get.call(null, map__15708__$1, new cljs.core.Keyword(null, "amber_name", "amber_name", 1483033561));
    var G__15701 = cljs.core.get.call(null, map__15708__$1, new cljs.core.Keyword(null, "phil_linkedin", "phil_linkedin", 592496404));
    var G__15700 = cljs.core.get.call(null, map__15708__$1, new cljs.core.Keyword(null, "phil_github", "phil_github", 2559879929));
    var G__15699 = cljs.core.get.call(null, map__15708__$1, new cljs.core.Keyword(null, "phil_email", "phil_email", 3971522282));
    var G__15698 = cljs.core.get.call(null, map__15708__$1, new cljs.core.Keyword(null, "phil_name", "phil_name", 3187778209));
    var as_map_things__5499__auto___15709 = cljs.core.comp.call(null, cljs.core.set, cljs.core.keys).call(null, G__15706);
    var provided_things__5500__auto___15710 = cljs.core.PersistentHashSet.fromArray([new cljs.core.Keyword(null, "amber_email", "amber_email", 2664045746), null, new cljs.core.Keyword(null, "phil_name", "phil_name", 3187778209), null, new cljs.core.Keyword(null, "phil_email", "phil_email", 3971522282), null, new cljs.core.Keyword(null, "amber_linkedin", "amber_linkedin", 617419852), null, new cljs.core.Keyword(null, "amber_name", "amber_name", 1483033561), null, new cljs.core.Keyword(null, "amber_github", 
    "amber_github", 682812977), null, new cljs.core.Keyword(null, "phil_github", "phil_github", 2559879929), null, new cljs.core.Keyword(null, "phil_linkedin", "phil_linkedin", 592496404), null], true);
    if(cljs.core.not_EQ_.call(null, as_map_things__5499__auto___15709, provided_things__5500__auto___15710)) {
      (function(p1__5544__5546__auto__, p2__5545__5547__auto__) {
        return cljs.core.prn.call(null, [cljs.core.str("Template vars not equal "), cljs.core.str(p1__5544__5546__auto__), cljs.core.str(" vs "), cljs.core.str(p2__5545__5547__auto__)].join(""))
      }).call(null, as_map_things__5499__auto___15709, provided_things__5500__auto___15710)
    }else {
    }
    return[cljs.core.str("function philContactInfo() {\n\tdocument.getElementById('name').innerHTML \x3d '"), cljs.core.str(G__15698), cljs.core.str("';\n\tdocument.getElementById('email').innerHTML \x3d '"), cljs.core.str(G__15699), cljs.core.str("';\n\tdocument.getElementById('github').innerHTML \x3d '"), cljs.core.str(G__15700), cljs.core.str("';\n\tdocument.getElementById('linkedin').innerHTML \x3d '"), cljs.core.str(G__15701), cljs.core.str("';\n};\n\nfunction amberContactInfo() {\n\tdocument.getElementById('name').innerHTML \x3d '"), 
    cljs.core.str(G__15702), cljs.core.str("';\n\tdocument.getElementById('email').innerHTML \x3d '"), cljs.core.str(G__15703), cljs.core.str("';\n\tdocument.getElementById('github').innerHTML \x3d '"), cljs.core.str(G__15704), cljs.core.str("';\n\tdocument.getElementById('linkedin').innerHTML \x3d '"), cljs.core.str(G__15705), cljs.core.str("';\n};\n")].join("")
  })
};
phil_and_amber.language_templates.java_template = function java_template(contacts) {
  return phil_and_amber.language_templates.update_lang_div_BANG_.call(null, contacts, function(p__15731) {
    var map__15732 = p__15731;
    var map__15732__$1 = cljs.core.seq_QMARK_.call(null, map__15732) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15732) : map__15732;
    var G__15730 = map__15732__$1;
    var G__15729 = cljs.core.get.call(null, map__15732__$1, new cljs.core.Keyword(null, "amber_linkedin", "amber_linkedin", 617419852));
    var G__15728 = cljs.core.get.call(null, map__15732__$1, new cljs.core.Keyword(null, "amber_github", "amber_github", 682812977));
    var G__15727 = cljs.core.get.call(null, map__15732__$1, new cljs.core.Keyword(null, "amber_email", "amber_email", 2664045746));
    var G__15726 = cljs.core.get.call(null, map__15732__$1, new cljs.core.Keyword(null, "amber_name", "amber_name", 1483033561));
    var G__15725 = cljs.core.get.call(null, map__15732__$1, new cljs.core.Keyword(null, "phil_linkedin", "phil_linkedin", 592496404));
    var G__15724 = cljs.core.get.call(null, map__15732__$1, new cljs.core.Keyword(null, "phil_github", "phil_github", 2559879929));
    var G__15723 = cljs.core.get.call(null, map__15732__$1, new cljs.core.Keyword(null, "phil_email", "phil_email", 3971522282));
    var G__15722 = cljs.core.get.call(null, map__15732__$1, new cljs.core.Keyword(null, "phil_name", "phil_name", 3187778209));
    var as_map_things__5499__auto___15733 = cljs.core.comp.call(null, cljs.core.set, cljs.core.keys).call(null, G__15730);
    var provided_things__5500__auto___15734 = cljs.core.PersistentHashSet.fromArray([new cljs.core.Keyword(null, "amber_email", "amber_email", 2664045746), null, new cljs.core.Keyword(null, "phil_name", "phil_name", 3187778209), null, new cljs.core.Keyword(null, "phil_email", "phil_email", 3971522282), null, new cljs.core.Keyword(null, "amber_linkedin", "amber_linkedin", 617419852), null, new cljs.core.Keyword(null, "amber_name", "amber_name", 1483033561), null, new cljs.core.Keyword(null, "amber_github", 
    "amber_github", 682812977), null, new cljs.core.Keyword(null, "phil_github", "phil_github", 2559879929), null, new cljs.core.Keyword(null, "phil_linkedin", "phil_linkedin", 592496404), null], true);
    if(cljs.core.not_EQ_.call(null, as_map_things__5499__auto___15733, provided_things__5500__auto___15734)) {
      (function(p1__5553__5555__auto__, p2__5554__5556__auto__) {
        return cljs.core.prn.call(null, [cljs.core.str("Template vars not equal "), cljs.core.str(p1__5553__5555__auto__), cljs.core.str(" vs "), cljs.core.str(p2__5554__5556__auto__)].join(""))
      }).call(null, as_map_things__5499__auto___15733, provided_things__5500__auto___15734)
    }else {
    }
    return[cljs.core.str('public class ContactInformation {\n\n\tprivate String name;\n\tprivate String email;\n\tprivate String github;\n\tprivate String linkedin;\n\n\tpublic ContactInformation(String name, String email, String github, String linkedin)\n\t{\n\t\tsetName(name);\n\t\tsetEmail(email);\n\t\tsetGithub(github);\n\t\tsetLinkedin(linkedin);\n\t}\n\n\tpublic static void main(String[] args)\n\t{\n\t\tContactInformation phil \x3d\n\t\t\tnew ContactInformation("'), cljs.core.str(G__15722), 
    cljs.core.str('",\n\t\t\t\t"'), cljs.core.str(G__15723), cljs.core.str('",\n\t\t\t\t"'), cljs.core.str(G__15724), cljs.core.str('",\n\t\t\t\t"'), cljs.core.str(G__15725), cljs.core.str('");\n\t\tContactInformation amber \x3d\n\t\t\tnew ContactInformation("'), cljs.core.str(G__15726), cljs.core.str('",\n\t\t\t\t"'), cljs.core.str(G__15727), cljs.core.str('",\n\t\t\t\t"'), cljs.core.str(G__15728), cljs.core.str('",\n\t\t\t\t"'), cljs.core.str(G__15729), cljs.core.str('");\n\t\tSystem.out.println(phil);\n\t\tSystem.out.println(amber);\n\t}\n\n\tpublic String toString()\n\t{\n\t\treturn String.format("Name: %s \\nEmail: %s \\nGithub: %s \\nLinkedin: %s ",\n\t\t\tthis.getName(), this.getEmail(), this.getGithub(), this.getLinkedin());\n\t}\n\n\tprotected void setName(String name)\n\t{\n\t\tthis.name \x3d name;\n\t}\n\n\tpublic String getName()\n\t{\n\t\treturn this.name;\n\t}\n\n\tprotected void setEmail(String email)\n\t{\n\t\tthis.email \x3d email;\n\t}\n\n\tpublic String getEmail()\n\t{\n\t\treturn this.email;\n\t}\n\n\tprotected void setGithub(String github)\n\t{\n\t\tthis.github \x3d github;\n\t}\n\n\tpublic String getGithub()\n\t{\n\t\treturn this.github;\n\t}\n\n\tprotected void setLinkedin(String linkedin)\n\t{\n\t\tthis.linkedin \x3d linkedin;\n\t}\n\n\tpublic String getLinkedin()\n\t{\n\t\treturn this.linkedin;\n\t}\n\n}\n')].join("")
  })
};
phil_and_amber.language_templates.clojure_template = function clojure_template(contacts) {
  return phil_and_amber.language_templates.update_lang_div_BANG_.call(null, contacts, function(p__15755) {
    var map__15756 = p__15755;
    var map__15756__$1 = cljs.core.seq_QMARK_.call(null, map__15756) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15756) : map__15756;
    var G__15754 = map__15756__$1;
    var G__15753 = cljs.core.get.call(null, map__15756__$1, new cljs.core.Keyword(null, "amber_linkedin", "amber_linkedin", 617419852));
    var G__15752 = cljs.core.get.call(null, map__15756__$1, new cljs.core.Keyword(null, "amber_github", "amber_github", 682812977));
    var G__15751 = cljs.core.get.call(null, map__15756__$1, new cljs.core.Keyword(null, "amber_email", "amber_email", 2664045746));
    var G__15750 = cljs.core.get.call(null, map__15756__$1, new cljs.core.Keyword(null, "amber_name", "amber_name", 1483033561));
    var G__15749 = cljs.core.get.call(null, map__15756__$1, new cljs.core.Keyword(null, "phil_linkedin", "phil_linkedin", 592496404));
    var G__15748 = cljs.core.get.call(null, map__15756__$1, new cljs.core.Keyword(null, "phil_github", "phil_github", 2559879929));
    var G__15747 = cljs.core.get.call(null, map__15756__$1, new cljs.core.Keyword(null, "phil_email", "phil_email", 3971522282));
    var G__15746 = cljs.core.get.call(null, map__15756__$1, new cljs.core.Keyword(null, "phil_name", "phil_name", 3187778209));
    var as_map_things__5499__auto___15757 = cljs.core.comp.call(null, cljs.core.set, cljs.core.keys).call(null, G__15754);
    var provided_things__5500__auto___15758 = cljs.core.PersistentHashSet.fromArray([new cljs.core.Keyword(null, "amber_email", "amber_email", 2664045746), null, new cljs.core.Keyword(null, "phil_name", "phil_name", 3187778209), null, new cljs.core.Keyword(null, "phil_email", "phil_email", 3971522282), null, new cljs.core.Keyword(null, "amber_linkedin", "amber_linkedin", 617419852), null, new cljs.core.Keyword(null, "amber_name", "amber_name", 1483033561), null, new cljs.core.Keyword(null, "amber_github", 
    "amber_github", 682812977), null, new cljs.core.Keyword(null, "phil_github", "phil_github", 2559879929), null, new cljs.core.Keyword(null, "phil_linkedin", "phil_linkedin", 592496404), null], true);
    if(cljs.core.not_EQ_.call(null, as_map_things__5499__auto___15757, provided_things__5500__auto___15758)) {
      (function(p1__5562__5564__auto__, p2__5563__5565__auto__) {
        return cljs.core.prn.call(null, [cljs.core.str("Template vars not equal "), cljs.core.str(p1__5562__5564__auto__), cljs.core.str(" vs "), cljs.core.str(p2__5563__5565__auto__)].join(""))
      }).call(null, as_map_things__5499__auto___15757, provided_things__5500__auto___15758)
    }else {
    }
    return[cljs.core.str('(def contacts {"phil" {:name "'), cljs.core.str(G__15746), cljs.core.str('"\n                       :email "'), cljs.core.str(G__15747), cljs.core.str('"\n                       :github "'), cljs.core.str(G__15748), cljs.core.str('"\n                       :linkedin "'), cljs.core.str(G__15749), cljs.core.str('"}\n               "amber" {:name "'), cljs.core.str(G__15750), cljs.core.str('"\n                        :email "'), cljs.core.str(G__15751), cljs.core.str('"\n                        :github "'), 
    cljs.core.str(G__15752), cljs.core.str('"\n                        :linkedin "'), cljs.core.str(G__15753), cljs.core.str('"}})\n')].join("")
  })
};
phil_and_amber.language_templates.text_template = function text_template(contacts) {
  return phil_and_amber.language_templates.update_lang_div_BANG_.call(null, contacts, function(p__15779) {
    var map__15780 = p__15779;
    var map__15780__$1 = cljs.core.seq_QMARK_.call(null, map__15780) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15780) : map__15780;
    var G__15778 = map__15780__$1;
    var G__15777 = cljs.core.get.call(null, map__15780__$1, new cljs.core.Keyword(null, "amber_linkedin", "amber_linkedin", 617419852));
    var G__15776 = cljs.core.get.call(null, map__15780__$1, new cljs.core.Keyword(null, "amber_github", "amber_github", 682812977));
    var G__15775 = cljs.core.get.call(null, map__15780__$1, new cljs.core.Keyword(null, "amber_email", "amber_email", 2664045746));
    var G__15774 = cljs.core.get.call(null, map__15780__$1, new cljs.core.Keyword(null, "amber_name", "amber_name", 1483033561));
    var G__15773 = cljs.core.get.call(null, map__15780__$1, new cljs.core.Keyword(null, "phil_linkedin", "phil_linkedin", 592496404));
    var G__15772 = cljs.core.get.call(null, map__15780__$1, new cljs.core.Keyword(null, "phil_github", "phil_github", 2559879929));
    var G__15771 = cljs.core.get.call(null, map__15780__$1, new cljs.core.Keyword(null, "phil_email", "phil_email", 3971522282));
    var G__15770 = cljs.core.get.call(null, map__15780__$1, new cljs.core.Keyword(null, "phil_name", "phil_name", 3187778209));
    var as_map_things__5499__auto___15781 = cljs.core.comp.call(null, cljs.core.set, cljs.core.keys).call(null, G__15778);
    var provided_things__5500__auto___15782 = cljs.core.PersistentHashSet.fromArray([new cljs.core.Keyword(null, "amber_email", "amber_email", 2664045746), null, new cljs.core.Keyword(null, "phil_name", "phil_name", 3187778209), null, new cljs.core.Keyword(null, "phil_email", "phil_email", 3971522282), null, new cljs.core.Keyword(null, "amber_linkedin", "amber_linkedin", 617419852), null, new cljs.core.Keyword(null, "amber_name", "amber_name", 1483033561), null, new cljs.core.Keyword(null, "amber_github", 
    "amber_github", 682812977), null, new cljs.core.Keyword(null, "phil_github", "phil_github", 2559879929), null, new cljs.core.Keyword(null, "phil_linkedin", "phil_linkedin", 592496404), null], true);
    if(cljs.core.not_EQ_.call(null, as_map_things__5499__auto___15781, provided_things__5500__auto___15782)) {
      (function(p1__5571__5573__auto__, p2__5572__5574__auto__) {
        return cljs.core.prn.call(null, [cljs.core.str("Template vars not equal "), cljs.core.str(p1__5571__5573__auto__), cljs.core.str(" vs "), cljs.core.str(p2__5572__5574__auto__)].join(""))
      }).call(null, as_map_things__5499__auto___15781, provided_things__5500__auto___15782)
    }else {
    }
    return[cljs.core.str(G__15770), cljs.core.str("\n"), cljs.core.str(G__15771), cljs.core.str("\n"), cljs.core.str(G__15772), cljs.core.str("\n"), cljs.core.str(G__15773), cljs.core.str("\n\n"), cljs.core.str(G__15774), cljs.core.str("\n"), cljs.core.str(G__15775), cljs.core.str("\n"), cljs.core.str(G__15776), cljs.core.str("\n"), cljs.core.str(G__15777), cljs.core.str("\n")].join("")
  })
};
goog.provide("phil_and_amber.routing");
goog.require("cljs.core");
goog.require("phil_and_amber.language_templates");
goog.require("phil_and_amber.data");
goog.require("phil_and_amber.data");
goog.require("phil_and_amber.language_templates");
phil_and_amber.routing.lang_routing = cljs.core.array_map.call(null, "Clojure", cljs.core.partial.call(null, phil_and_amber.language_templates.clojure_template, phil_and_amber.data.contacts), "Python", cljs.core.partial.call(null, phil_and_amber.language_templates.python_template, phil_and_amber.data.contacts), "HTML", cljs.core.partial.call(null, phil_and_amber.language_templates.html_template, phil_and_amber.data.contacts), "JavaScript", cljs.core.partial.call(null, phil_and_amber.language_templates.js_template, 
phil_and_amber.data.contacts), "Java", cljs.core.partial.call(null, phil_and_amber.language_templates.java_template, phil_and_amber.data.contacts), "Text", cljs.core.partial.call(null, phil_and_amber.language_templates.text_template, phil_and_amber.data.contacts));
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = {};
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if(function() {
    var and__3941__auto__ = port;
    if(and__3941__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler)
  }else {
    var x__3494__auto__ = port == null ? null : port;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler)
  }
};
cljs.core.async.impl.protocols.WritePort = {};
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if(function() {
    var and__3941__auto__ = port;
    if(and__3941__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler)
  }else {
    var x__3494__auto__ = port == null ? null : port;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler)
  }
};
cljs.core.async.impl.protocols.Channel = {};
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if(function() {
    var and__3941__auto__ = chan;
    if(and__3941__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan)
  }else {
    var x__3494__auto__ = chan == null ? null : chan;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan)
  }
};
cljs.core.async.impl.protocols.Handler = {};
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if(function() {
    var and__3941__auto__ = h;
    if(and__3941__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h)
  }else {
    var x__3494__auto__ = h == null ? null : h;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if(function() {
    var and__3941__auto__ = h;
    if(and__3941__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h)
  }else {
    var x__3494__auto__ = h == null ? null : h;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.Buffer = {};
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b)
  }else {
    var x__3494__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b)
  }else {
    var x__3494__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm)
  }else {
    var x__3494__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm)
  }
};
cljs.core.async.impl.protocols.UnblockingBuffer = {};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while(true) {
    if(cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__19565 = cnt + 1;
      cnt = G__19565;
      continue
    }else {
      return null
    }
    break
  }
};
goog.provide("cljs.core.async.impl.buffers.RingBuffer");
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core.async.impl.buffers/RingBuffer")
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if(self__.length === 0) {
    return null
  }else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if(self__.length + 1 === self__.arr.length) {
    this$.resize()
  }else {
  }
  return this$.unshift(x)
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if(self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr
  }else {
    if(self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr
    }else {
      if(self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr
      }else {
        return null
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__3654__auto__ = self__.length;
  var x = 0;
  while(true) {
    if(x < n__3654__auto__) {
      var v_19566 = this$.pop();
      if(keep_QMARK_.call(null, v_19566)) {
        this$.unshift(v_19566)
      }else {
      }
      var G__19567 = x + 1;
      x = G__19567;
      continue
    }else {
      return null
    }
    break
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr)
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if(n > 0) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", -1640531465, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n))
};
goog.provide("cljs.core.async.impl.buffers.FixedBuffer");
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core.async.impl.buffers/FixedBuffer")
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length === self__.n
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(cljs.core.not.call(null, this$.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(this$))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't add to a full buffer"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null)))))].join(""));
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n)
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.buffers.DroppingBuffer");
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core.async.impl.buffers/DroppingBuffer")
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return false
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(self__.buf.length === self__.n) {
    return null
  }else {
    return self__.buf.unshift(itm)
  }
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n)
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.buffers.SlidingBuffer");
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core.async.impl.buffers/SlidingBuffer")
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return false
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(self__.buf.length === self__.n) {
    this$.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(this$)
  }else {
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n)
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_19554 = 0;
  while(true) {
    var m_19555 = cljs.core.async.impl.dispatch.tasks.pop();
    if(m_19555 == null) {
    }else {
      m_19555.call(null);
      if(count_19554 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__19556 = count_19554 + 1;
        count_19554 = G__19556;
        continue
      }else {
      }
    }
    break
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if(cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null)
  }else {
    return null
  }
};
if(typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null)
  }
}else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if(cljs.core.truth_(and__3941__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_
    }else {
      return and__3941__auto__
    }
  }())) {
    return null
  }else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if(typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0)
    }else {
      if(typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null)
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay)
};
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o]
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx]
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", 4635210724))
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if(typeof cljs.core.async.impl.ioc_helpers.t19571 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.impl.ioc_helpers.t19571");
    cljs.core.async.impl.ioc_helpers.t19571 = function(f, fn_handler, meta19572) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta19572 = meta19572;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.impl.ioc_helpers.t19571.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t19571.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t19571";
    cljs.core.async.impl.ioc_helpers.t19571.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
      return cljs.core._write.call(null, writer__3436__auto__, "cljs.core.async.impl.ioc-helpers/t19571")
    };
    cljs.core.async.impl.ioc_helpers.t19571.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t19571.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return true
    };
    cljs.core.async.impl.ioc_helpers.t19571.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      return self__.f
    };
    cljs.core.async.impl.ioc_helpers.t19571.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19573) {
      var self__ = this;
      return self__.meta19572
    };
    cljs.core.async.impl.ioc_helpers.t19571.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19573, meta19572__$1) {
      var self__ = this;
      return new cljs.core.async.impl.ioc_helpers.t19571(self__.f, self__.fn_handler, meta19572__$1)
    };
    cljs.core.async.impl.ioc_helpers.__GT_t19571 = function __GT_t19571(f__$1, fn_handler__$1, meta19572) {
      return new cljs.core.async.impl.ioc_helpers.t19571(f__$1, fn_handler__$1, meta19572)
    }
  }
  return new cljs.core.async.impl.ioc_helpers.t19571(f, fn_handler, null)
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state)
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state)
  }catch(e19575) {
    if(e19575 instanceof Object) {
      var ex = e19575;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e19575;
      }else {
        return null
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_19578_19580 = state;
    statearr_19578_19580[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_19578_19580[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_19579_19581 = state;
    statearr_19579_19581[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_19579_19581[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_19584_19586 = state;
    statearr_19584_19586[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_19584_19586[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_19585_19587 = state;
    statearr_19585_19587[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_19585_19587[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__19588) {
    var map__19593 = p__19588;
    var map__19593__$1 = cljs.core.seq_QMARK_.call(null, map__19593) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19593) : map__19593;
    var opts = map__19593__$1;
    var statearr_19594_19597 = state;
    statearr_19594_19597[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4092__auto__ = cljs.core.async.do_alts.call(null, function(val) {
      var statearr_19595_19598 = state;
      statearr_19595_19598[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
    }, ports, opts);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var cb = temp__4092__auto__;
      var statearr_19596_19599 = state;
      statearr_19596_19599[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
    }else {
      return null
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__19588 = null;
    if(arguments.length > 3) {
      p__19588 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__19588)
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__19600) {
    var state = cljs.core.first(arglist__19600);
    arglist__19600 = cljs.core.next(arglist__19600);
    var cont_block = cljs.core.first(arglist__19600);
    arglist__19600 = cljs.core.next(arglist__19600);
    var ports = cljs.core.first(arglist__19600);
    var p__19588 = cljs.core.rest(arglist__19600);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__19588)
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if(value == null) {
  }else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
      return null
    }))
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c
};
goog.provide("cljs.core.async.impl.ioc_helpers.ExceptionFrame");
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if(arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3448__auto__) {
  var self__ = this;
  var h__3315__auto__ = self__.__hash;
  if(!(h__3315__auto__ == null)) {
    return h__3315__auto__
  }else {
    var h__3315__auto____$1 = cljs.core.hash_imap.call(null, this__3448__auto__);
    self__.__hash = h__3315__auto____$1;
    return h__3315__auto____$1
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3453__auto__, k__3454__auto__) {
  var self__ = this;
  return this__3453__auto__.cljs$core$ILookup$_lookup$arity$3(this__3453__auto__, k__3454__auto__, null)
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3455__auto__, k19602, else__3456__auto__) {
  var self__ = this;
  if(cljs.core.keyword_identical_QMARK_.call(null, k19602, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893))) {
    return self__.catch_block
  }else {
    if(cljs.core.keyword_identical_QMARK_.call(null, k19602, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687))) {
      return self__.catch_exception
    }else {
      if(cljs.core.keyword_identical_QMARK_.call(null, k19602, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429))) {
        return self__.finally_block
      }else {
        if(cljs.core.keyword_identical_QMARK_.call(null, k19602, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097))) {
          return self__.continue_block
        }else {
          if(cljs.core.keyword_identical_QMARK_.call(null, k19602, new cljs.core.Keyword(null, "prev", "prev", 1017353637))) {
            return self__.prev
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.get.call(null, self__.__extmap, k19602, else__3456__auto__)
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3460__auto__, k__3461__auto__, G__19601) {
  var self__ = this;
  var pred__19604 = cljs.core.keyword_identical_QMARK_;
  var expr__19605 = k__3461__auto__;
  if(pred__19604.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), expr__19605)) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__19601, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null)
  }else {
    if(pred__19604.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), expr__19605)) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__19601, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null)
    }else {
      if(pred__19604.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), expr__19605)) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__19601, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null)
      }else {
        if(pred__19604.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), expr__19605)) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__19601, self__.prev, self__.__meta, self__.__extmap, null)
        }else {
          if(pred__19604.call(null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), expr__19605)) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__19601, self__.__meta, self__.__extmap, null)
          }else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3461__auto__, G__19601), null)
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__3467__auto__, writer__3468__auto__, opts__3469__auto__) {
  var self__ = this;
  var pr_pair__3470__auto__ = function(keyval__3471__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__3468__auto__, cljs.core.pr_writer, "", " ", "", opts__3469__auto__, keyval__3471__auto__)
  };
  return cljs.core.pr_sequential_writer.call(null, writer__3468__auto__, pr_pair__3470__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__3469__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block), cljs.core.vector.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception), cljs.core.vector.call(null, 
  new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block), cljs.core.vector.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), self__.continue_block), cljs.core.vector.call(null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), self__.prev)], true), self__.__extmap))
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3458__auto__, entry__3459__auto__) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry__3459__auto__)) {
    return this__3458__auto__.cljs$core$IAssociative$_assoc$arity$3(this__3458__auto__, cljs.core._nth.call(null, entry__3459__auto__, 0), cljs.core._nth.call(null, entry__3459__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3458__auto__, entry__3459__auto__)
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__3465__auto__) {
  var self__ = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block), cljs.core.vector.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception), cljs.core.vector.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block), cljs.core.vector.call(null, 
  new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), self__.continue_block), cljs.core.vector.call(null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), self__.prev)], true), self__.__extmap))
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3457__auto__) {
  var self__ = this;
  return 5 + cljs.core.count.call(null, self__.__extmap)
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3449__auto__, other__3450__auto__) {
  var self__ = this;
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = other__3450__auto__;
    if(cljs.core.truth_(and__3941__auto__)) {
      var and__3941__auto____$1 = this__3449__auto__.constructor === other__3450__auto__.constructor;
      if(and__3941__auto____$1) {
        return cljs.core.equiv_map.call(null, this__3449__auto__, other__3450__auto__)
      }else {
        return and__3941__auto____$1
      }
    }else {
      return and__3941__auto__
    }
  }())) {
    return true
  }else {
    return false
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3452__auto__, G__19601) {
  var self__ = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__19601, self__.__extmap, self__.__hash)
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3451__auto__) {
  var self__ = this;
  return self__.__meta
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3462__auto__, k__3463__auto__) {
  var self__ = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray([new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), null], true), k__3463__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3462__auto__), self__.__meta), k__3463__auto__)
  }else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3463__auto__)), null)
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__3487__auto__) {
  return cljs.core.list.call(null, "cljs.core.async.impl.ioc-helpers/ExceptionFrame")
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__3487__auto__, writer__3488__auto__) {
  return cljs.core._write.call(null, writer__3488__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame")
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev)
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__19603) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).call(null, G__19603), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).call(null, G__19603), (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).call(null, G__19603), (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).call(null, G__19603), (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).call(null, 
  G__19603), null, cljs.core.dissoc.call(null, G__19603, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), new cljs.core.Keyword(null, "prev", "prev", 1017353637)))
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_19608 = state;
  statearr_19608[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_19608
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while(true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).call(null, exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).call(null, exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = exception;
      if(cljs.core.truth_(and__3941__auto__)) {
        return cljs.core.not.call(null, exception_frame)
      }else {
        return and__3941__auto__
      }
    }())) {
      throw exception;
    }else {
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = exception;
        if(cljs.core.truth_(and__3941__auto__)) {
          var and__3941__auto____$1 = catch_block;
          if(cljs.core.truth_(and__3941__auto____$1)) {
            return exception instanceof catch_exception
          }else {
            return and__3941__auto____$1
          }
        }else {
          return and__3941__auto__
        }
      }())) {
        var statearr_19614 = state;
        statearr_19614[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_19614[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_19614[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_19614[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null);
        return statearr_19614
      }else {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = exception;
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = cljs.core.not.call(null, catch_block);
            if(and__3941__auto____$1) {
              return cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).call(null, exception_frame))
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())) {
          var statearr_19615_19619 = state;
          statearr_19615_19619[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).call(null, exception_frame);
          var G__19620 = state;
          state = G__19620;
          continue
        }else {
          if(cljs.core.truth_(function() {
            var and__3941__auto__ = exception;
            if(cljs.core.truth_(and__3941__auto__)) {
              var and__3941__auto____$1 = cljs.core.not.call(null, catch_block);
              if(and__3941__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).call(null, exception_frame)
              }else {
                return and__3941__auto____$1
              }
            }else {
              return and__3941__auto__
            }
          }())) {
            var statearr_19616 = state;
            statearr_19616[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).call(null, exception_frame);
            statearr_19616[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
            return statearr_19616
          }else {
            if(cljs.core.truth_(function() {
              var and__3941__auto__ = cljs.core.not.call(null, exception);
              if(and__3941__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).call(null, exception_frame)
              }else {
                return and__3941__auto__
              }
            }())) {
              var statearr_19617 = state;
              statearr_19617[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).call(null, exception_frame);
              statearr_19617[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
              return statearr_19617
            }else {
              if(function() {
                var and__3941__auto__ = cljs.core.not.call(null, exception);
                if(and__3941__auto__) {
                  return cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).call(null, exception_frame))
                }else {
                  return and__3941__auto__
                }
              }()) {
                var statearr_19618 = state;
                statearr_19618[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).call(null, exception_frame);
                statearr_19618[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).call(null, exception_frame);
                return statearr_19618
              }else {
                if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  if(false) {
                    return null
                  }else {
                    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No matching clause"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, false))].join(""));
                  }
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
    break
  }
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if(typeof cljs.core.async.impl.channels.t19560 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.impl.channels.t19560");
    cljs.core.async.impl.channels.t19560 = function(val, box, meta19561) {
      this.val = val;
      this.box = box;
      this.meta19561 = meta19561;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984
    };
    cljs.core.async.impl.channels.t19560.cljs$lang$type = true;
    cljs.core.async.impl.channels.t19560.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t19560";
    cljs.core.async.impl.channels.t19560.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
      return cljs.core._write.call(null, writer__3436__auto__, "cljs.core.async.impl.channels/t19560")
    };
    cljs.core.async.impl.channels.t19560.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      return self__.val
    };
    cljs.core.async.impl.channels.t19560.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19562) {
      var self__ = this;
      return self__.meta19561
    };
    cljs.core.async.impl.channels.t19560.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19562, meta19561__$1) {
      var self__ = this;
      return new cljs.core.async.impl.channels.t19560(self__.val, self__.box, meta19561__$1)
    };
    cljs.core.async.impl.channels.__GT_t19560 = function __GT_t19560(val__$1, box__$1, meta19561) {
      return new cljs.core.async.impl.channels.t19560(val__$1, box__$1, meta19561)
    }
  }
  return new cljs.core.async.impl.channels.t19560(val, box, null)
};
goog.provide("cljs.core.async.impl.channels.PutBox");
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__3438__auto__, writer__3439__auto__, opts__3440__auto__) {
  return cljs.core._write.call(null, writer__3439__auto__, "cljs.core.async.impl.channels/PutBox")
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val)
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler)
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
goog.provide("cljs.core.async.impl.channels.ManyToManyChannel");
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core.async.impl.channels/ManyToManyChannel")
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  if(self__.closed) {
    return null
  }else {
    self__.closed = true;
    while(true) {
      var taker_19563 = self__.takes.pop();
      if(taker_19563 == null) {
      }else {
        if(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_19563)) {
          var take_cb_19564 = cljs.core.async.impl.protocols.commit.call(null, taker_19563);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_19564, taker_19563) {
            return function() {
              return take_cb_19564.call(null, null)
            }
          }(take_cb_19564, taker_19563))
        }else {
        }
        continue
      }
      break
    }
    return null
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  if(!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null
  }else {
    if(function() {
      var and__3941__auto__ = !(self__.buf == null);
      if(and__3941__auto__) {
        return cljs.core.count.call(null, self__.buf) > 0
      }else {
        return and__3941__auto__
      }
    }()) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf))
    }else {
      while(true) {
        var putter = self__.puts.pop();
        if(!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if(cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val)
          }else {
            continue
          }
        }else {
          if(self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null)
          }else {
            if(self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_)
            }else {
              self__.dirty_takes = self__.dirty_takes + 1
            }
            if(self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            }else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 1395928862, null), new cljs.core.Symbol(null, 
              "takes", "takes", -1530407291, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
            }
            self__.takes.unbounded_unshift(handler);
            return null
          }
        }
        break
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  if(!(val == null)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if(function() {
    var or__3943__auto__ = closed__$1;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)
    }
  }()) {
    return cljs.core.async.impl.channels.box.call(null, null)
  }else {
    while(true) {
      var taker = self__.takes.pop();
      if(!(taker == null)) {
        if(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker) {
            return function() {
              return take_cb.call(null, val)
            }
          }(take_cb, _, taker));
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          continue
        }
      }else {
        if(!function() {
          var or__3943__auto__ = self__.buf == null;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf)
          }
        }()) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          if(self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_)
          }else {
            self__.dirty_puts = self__.dirty_puts + 1
          }
          if(self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          }else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            1395928862, null), new cljs.core.Symbol(null, "puts", "puts", -1637078787, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null
        }
      }
      break
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed)
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null)
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0)
  };
  var random_level__1 = function(level) {
    while(true) {
      if(function() {
        var and__3941__auto__ = Math.random() < cljs.core.async.impl.timers.P;
        if(and__3941__auto__) {
          return level < cljs.core.async.impl.timers.MAX_LEVEL
        }else {
          return and__3941__auto__
        }
      }()) {
        var G__19530 = level + 1;
        level = G__19530;
        continue
      }else {
        return level
      }
      break
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level
}();
goog.provide("cljs.core.async.impl.timers.SkipListNode");
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core.async.impl.timers/SkipListNode")
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward)
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level)
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_19531 = 0;
    while(true) {
      if(i_19531 < arr.length) {
        arr[i_19531] = null;
        var G__19532 = i_19531 + 1;
        i_19531 = G__19532;
        continue
      }else {
      }
      break
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr)
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null)
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while(true) {
      if(!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while(true) {
            var temp__4090__auto__ = x__$1.forward[level];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var x_SINGLEQUOTE_ = temp__4090__auto__;
              if(x_SINGLEQUOTE_.key < k) {
                var G__19533 = x_SINGLEQUOTE_;
                x__$1 = G__19533;
                continue
              }else {
                return x__$1
              }
            }else {
              return x__$1
            }
            break
          }
        }();
        if(update == null) {
        }else {
          update[level] = x__$1
        }
        var G__19534 = x__$1;
        var G__19535 = k;
        var G__19536 = level - 1;
        var G__19537 = update;
        x = G__19534;
        k = G__19535;
        level = G__19536;
        update = G__19537;
        continue
      }else {
        return x
      }
      break
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node
}();
goog.provide("cljs.core.async.impl.timers.SkipList");
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
  return cljs.core._write.call(null, writer__3436__auto__, "cljs.core.async.impl.timers/SkipList")
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var iter = function iter(node) {
    return new cljs.core.LazySeq(null, function() {
      if(node == null) {
        return null
      }else {
        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([node.key, node.val], true), iter.call(null, node.forward[0]))
      }
    }, null, null)
  };
  return iter.call(null, self__.header.forward[0])
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(function() {
    var and__3941__auto__ = !(x__$1 == null);
    if(and__3941__auto__) {
      return x__$1.key === k
    }else {
      return and__3941__auto__
    }
  }()) {
    return x__$1.val = v
  }else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if(new_level > self__.level) {
      var i_19538 = self__.level + 1;
      while(true) {
        if(i_19538 <= new_level + 1) {
          update[i_19538] = self__.header;
          var G__19539 = i_19538 + 1;
          i_19538 = G__19539;
          continue
        }else {
        }
        break
      }
      self__.level = new_level
    }else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while(true) {
      if(i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2
      }else {
        return null
      }
      break
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(function() {
    var and__3941__auto__ = !(x__$1 == null);
    if(and__3941__auto__) {
      return x__$1.key === k
    }else {
      return and__3941__auto__
    }
  }()) {
    var i_19540 = 0;
    while(true) {
      if(i_19540 <= self__.level) {
        var links_19541 = update[i_19540].forward;
        if(links_19541[i_19540] === x__$1) {
          links_19541[i_19540] = x__$1.forward[i_19540];
          var G__19542 = i_19540 + 1;
          i_19540 = G__19542;
          continue
        }else {
          var G__19543 = i_19540 + 1;
          i_19540 = G__19543;
          continue
        }
      }else {
      }
      break
    }
    while(true) {
      if(function() {
        var and__3941__auto__ = self__.level > 0;
        if(and__3941__auto__) {
          return self__.header.forward[self__.level] == null
        }else {
          return and__3941__auto__
        }
      }()) {
        self__.level = self__.level - 1;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(x_SINGLEQUOTE_ == null) {
            return null
          }else {
            if(x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_
            }else {
              var G__19544 = x_SINGLEQUOTE_;
              x__$1 = G__19544;
              continue
            }
          }
          break
        }
      }();
      if(!(nx == null)) {
        var G__19545 = nx;
        var G__19546 = level__$1 - 1;
        x = G__19545;
        level__$1 = G__19546;
        continue
      }else {
        var G__19547 = x;
        var G__19548 = level__$1 - 1;
        x = G__19547;
        level__$1 = G__19548;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(!(x_SINGLEQUOTE_ == null)) {
            if(x_SINGLEQUOTE_.key > k) {
              return x__$1
            }else {
              var G__19549 = x_SINGLEQUOTE_;
              x__$1 = G__19549;
              continue
            }
          }else {
            if(level__$1 === 0) {
              return x__$1
            }else {
              return null
            }
          }
          break
        }
      }();
      if(cljs.core.truth_(nx)) {
        var G__19550 = nx;
        var G__19551 = level__$1 - 1;
        x = G__19550;
        level__$1 = G__19551;
        continue
      }else {
        var G__19552 = x;
        var G__19553 = level__$1 - 1;
        x = G__19552;
        level__$1 = G__19553;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level)
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0)
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3943__auto__ = cljs.core.truth_(function() {
    var and__3941__auto__ = me;
    if(cljs.core.truth_(and__3941__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS
    }else {
      return and__3941__auto__
    }
  }()) ? me.val : null;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function() {
      cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
      return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel)
    }, msecs);
    return timeout_channel
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.ioc_helpers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if(typeof cljs.core.async.t16931 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t16931");
    cljs.core.async.t16931 = function(f, fn_handler, meta16932) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta16932 = meta16932;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t16931.cljs$lang$type = true;
    cljs.core.async.t16931.cljs$lang$ctorStr = "cljs.core.async/t16931";
    cljs.core.async.t16931.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
      return cljs.core._write.call(null, writer__3436__auto__, "cljs.core.async/t16931")
    };
    cljs.core.async.t16931.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t16931.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return true
    };
    cljs.core.async.t16931.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      return self__.f
    };
    cljs.core.async.t16931.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16933) {
      var self__ = this;
      return self__.meta16932
    };
    cljs.core.async.t16931.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16933, meta16932__$1) {
      var self__ = this;
      return new cljs.core.async.t16931(self__.f, self__.fn_handler, meta16932__$1)
    };
    cljs.core.async.__GT_t16931 = function __GT_t16931(f__$1, fn_handler__$1, meta16932) {
      return new cljs.core.async.t16931(f__$1, fn_handler__$1, meta16932)
    }
  }
  return new cljs.core.async.t16931(f, fn_handler, null)
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n)
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n)
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n)
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__16935 = buff;
  if(G__16935) {
    if(cljs.core.truth_(function() {
      var or__3943__auto__ = null;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return G__16935.cljs$core$async$impl$protocols$UnblockingBuffer$
      }
    }())) {
      return true
    }else {
      if(!G__16935.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__16935)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__16935)
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null)
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1)
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs)
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3c! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true)
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if(cljs.core.truth_(ret)) {
      var val_16936 = cljs.core.deref.call(null, ret);
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_16936)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, function() {
          return fn1.call(null, val_16936)
        })
      }
    }else {
    }
    return null
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_
}();
cljs.core.async.nop = function nop() {
  return null
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3e! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop)
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true)
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = ret;
      if(cljs.core.truth_(and__3941__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop)
      }else {
        return and__3941__auto__
      }
    }())) {
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, fn0)
      }
    }else {
    }
    return null
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port)
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__3654__auto___16937 = n;
  var x_16938 = 0;
  while(true) {
    if(x_16938 < n__3654__auto___16937) {
      a[x_16938] = 0;
      var G__16939 = x_16938 + 1;
      x_16938 = G__16939;
      continue
    }else {
    }
    break
  }
  var i = 1;
  while(true) {
    if(cljs.core._EQ_.call(null, i, n)) {
      return a
    }else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__16940 = i + 1;
      i = G__16940;
      continue
    }
    break
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if(typeof cljs.core.async.t16944 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t16944");
    cljs.core.async.t16944 = function(flag, alt_flag, meta16945) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta16945 = meta16945;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t16944.cljs$lang$type = true;
    cljs.core.async.t16944.cljs$lang$ctorStr = "cljs.core.async/t16944";
    cljs.core.async.t16944.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
      return cljs.core._write.call(null, writer__3436__auto__, "cljs.core.async/t16944")
    };
    cljs.core.async.t16944.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t16944.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.deref.call(null, self__.flag)
    };
    cljs.core.async.t16944.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      cljs.core.reset_BANG_.call(null, self__.flag, null);
      return true
    };
    cljs.core.async.t16944.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16946) {
      var self__ = this;
      return self__.meta16945
    };
    cljs.core.async.t16944.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16946, meta16945__$1) {
      var self__ = this;
      return new cljs.core.async.t16944(self__.flag, self__.alt_flag, meta16945__$1)
    };
    cljs.core.async.__GT_t16944 = function __GT_t16944(flag__$1, alt_flag__$1, meta16945) {
      return new cljs.core.async.t16944(flag__$1, alt_flag__$1, meta16945)
    }
  }
  return new cljs.core.async.t16944(flag, alt_flag, null)
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if(typeof cljs.core.async.t16950 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t16950");
    cljs.core.async.t16950 = function(cb, flag, alt_handler, meta16951) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta16951 = meta16951;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t16950.cljs$lang$type = true;
    cljs.core.async.t16950.cljs$lang$ctorStr = "cljs.core.async/t16950";
    cljs.core.async.t16950.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
      return cljs.core._write.call(null, writer__3436__auto__, "cljs.core.async/t16950")
    };
    cljs.core.async.t16950.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t16950.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag)
    };
    cljs.core.async.t16950.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb
    };
    cljs.core.async.t16950.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16952) {
      var self__ = this;
      return self__.meta16951
    };
    cljs.core.async.t16950.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16952, meta16951__$1) {
      var self__ = this;
      return new cljs.core.async.t16950(self__.cb, self__.flag, self__.alt_handler, meta16951__$1)
    };
    cljs.core.async.__GT_t16950 = function __GT_t16950(cb__$1, flag__$1, alt_handler__$1, meta16951) {
      return new cljs.core.async.t16950(cb__$1, flag__$1, alt_handler__$1, meta16951)
    }
  }
  return new cljs.core.async.t16950(cb, flag, alt_handler, null)
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 4143410454)).call(null, opts);
  var ret = function() {
    var i = 0;
    while(true) {
      if(i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, cljs.core.PersistentVector.fromArray([null, wport], true))
            }
          }(i, val, idx, port, wport, flag, n, idxs, priority)))
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__16953_SHARP_) {
            return fret.call(null, cljs.core.PersistentVector.fromArray([p1__16953_SHARP_, port], true))
          }
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if(cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, cljs.core.PersistentVector.fromArray([cljs.core.deref.call(null, vbox), function() {
            var or__3943__auto__ = wport;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return port
            }
          }()], true))
        }else {
          var G__16954 = i + 1;
          i = G__16954;
          continue
        }
      }else {
        return null
      }
      break
    }
  }();
  var or__3943__auto__ = ret;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    if(cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
      var temp__4092__auto__ = function() {
        var and__3941__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if(cljs.core.truth_(and__3941__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag)
        }else {
          return and__3941__auto__
        }
      }();
      if(cljs.core.truth_(temp__4092__auto__)) {
        var got = temp__4092__auto__;
        return cljs.core.async.impl.channels.box.call(null, cljs.core.PersistentVector.fromArray([(new cljs.core.Keyword(null, "default", "default", 2558708147)).call(null, opts), new cljs.core.Keyword(null, "default", "default", 2558708147)], true))
      }else {
        return null
      }
    }else {
      return null
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__16955) {
    var map__16957 = p__16955;
    var map__16957__$1 = cljs.core.seq_QMARK_.call(null, map__16957) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16957) : map__16957;
    var opts = map__16957__$1;
    if(null) {
      return null
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("alts! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__16955 = null;
    if(arguments.length > 1) {
      p__16955 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return alts_BANG___delegate.call(this, ports, p__16955)
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__16958) {
    var ports = cljs.core.first(arglist__16958);
    var p__16955 = cljs.core.rest(arglist__16958);
    return alts_BANG___delegate(ports, p__16955)
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if(typeof cljs.core.async.t16966 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t16966");
    cljs.core.async.t16966 = function(ch, f, map_LT_, meta16967) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta16967 = meta16967;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t16966.cljs$lang$type = true;
    cljs.core.async.t16966.cljs$lang$ctorStr = "cljs.core.async/t16966";
    cljs.core.async.t16966.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
      return cljs.core._write.call(null, writer__3436__auto__, "cljs.core.async/t16966")
    };
    cljs.core.async.t16966.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t16966.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0)
    };
    cljs.core.async.t16966.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t16966.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if(typeof cljs.core.async.t16969 !== "undefined") {
        }else {
          goog.provide("cljs.core.async.t16969");
          cljs.core.async.t16969 = function(fn1, _, meta16967, ch, f, map_LT_, meta16970) {
            this.fn1 = fn1;
            this._ = _;
            this.meta16967 = meta16967;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta16970 = meta16970;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216
          };
          cljs.core.async.t16969.cljs$lang$type = true;
          cljs.core.async.t16969.cljs$lang$ctorStr = "cljs.core.async/t16969";
          cljs.core.async.t16969.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
            return cljs.core._write.call(null, writer__3436__auto__, "cljs.core.async/t16969")
          };
          cljs.core.async.t16969.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t16969.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$2) {
            var self__ = this;
            return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1)
          };
          cljs.core.async.t16969.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$2) {
            var self__ = this;
            return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1)
          };
          cljs.core.async.t16969.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$2) {
            var self__ = this;
            var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
            return function(f1) {
              return function(p1__16959_SHARP_) {
                return f1.call(null, p1__16959_SHARP_ == null ? null : self__.f.call(null, p1__16959_SHARP_))
              }
            }(f1)
          };
          cljs.core.async.t16969.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16971) {
            var self__ = this;
            return self__.meta16970
          };
          cljs.core.async.t16969.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16971, meta16970__$1) {
            var self__ = this;
            return new cljs.core.async.t16969(self__.fn1, self__._, self__.meta16967, self__.ch, self__.f, self__.map_LT_, meta16970__$1)
          };
          cljs.core.async.__GT_t16969 = function __GT_t16969(fn1__$1, ___$1, meta16967__$1, ch__$2, f__$2, map_LT___$2, meta16970) {
            return new cljs.core.async.t16969(fn1__$1, ___$1, meta16967__$1, ch__$2, f__$2, map_LT___$2, meta16970)
          }
        }
        return new cljs.core.async.t16969(fn1, _, self__.meta16967, self__.ch, self__.f, self__.map_LT_, null)
      }());
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = ret;
        if(cljs.core.truth_(and__3941__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null)
        }else {
          return and__3941__auto__
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)))
      }else {
        return ret
      }
    };
    cljs.core.async.t16966.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t16966.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch)
    };
    cljs.core.async.t16966.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16968) {
      var self__ = this;
      return self__.meta16967
    };
    cljs.core.async.t16966.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16968, meta16967__$1) {
      var self__ = this;
      return new cljs.core.async.t16966(self__.ch, self__.f, self__.map_LT_, meta16967__$1)
    };
    cljs.core.async.__GT_t16966 = function __GT_t16966(ch__$1, f__$1, map_LT___$1, meta16967) {
      return new cljs.core.async.t16966(ch__$1, f__$1, map_LT___$1, meta16967)
    }
  }
  return new cljs.core.async.t16966(ch, f, map_LT_, null)
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if(typeof cljs.core.async.t16975 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t16975");
    cljs.core.async.t16975 = function(ch, f, map_GT_, meta16976) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta16976 = meta16976;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t16975.cljs$lang$type = true;
    cljs.core.async.t16975.cljs$lang$ctorStr = "cljs.core.async/t16975";
    cljs.core.async.t16975.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
      return cljs.core._write.call(null, writer__3436__auto__, "cljs.core.async/t16975")
    };
    cljs.core.async.t16975.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t16975.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn0)
    };
    cljs.core.async.t16975.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t16975.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1)
    };
    cljs.core.async.t16975.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t16975.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch)
    };
    cljs.core.async.t16975.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16977) {
      var self__ = this;
      return self__.meta16976
    };
    cljs.core.async.t16975.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16977, meta16976__$1) {
      var self__ = this;
      return new cljs.core.async.t16975(self__.ch, self__.f, self__.map_GT_, meta16976__$1)
    };
    cljs.core.async.__GT_t16975 = function __GT_t16975(ch__$1, f__$1, map_GT___$1, meta16976) {
      return new cljs.core.async.t16975(ch__$1, f__$1, map_GT___$1, meta16976)
    }
  }
  return new cljs.core.async.t16975(ch, f, map_GT_, null)
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if(typeof cljs.core.async.t16981 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t16981");
    cljs.core.async.t16981 = function(ch, p, filter_GT_, meta16982) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta16982 = meta16982;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t16981.cljs$lang$type = true;
    cljs.core.async.t16981.cljs$lang$ctorStr = "cljs.core.async/t16981";
    cljs.core.async.t16981.cljs$lang$ctorPrWriter = function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
      return cljs.core._write.call(null, writer__3436__auto__, "cljs.core.async/t16981")
    };
    cljs.core.async.t16981.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t16981.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      if(cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0)
      }else {
        return cljs.core.async.impl.channels.box.call(null, null)
      }
    };
    cljs.core.async.t16981.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t16981.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1)
    };
    cljs.core.async.t16981.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t16981.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch)
    };
    cljs.core.async.t16981.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16983) {
      var self__ = this;
      return self__.meta16982
    };
    cljs.core.async.t16981.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16983, meta16982__$1) {
      var self__ = this;
      return new cljs.core.async.t16981(self__.ch, self__.p, self__.filter_GT_, meta16982__$1)
    };
    cljs.core.async.__GT_t16981 = function __GT_t16981(ch__$1, p__$1, filter_GT___$1, meta16982) {
      return new cljs.core.async.t16981(ch__$1, p__$1, filter_GT___$1, meta16982)
    }
  }
  return new cljs.core.async.t16981(ch, p, filter_GT_, null)
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch)
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null)
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6999__auto___17066 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__7000__auto__ = function() {
        var switch__6929__auto__ = function(state_17045) {
          var state_val_17046 = state_17045[1];
          if(state_val_17046 === 1) {
            var state_17045__$1 = state_17045;
            var statearr_17047_17067 = state_17045__$1;
            statearr_17047_17067[2] = null;
            statearr_17047_17067[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_17046 === 2) {
              var state_17045__$1 = state_17045;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17045__$1, 4, ch)
            }else {
              if(state_val_17046 === 3) {
                var inst_17043 = state_17045[2];
                var state_17045__$1 = state_17045;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17045__$1, inst_17043)
              }else {
                if(state_val_17046 === 4) {
                  var inst_17027 = state_17045[7];
                  var inst_17027__$1 = state_17045[2];
                  var inst_17028 = inst_17027__$1 == null;
                  var state_17045__$1 = function() {
                    var statearr_17048 = state_17045;
                    statearr_17048[7] = inst_17027__$1;
                    return statearr_17048
                  }();
                  if(cljs.core.truth_(inst_17028)) {
                    var statearr_17049_17068 = state_17045__$1;
                    statearr_17049_17068[1] = 5
                  }else {
                    var statearr_17050_17069 = state_17045__$1;
                    statearr_17050_17069[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_17046 === 5) {
                    var inst_17030 = cljs.core.async.close_BANG_.call(null, out);
                    var state_17045__$1 = state_17045;
                    var statearr_17051_17070 = state_17045__$1;
                    statearr_17051_17070[2] = inst_17030;
                    statearr_17051_17070[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_17046 === 6) {
                      var inst_17027 = state_17045[7];
                      var inst_17032 = p.call(null, inst_17027);
                      var state_17045__$1 = state_17045;
                      if(cljs.core.truth_(inst_17032)) {
                        var statearr_17052_17071 = state_17045__$1;
                        statearr_17052_17071[1] = 8
                      }else {
                        var statearr_17053_17072 = state_17045__$1;
                        statearr_17053_17072[1] = 9
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_17046 === 7) {
                        var inst_17041 = state_17045[2];
                        var state_17045__$1 = state_17045;
                        var statearr_17054_17073 = state_17045__$1;
                        statearr_17054_17073[2] = inst_17041;
                        statearr_17054_17073[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_17046 === 8) {
                          var inst_17027 = state_17045[7];
                          var state_17045__$1 = state_17045;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17045__$1, 11, out, inst_17027)
                        }else {
                          if(state_val_17046 === 9) {
                            var state_17045__$1 = state_17045;
                            var statearr_17055_17074 = state_17045__$1;
                            statearr_17055_17074[2] = null;
                            statearr_17055_17074[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_17046 === 10) {
                              var inst_17038 = state_17045[2];
                              var state_17045__$1 = function() {
                                var statearr_17056 = state_17045;
                                statearr_17056[8] = inst_17038;
                                return statearr_17056
                              }();
                              var statearr_17057_17075 = state_17045__$1;
                              statearr_17057_17075[2] = null;
                              statearr_17057_17075[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_17046 === 11) {
                                var inst_17035 = state_17045[2];
                                var state_17045__$1 = state_17045;
                                var statearr_17058_17076 = state_17045__$1;
                                statearr_17058_17076[2] = inst_17035;
                                statearr_17058_17076[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6929__auto__) {
          return function() {
            var state_machine__6930__auto__ = null;
            var state_machine__6930__auto____0 = function() {
              var statearr_17062 = new Array(9);
              statearr_17062[0] = state_machine__6930__auto__;
              statearr_17062[1] = 1;
              return statearr_17062
            };
            var state_machine__6930__auto____1 = function(state_17045) {
              while(true) {
                var ret_value__6931__auto__ = function() {
                  try {
                    while(true) {
                      var result__6932__auto__ = switch__6929__auto__.call(null, state_17045);
                      if(cljs.core.keyword_identical_QMARK_.call(null, result__6932__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue
                      }else {
                        return result__6932__auto__
                      }
                      break
                    }
                  }catch(e17063) {
                    if(e17063 instanceof Object) {
                      var ex__6933__auto__ = e17063;
                      var statearr_17064_17077 = state_17045;
                      statearr_17064_17077[5] = ex__6933__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17045);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e17063;
                      }else {
                        return null
                      }
                    }
                  }
                }();
                if(cljs.core.keyword_identical_QMARK_.call(null, ret_value__6931__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__17078 = state_17045;
                  state_17045 = G__17078;
                  continue
                }else {
                  return ret_value__6931__auto__
                }
                break
              }
            };
            state_machine__6930__auto__ = function(state_17045) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6930__auto____0.call(this);
                case 1:
                  return state_machine__6930__auto____1.call(this, state_17045)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6930__auto____0;
            state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6930__auto____1;
            return state_machine__6930__auto__
          }()
        }(switch__6929__auto__)
      }();
      var state__7001__auto__ = function() {
        var statearr_17065 = f__7000__auto__.call(null);
        statearr_17065[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6999__auto___17066;
        return statearr_17065
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7001__auto__)
    });
    return out
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null)
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n)
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__6999__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__7000__auto__ = function() {
      var switch__6929__auto__ = function(state_17230) {
        var state_val_17231 = state_17230[1];
        if(state_val_17231 === 1) {
          var state_17230__$1 = state_17230;
          var statearr_17232_17269 = state_17230__$1;
          statearr_17232_17269[2] = null;
          statearr_17232_17269[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_17231 === 2) {
            var state_17230__$1 = state_17230;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17230__$1, 4, in$)
          }else {
            if(state_val_17231 === 3) {
              var inst_17228 = state_17230[2];
              var state_17230__$1 = state_17230;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17230__$1, inst_17228)
            }else {
              if(state_val_17231 === 4) {
                var inst_17176 = state_17230[7];
                var inst_17176__$1 = state_17230[2];
                var inst_17177 = inst_17176__$1 == null;
                var state_17230__$1 = function() {
                  var statearr_17233 = state_17230;
                  statearr_17233[7] = inst_17176__$1;
                  return statearr_17233
                }();
                if(cljs.core.truth_(inst_17177)) {
                  var statearr_17234_17270 = state_17230__$1;
                  statearr_17234_17270[1] = 5
                }else {
                  var statearr_17235_17271 = state_17230__$1;
                  statearr_17235_17271[1] = 6
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_17231 === 5) {
                  var inst_17179 = cljs.core.async.close_BANG_.call(null, out);
                  var state_17230__$1 = state_17230;
                  var statearr_17236_17272 = state_17230__$1;
                  statearr_17236_17272[2] = inst_17179;
                  statearr_17236_17272[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_17231 === 6) {
                    var inst_17176 = state_17230[7];
                    var inst_17181 = f.call(null, inst_17176);
                    var inst_17186 = cljs.core.seq.call(null, inst_17181);
                    var inst_17187 = inst_17186;
                    var inst_17188 = null;
                    var inst_17189 = 0;
                    var inst_17190 = 0;
                    var state_17230__$1 = function() {
                      var statearr_17237 = state_17230;
                      statearr_17237[8] = inst_17190;
                      statearr_17237[9] = inst_17187;
                      statearr_17237[10] = inst_17189;
                      statearr_17237[11] = inst_17188;
                      return statearr_17237
                    }();
                    var statearr_17238_17273 = state_17230__$1;
                    statearr_17238_17273[2] = null;
                    statearr_17238_17273[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_17231 === 7) {
                      var inst_17226 = state_17230[2];
                      var state_17230__$1 = state_17230;
                      var statearr_17239_17274 = state_17230__$1;
                      statearr_17239_17274[2] = inst_17226;
                      statearr_17239_17274[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_17231 === 8) {
                        var inst_17190 = state_17230[8];
                        var inst_17189 = state_17230[10];
                        var inst_17192 = inst_17190 < inst_17189;
                        var inst_17193 = inst_17192;
                        var state_17230__$1 = state_17230;
                        if(cljs.core.truth_(inst_17193)) {
                          var statearr_17240_17275 = state_17230__$1;
                          statearr_17240_17275[1] = 10
                        }else {
                          var statearr_17241_17276 = state_17230__$1;
                          statearr_17241_17276[1] = 11
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_17231 === 9) {
                          var inst_17223 = state_17230[2];
                          var state_17230__$1 = function() {
                            var statearr_17242 = state_17230;
                            statearr_17242[12] = inst_17223;
                            return statearr_17242
                          }();
                          var statearr_17243_17277 = state_17230__$1;
                          statearr_17243_17277[2] = null;
                          statearr_17243_17277[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_17231 === 10) {
                            var inst_17190 = state_17230[8];
                            var inst_17188 = state_17230[11];
                            var inst_17195 = cljs.core._nth.call(null, inst_17188, inst_17190);
                            var state_17230__$1 = state_17230;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17230__$1, 13, out, inst_17195)
                          }else {
                            if(state_val_17231 === 11) {
                              var inst_17201 = state_17230[13];
                              var inst_17187 = state_17230[9];
                              var inst_17201__$1 = cljs.core.seq.call(null, inst_17187);
                              var state_17230__$1 = function() {
                                var statearr_17247 = state_17230;
                                statearr_17247[13] = inst_17201__$1;
                                return statearr_17247
                              }();
                              if(inst_17201__$1) {
                                var statearr_17248_17278 = state_17230__$1;
                                statearr_17248_17278[1] = 14
                              }else {
                                var statearr_17249_17279 = state_17230__$1;
                                statearr_17249_17279[1] = 15
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_17231 === 12) {
                                var inst_17221 = state_17230[2];
                                var state_17230__$1 = state_17230;
                                var statearr_17250_17280 = state_17230__$1;
                                statearr_17250_17280[2] = inst_17221;
                                statearr_17250_17280[1] = 9;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_17231 === 13) {
                                  var inst_17190 = state_17230[8];
                                  var inst_17187 = state_17230[9];
                                  var inst_17189 = state_17230[10];
                                  var inst_17188 = state_17230[11];
                                  var inst_17197 = state_17230[2];
                                  var inst_17198 = inst_17190 + 1;
                                  var tmp17244 = inst_17187;
                                  var tmp17245 = inst_17189;
                                  var tmp17246 = inst_17188;
                                  var inst_17187__$1 = tmp17244;
                                  var inst_17188__$1 = tmp17246;
                                  var inst_17189__$1 = tmp17245;
                                  var inst_17190__$1 = inst_17198;
                                  var state_17230__$1 = function() {
                                    var statearr_17251 = state_17230;
                                    statearr_17251[14] = inst_17197;
                                    statearr_17251[8] = inst_17190__$1;
                                    statearr_17251[9] = inst_17187__$1;
                                    statearr_17251[10] = inst_17189__$1;
                                    statearr_17251[11] = inst_17188__$1;
                                    return statearr_17251
                                  }();
                                  var statearr_17252_17281 = state_17230__$1;
                                  statearr_17252_17281[2] = null;
                                  statearr_17252_17281[1] = 8;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_17231 === 14) {
                                    var inst_17201 = state_17230[13];
                                    var inst_17203 = cljs.core.chunked_seq_QMARK_.call(null, inst_17201);
                                    var state_17230__$1 = state_17230;
                                    if(inst_17203) {
                                      var statearr_17253_17282 = state_17230__$1;
                                      statearr_17253_17282[1] = 17
                                    }else {
                                      var statearr_17254_17283 = state_17230__$1;
                                      statearr_17254_17283[1] = 18
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_17231 === 15) {
                                      var state_17230__$1 = state_17230;
                                      var statearr_17255_17284 = state_17230__$1;
                                      statearr_17255_17284[2] = null;
                                      statearr_17255_17284[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_17231 === 16) {
                                        var inst_17219 = state_17230[2];
                                        var state_17230__$1 = state_17230;
                                        var statearr_17256_17285 = state_17230__$1;
                                        statearr_17256_17285[2] = inst_17219;
                                        statearr_17256_17285[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_17231 === 17) {
                                          var inst_17201 = state_17230[13];
                                          var inst_17205 = cljs.core.chunk_first.call(null, inst_17201);
                                          var inst_17206 = cljs.core.chunk_rest.call(null, inst_17201);
                                          var inst_17207 = cljs.core.count.call(null, inst_17205);
                                          var inst_17187 = inst_17206;
                                          var inst_17188 = inst_17205;
                                          var inst_17189 = inst_17207;
                                          var inst_17190 = 0;
                                          var state_17230__$1 = function() {
                                            var statearr_17257 = state_17230;
                                            statearr_17257[8] = inst_17190;
                                            statearr_17257[9] = inst_17187;
                                            statearr_17257[10] = inst_17189;
                                            statearr_17257[11] = inst_17188;
                                            return statearr_17257
                                          }();
                                          var statearr_17258_17286 = state_17230__$1;
                                          statearr_17258_17286[2] = null;
                                          statearr_17258_17286[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_17231 === 18) {
                                            var inst_17201 = state_17230[13];
                                            var inst_17210 = cljs.core.first.call(null, inst_17201);
                                            var state_17230__$1 = state_17230;
                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17230__$1, 20, out, inst_17210)
                                          }else {
                                            if(state_val_17231 === 19) {
                                              var inst_17216 = state_17230[2];
                                              var state_17230__$1 = state_17230;
                                              var statearr_17259_17287 = state_17230__$1;
                                              statearr_17259_17287[2] = inst_17216;
                                              statearr_17259_17287[1] = 16;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_17231 === 20) {
                                                var inst_17201 = state_17230[13];
                                                var inst_17212 = state_17230[2];
                                                var inst_17213 = cljs.core.next.call(null, inst_17201);
                                                var inst_17187 = inst_17213;
                                                var inst_17188 = null;
                                                var inst_17189 = 0;
                                                var inst_17190 = 0;
                                                var state_17230__$1 = function() {
                                                  var statearr_17260 = state_17230;
                                                  statearr_17260[15] = inst_17212;
                                                  statearr_17260[8] = inst_17190;
                                                  statearr_17260[9] = inst_17187;
                                                  statearr_17260[10] = inst_17189;
                                                  statearr_17260[11] = inst_17188;
                                                  return statearr_17260
                                                }();
                                                var statearr_17261_17288 = state_17230__$1;
                                                statearr_17261_17288[2] = null;
                                                statearr_17261_17288[1] = 8;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                return null
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__6929__auto__) {
        return function() {
          var state_machine__6930__auto__ = null;
          var state_machine__6930__auto____0 = function() {
            var statearr_17265 = new Array(16);
            statearr_17265[0] = state_machine__6930__auto__;
            statearr_17265[1] = 1;
            return statearr_17265
          };
          var state_machine__6930__auto____1 = function(state_17230) {
            while(true) {
              var ret_value__6931__auto__ = function() {
                try {
                  while(true) {
                    var result__6932__auto__ = switch__6929__auto__.call(null, state_17230);
                    if(cljs.core.keyword_identical_QMARK_.call(null, result__6932__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue
                    }else {
                      return result__6932__auto__
                    }
                    break
                  }
                }catch(e17266) {
                  if(e17266 instanceof Object) {
                    var ex__6933__auto__ = e17266;
                    var statearr_17267_17289 = state_17230;
                    statearr_17267_17289[5] = ex__6933__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17230);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e17266;
                    }else {
                      return null
                    }
                  }
                }
              }();
              if(cljs.core.keyword_identical_QMARK_.call(null, ret_value__6931__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__17290 = state_17230;
                state_17230 = G__17290;
                continue
              }else {
                return ret_value__6931__auto__
              }
              break
            }
          };
          state_machine__6930__auto__ = function(state_17230) {
            switch(arguments.length) {
              case 0:
                return state_machine__6930__auto____0.call(this);
              case 1:
                return state_machine__6930__auto____1.call(this, state_17230)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6930__auto____0;
          state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6930__auto____1;
          return state_machine__6930__auto__
        }()
      }(switch__6929__auto__)
    }();
    var state__7001__auto__ = function() {
      var statearr_17268 = f__7000__auto__.call(null);
      statearr_17268[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6999__auto__;
      return statearr_17268
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7001__auto__)
  });
  return c__6999__auto__
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null)
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null)
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true)
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__6999__auto___17371 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__7000__auto__ = function() {
        var switch__6929__auto__ = function(state_17350) {
          var state_val_17351 = state_17350[1];
          if(state_val_17351 === 1) {
            var state_17350__$1 = state_17350;
            var statearr_17352_17372 = state_17350__$1;
            statearr_17352_17372[2] = null;
            statearr_17352_17372[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_17351 === 2) {
              var state_17350__$1 = state_17350;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17350__$1, 4, from)
            }else {
              if(state_val_17351 === 3) {
                var inst_17348 = state_17350[2];
                var state_17350__$1 = state_17350;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17350__$1, inst_17348)
              }else {
                if(state_val_17351 === 4) {
                  var inst_17333 = state_17350[7];
                  var inst_17333__$1 = state_17350[2];
                  var inst_17334 = inst_17333__$1 == null;
                  var state_17350__$1 = function() {
                    var statearr_17353 = state_17350;
                    statearr_17353[7] = inst_17333__$1;
                    return statearr_17353
                  }();
                  if(cljs.core.truth_(inst_17334)) {
                    var statearr_17354_17373 = state_17350__$1;
                    statearr_17354_17373[1] = 5
                  }else {
                    var statearr_17355_17374 = state_17350__$1;
                    statearr_17355_17374[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_17351 === 5) {
                    var state_17350__$1 = state_17350;
                    if(cljs.core.truth_(close_QMARK_)) {
                      var statearr_17356_17375 = state_17350__$1;
                      statearr_17356_17375[1] = 8
                    }else {
                      var statearr_17357_17376 = state_17350__$1;
                      statearr_17357_17376[1] = 9
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_17351 === 6) {
                      var inst_17333 = state_17350[7];
                      var state_17350__$1 = state_17350;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17350__$1, 11, to, inst_17333)
                    }else {
                      if(state_val_17351 === 7) {
                        var inst_17346 = state_17350[2];
                        var state_17350__$1 = state_17350;
                        var statearr_17358_17377 = state_17350__$1;
                        statearr_17358_17377[2] = inst_17346;
                        statearr_17358_17377[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_17351 === 8) {
                          var inst_17337 = cljs.core.async.close_BANG_.call(null, to);
                          var state_17350__$1 = state_17350;
                          var statearr_17359_17378 = state_17350__$1;
                          statearr_17359_17378[2] = inst_17337;
                          statearr_17359_17378[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_17351 === 9) {
                            var state_17350__$1 = state_17350;
                            var statearr_17360_17379 = state_17350__$1;
                            statearr_17360_17379[2] = null;
                            statearr_17360_17379[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_17351 === 10) {
                              var inst_17340 = state_17350[2];
                              var state_17350__$1 = state_17350;
                              var statearr_17361_17380 = state_17350__$1;
                              statearr_17361_17380[2] = inst_17340;
                              statearr_17361_17380[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_17351 === 11) {
                                var inst_17343 = state_17350[2];
                                var state_17350__$1 = function() {
                                  var statearr_17362 = state_17350;
                                  statearr_17362[8] = inst_17343;
                                  return statearr_17362
                                }();
                                var statearr_17363_17381 = state_17350__$1;
                                statearr_17363_17381[2] = null;
                                statearr_17363_17381[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6929__auto__) {
          return function() {
            var state_machine__6930__auto__ = null;
            var state_machine__6930__auto____0 = function() {
              var statearr_17367 = new Array(9);
              statearr_17367[0] = state_machine__6930__auto__;
              statearr_17367[1] = 1;
              return statearr_17367
            };
            var state_machine__6930__auto____1 = function(state_17350) {
              while(true) {
                var ret_value__6931__auto__ = function() {
                  try {
                    while(true) {
                      var result__6932__auto__ = switch__6929__auto__.call(null, state_17350);
                      if(cljs.core.keyword_identical_QMARK_.call(null, result__6932__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue
                      }else {
                        return result__6932__auto__
                      }
                      break
                    }
                  }catch(e17368) {
                    if(e17368 instanceof Object) {
                      var ex__6933__auto__ = e17368;
                      var statearr_17369_17382 = state_17350;
                      statearr_17369_17382[5] = ex__6933__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17350);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e17368;
                      }else {
                        return null
                      }
                    }
                  }
                }();
                if(cljs.core.keyword_identical_QMARK_.call(null, ret_value__6931__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__17383 = state_17350;
                  state_17350 = G__17383;
                  continue
                }else {
                  return ret_value__6931__auto__
                }
                break
              }
            };
            state_machine__6930__auto__ = function(state_17350) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6930__auto____0.call(this);
                case 1:
                  return state_machine__6930__auto____1.call(this, state_17350)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6930__auto____0;
            state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6930__auto____1;
            return state_machine__6930__auto__
          }()
        }(switch__6929__auto__)
      }();
      var state__7001__auto__ = function() {
        var statearr_17370 = f__7000__auto__.call(null);
        statearr_17370[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6999__auto___17371;
        return statearr_17370
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7001__auto__)
    });
    return to
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null)
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6999__auto___17470 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__7000__auto__ = function() {
        var switch__6929__auto__ = function(state_17448) {
          var state_val_17449 = state_17448[1];
          if(state_val_17449 === 1) {
            var state_17448__$1 = state_17448;
            var statearr_17450_17471 = state_17448__$1;
            statearr_17450_17471[2] = null;
            statearr_17450_17471[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_17449 === 2) {
              var state_17448__$1 = state_17448;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17448__$1, 4, ch)
            }else {
              if(state_val_17449 === 3) {
                var inst_17446 = state_17448[2];
                var state_17448__$1 = state_17448;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17448__$1, inst_17446)
              }else {
                if(state_val_17449 === 4) {
                  var inst_17429 = state_17448[7];
                  var inst_17429__$1 = state_17448[2];
                  var inst_17430 = inst_17429__$1 == null;
                  var state_17448__$1 = function() {
                    var statearr_17451 = state_17448;
                    statearr_17451[7] = inst_17429__$1;
                    return statearr_17451
                  }();
                  if(cljs.core.truth_(inst_17430)) {
                    var statearr_17452_17472 = state_17448__$1;
                    statearr_17452_17472[1] = 5
                  }else {
                    var statearr_17453_17473 = state_17448__$1;
                    statearr_17453_17473[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_17449 === 5) {
                    var inst_17432 = cljs.core.async.close_BANG_.call(null, tc);
                    var inst_17433 = cljs.core.async.close_BANG_.call(null, fc);
                    var state_17448__$1 = function() {
                      var statearr_17454 = state_17448;
                      statearr_17454[8] = inst_17432;
                      return statearr_17454
                    }();
                    var statearr_17455_17474 = state_17448__$1;
                    statearr_17455_17474[2] = inst_17433;
                    statearr_17455_17474[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_17449 === 6) {
                      var inst_17429 = state_17448[7];
                      var inst_17435 = p.call(null, inst_17429);
                      var state_17448__$1 = state_17448;
                      if(cljs.core.truth_(inst_17435)) {
                        var statearr_17456_17475 = state_17448__$1;
                        statearr_17456_17475[1] = 9
                      }else {
                        var statearr_17457_17476 = state_17448__$1;
                        statearr_17457_17476[1] = 10
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_17449 === 7) {
                        var inst_17444 = state_17448[2];
                        var state_17448__$1 = state_17448;
                        var statearr_17458_17477 = state_17448__$1;
                        statearr_17458_17477[2] = inst_17444;
                        statearr_17458_17477[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_17449 === 8) {
                          var inst_17441 = state_17448[2];
                          var state_17448__$1 = function() {
                            var statearr_17459 = state_17448;
                            statearr_17459[9] = inst_17441;
                            return statearr_17459
                          }();
                          var statearr_17460_17478 = state_17448__$1;
                          statearr_17460_17478[2] = null;
                          statearr_17460_17478[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_17449 === 9) {
                            var state_17448__$1 = state_17448;
                            var statearr_17461_17479 = state_17448__$1;
                            statearr_17461_17479[2] = tc;
                            statearr_17461_17479[1] = 11;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_17449 === 10) {
                              var state_17448__$1 = state_17448;
                              var statearr_17462_17480 = state_17448__$1;
                              statearr_17462_17480[2] = fc;
                              statearr_17462_17480[1] = 11;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_17449 === 11) {
                                var inst_17429 = state_17448[7];
                                var inst_17439 = state_17448[2];
                                var state_17448__$1 = state_17448;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17448__$1, 8, inst_17439, inst_17429)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6929__auto__) {
          return function() {
            var state_machine__6930__auto__ = null;
            var state_machine__6930__auto____0 = function() {
              var statearr_17466 = new Array(10);
              statearr_17466[0] = state_machine__6930__auto__;
              statearr_17466[1] = 1;
              return statearr_17466
            };
            var state_machine__6930__auto____1 = function(state_17448) {
              while(true) {
                var ret_value__6931__auto__ = function() {
                  try {
                    while(true) {
                      var result__6932__auto__ = switch__6929__auto__.call(null, state_17448);
                      if(cljs.core.keyword_identical_QMARK_.call(null, result__6932__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue
                      }else {
                        return result__6932__auto__
                      }
                      break
                    }
                  }catch(e17467) {
                    if(e17467 instanceof Object) {
                      var ex__6933__auto__ = e17467;
                      var statearr_17468_17481 = state_17448;
                      statearr_17468_17481[5] = ex__6933__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17448);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e17467;
                      }else {
                        return null
                      }
                    }
                  }
                }();
                if(cljs.core.keyword_identical_QMARK_.call(null, ret_value__6931__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__17482 = state_17448;
                  state_17448 = G__17482;
                  continue
                }else {
                  return ret_value__6931__auto__
                }
                break
              }
            };
            state_machine__6930__auto__ = function(state_17448) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6930__auto____0.call(this);
                case 1:
                  return state_machine__6930__auto____1.call(this, state_17448)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6930__auto____0;
            state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6930__auto____1;
            return state_machine__6930__auto__
          }()
        }(switch__6929__auto__)
      }();
      var state__7001__auto__ = function() {
        var statearr_17469 = f__7000__auto__.call(null);
        statearr_17469[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6999__auto___17470;
        return statearr_17469
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7001__auto__)
    });
    return cljs.core.PersistentVector.fromArray([tc, fc], true)
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__6999__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__7000__auto__ = function() {
      var switch__6929__auto__ = function(state_17529) {
        var state_val_17530 = state_17529[1];
        if(state_val_17530 === 7) {
          var inst_17525 = state_17529[2];
          var state_17529__$1 = state_17529;
          var statearr_17531_17547 = state_17529__$1;
          statearr_17531_17547[2] = inst_17525;
          statearr_17531_17547[1] = 3;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_17530 === 6) {
            var inst_17518 = state_17529[7];
            var inst_17515 = state_17529[8];
            var inst_17522 = f.call(null, inst_17515, inst_17518);
            var inst_17515__$1 = inst_17522;
            var state_17529__$1 = function() {
              var statearr_17532 = state_17529;
              statearr_17532[8] = inst_17515__$1;
              return statearr_17532
            }();
            var statearr_17533_17548 = state_17529__$1;
            statearr_17533_17548[2] = null;
            statearr_17533_17548[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_17530 === 5) {
              var inst_17515 = state_17529[8];
              var state_17529__$1 = state_17529;
              var statearr_17534_17549 = state_17529__$1;
              statearr_17534_17549[2] = inst_17515;
              statearr_17534_17549[1] = 7;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_17530 === 4) {
                var inst_17518 = state_17529[7];
                var inst_17518__$1 = state_17529[2];
                var inst_17519 = inst_17518__$1 == null;
                var state_17529__$1 = function() {
                  var statearr_17535 = state_17529;
                  statearr_17535[7] = inst_17518__$1;
                  return statearr_17535
                }();
                if(cljs.core.truth_(inst_17519)) {
                  var statearr_17536_17550 = state_17529__$1;
                  statearr_17536_17550[1] = 5
                }else {
                  var statearr_17537_17551 = state_17529__$1;
                  statearr_17537_17551[1] = 6
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_17530 === 3) {
                  var inst_17527 = state_17529[2];
                  var state_17529__$1 = state_17529;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17529__$1, inst_17527)
                }else {
                  if(state_val_17530 === 2) {
                    var state_17529__$1 = state_17529;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17529__$1, 4, ch)
                  }else {
                    if(state_val_17530 === 1) {
                      var inst_17515 = init;
                      var state_17529__$1 = function() {
                        var statearr_17538 = state_17529;
                        statearr_17538[8] = inst_17515;
                        return statearr_17538
                      }();
                      var statearr_17539_17552 = state_17529__$1;
                      statearr_17539_17552[2] = null;
                      statearr_17539_17552[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      return null
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__6929__auto__) {
        return function() {
          var state_machine__6930__auto__ = null;
          var state_machine__6930__auto____0 = function() {
            var statearr_17543 = new Array(9);
            statearr_17543[0] = state_machine__6930__auto__;
            statearr_17543[1] = 1;
            return statearr_17543
          };
          var state_machine__6930__auto____1 = function(state_17529) {
            while(true) {
              var ret_value__6931__auto__ = function() {
                try {
                  while(true) {
                    var result__6932__auto__ = switch__6929__auto__.call(null, state_17529);
                    if(cljs.core.keyword_identical_QMARK_.call(null, result__6932__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue
                    }else {
                      return result__6932__auto__
                    }
                    break
                  }
                }catch(e17544) {
                  if(e17544 instanceof Object) {
                    var ex__6933__auto__ = e17544;
                    var statearr_17545_17553 = state_17529;
                    statearr_17545_17553[5] = ex__6933__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17529);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e17544;
                    }else {
                      return null
                    }
                  }
                }
              }();
              if(cljs.core.keyword_identical_QMARK_.call(null, ret_value__6931__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__17554 = state_17529;
                state_17529 = G__17554;
                continue
              }else {
                return ret_value__6931__auto__
              }
              break
            }
          };
          state_machine__6930__auto__ = function(state_17529) {
            switch(arguments.length) {
              case 0:
                return state_machine__6930__auto____0.call(this);
              case 1:
                return state_machine__6930__auto____1.call(this, state_17529)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6930__auto____0;
          state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6930__auto____1;
          return state_machine__6930__auto__
        }()
      }(switch__6929__auto__)
    }();
    var state__7001__auto__ = function() {
      var statearr_17546 = f__7000__auto__.call(null);
      statearr_17546[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6999__auto__;
      return statearr_17546
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7001__auto__)
  });
  return c__6999__auto__
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true)
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6999__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__7000__auto__ = function() {
        var switch__6929__auto__ = function(state_17616) {
          var state_val_17617 = state_17616[1];
          if(state_val_17617 === 1) {
            var inst_17596 = cljs.core.seq.call(null, coll);
            var inst_17597 = inst_17596;
            var state_17616__$1 = function() {
              var statearr_17618 = state_17616;
              statearr_17618[7] = inst_17597;
              return statearr_17618
            }();
            var statearr_17619_17637 = state_17616__$1;
            statearr_17619_17637[2] = null;
            statearr_17619_17637[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_17617 === 2) {
              var inst_17597 = state_17616[7];
              var state_17616__$1 = state_17616;
              if(cljs.core.truth_(inst_17597)) {
                var statearr_17620_17638 = state_17616__$1;
                statearr_17620_17638[1] = 4
              }else {
                var statearr_17621_17639 = state_17616__$1;
                statearr_17621_17639[1] = 5
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_17617 === 3) {
                var inst_17614 = state_17616[2];
                var state_17616__$1 = state_17616;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17616__$1, inst_17614)
              }else {
                if(state_val_17617 === 4) {
                  var inst_17597 = state_17616[7];
                  var inst_17600 = cljs.core.first.call(null, inst_17597);
                  var state_17616__$1 = state_17616;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17616__$1, 7, ch, inst_17600)
                }else {
                  if(state_val_17617 === 5) {
                    var state_17616__$1 = state_17616;
                    if(cljs.core.truth_(close_QMARK_)) {
                      var statearr_17622_17640 = state_17616__$1;
                      statearr_17622_17640[1] = 8
                    }else {
                      var statearr_17623_17641 = state_17616__$1;
                      statearr_17623_17641[1] = 9
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_17617 === 6) {
                      var inst_17612 = state_17616[2];
                      var state_17616__$1 = state_17616;
                      var statearr_17624_17642 = state_17616__$1;
                      statearr_17624_17642[2] = inst_17612;
                      statearr_17624_17642[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_17617 === 7) {
                        var inst_17597 = state_17616[7];
                        var inst_17602 = state_17616[2];
                        var inst_17603 = cljs.core.next.call(null, inst_17597);
                        var inst_17597__$1 = inst_17603;
                        var state_17616__$1 = function() {
                          var statearr_17625 = state_17616;
                          statearr_17625[7] = inst_17597__$1;
                          statearr_17625[8] = inst_17602;
                          return statearr_17625
                        }();
                        var statearr_17626_17643 = state_17616__$1;
                        statearr_17626_17643[2] = null;
                        statearr_17626_17643[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_17617 === 8) {
                          var inst_17607 = cljs.core.async.close_BANG_.call(null, ch);
                          var state_17616__$1 = state_17616;
                          var statearr_17627_17644 = state_17616__$1;
                          statearr_17627_17644[2] = inst_17607;
                          statearr_17627_17644[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_17617 === 9) {
                            var state_17616__$1 = state_17616;
                            var statearr_17628_17645 = state_17616__$1;
                            statearr_17628_17645[2] = null;
                            statearr_17628_17645[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_17617 === 10) {
                              var inst_17610 = state_17616[2];
                              var state_17616__$1 = state_17616;
                              var statearr_17629_17646 = state_17616__$1;
                              statearr_17629_17646[2] = inst_17610;
                              statearr_17629_17646[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              return null
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6929__auto__) {
          return function() {
            var state_machine__6930__auto__ = null;
            var state_machine__6930__auto____0 = function() {
              var statearr_17633 = new Array(9);
              statearr_17633[0] = state_machine__6930__auto__;
              statearr_17633[1] = 1;
              return statearr_17633
            };
            var state_machine__6930__auto____1 = function(state_17616) {
              while(true) {
                var ret_value__6931__auto__ = function() {
                  try {
                    while(true) {
                      var result__6932__auto__ = switch__6929__auto__.call(null, state_17616);
                      if(cljs.core.keyword_identical_QMARK_.call(null, result__6932__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue
                      }else {
                        return result__6932__auto__
                      }
                      break
                    }
                  }catch(e17634) {
                    if(e17634 instanceof Object) {
                      var ex__6933__auto__ = e17634;
                      var statearr_17635_17647 = state_17616;
                      statearr_17635_17647[5] = ex__6933__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17616);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e17634;
                      }else {
                        return null
                      }
                    }
                  }
                }();
                if(cljs.core.keyword_identical_QMARK_.call(null, ret_value__6931__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__17648 = state_17616;
                  state_17616 = G__17648;
                  continue
                }else {
                  return ret_value__6931__auto__
                }
                break
              }
            };
            state_machine__6930__auto__ = function(state_17616) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6930__auto____0.call(this);
                case 1:
                  return state_machine__6930__auto____1.call(this, state_17616)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6930__auto____0;
            state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6930__auto____1;
            return state_machine__6930__auto__
          }()
        }(switch__6929__auto__)
      }();
      var state__7001__auto__ = function() {
        var statearr_17636 = f__7000__auto__.call(null);
        statearr_17636[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6999__auto__;
        return statearr_17636
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7001__auto__)
    });
    return c__6999__auto__
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch
};
cljs.core.async.Mux = {};
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if(function() {
    var and__3941__auto__ = _;
    if(and__3941__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_)
  }else {
    var x__3494__auto__ = _ == null ? null : _;
    return function() {
      var or__3943__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _)
  }
};
cljs.core.async.Mult = {};
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_)
  }else {
    var x__3494__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_)
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch)
  }else {
    var x__3494__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch)
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m)
  }else {
    var x__3494__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m)
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if(typeof cljs.core.async.t17872 !== "undefined") {
    }else {
      goog.provide("cljs.core.async.t17872");
      cljs.core.async.t17872 = function(cs, ch, mult, meta17873) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta17873 = meta17873;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      cljs.core.async.t17872.cljs$lang$type = true;
      cljs.core.async.t17872.cljs$lang$ctorStr = "cljs.core.async/t17872";
      cljs.core.async.t17872.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
          return cljs.core._write.call(null, writer__3436__auto__, "cljs.core.async/t17872")
        }
      }(cs);
      cljs.core.async.t17872.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t17872.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null
        }
      }(cs);
      cljs.core.async.t17872.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null
        }
      }(cs);
      cljs.core.async.t17872.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null
        }
      }(cs);
      cljs.core.async.t17872.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t17872.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          return self__.ch
        }
      }(cs);
      cljs.core.async.t17872.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_17874) {
          var self__ = this;
          return self__.meta17873
        }
      }(cs);
      cljs.core.async.t17872.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_17874, meta17873__$1) {
          var self__ = this;
          return new cljs.core.async.t17872(self__.cs, self__.ch, self__.mult, meta17873__$1)
        }
      }(cs);
      cljs.core.async.__GT_t17872 = function(cs) {
        return function __GT_t17872(cs__$1, ch__$1, mult__$1, meta17873) {
          return new cljs.core.async.t17872(cs__$1, ch__$1, mult__$1, meta17873)
        }
      }(cs)
    }
    return new cljs.core.async.t17872(cs, ch, mult, null)
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function() {
      if(cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true)
      }else {
        return null
      }
    }
  }(cs, m, dchan, dctr);
  var c__6999__auto___18095 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__7000__auto__ = function() {
      var switch__6929__auto__ = function(state_18009) {
        var state_val_18010 = state_18009[1];
        if(state_val_18010 === 32) {
          var inst_17877 = state_18009[7];
          var inst_17953 = state_18009[8];
          var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_18009, 31, Object, null, 30);
          var inst_17960 = cljs.core.async.put_BANG_.call(null, inst_17953, inst_17877, done);
          var state_18009__$1 = state_18009;
          var statearr_18011_18096 = state_18009__$1;
          statearr_18011_18096[2] = inst_17960;
          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18009__$1);
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_18010 === 1) {
            var state_18009__$1 = state_18009;
            var statearr_18012_18097 = state_18009__$1;
            statearr_18012_18097[2] = null;
            statearr_18012_18097[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_18010 === 33) {
              var inst_17966 = state_18009[9];
              var inst_17968 = cljs.core.chunked_seq_QMARK_.call(null, inst_17966);
              var state_18009__$1 = state_18009;
              if(inst_17968) {
                var statearr_18013_18098 = state_18009__$1;
                statearr_18013_18098[1] = 36
              }else {
                var statearr_18014_18099 = state_18009__$1;
                statearr_18014_18099[1] = 37
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_18010 === 2) {
                var state_18009__$1 = state_18009;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18009__$1, 4, ch)
              }else {
                if(state_val_18010 === 34) {
                  var state_18009__$1 = state_18009;
                  var statearr_18015_18100 = state_18009__$1;
                  statearr_18015_18100[2] = null;
                  statearr_18015_18100[1] = 35;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_18010 === 3) {
                    var inst_18007 = state_18009[2];
                    var state_18009__$1 = state_18009;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18009__$1, inst_18007)
                  }else {
                    if(state_val_18010 === 35) {
                      var inst_17991 = state_18009[2];
                      var state_18009__$1 = state_18009;
                      var statearr_18016_18101 = state_18009__$1;
                      statearr_18016_18101[2] = inst_17991;
                      statearr_18016_18101[1] = 29;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_18010 === 4) {
                        var inst_17877 = state_18009[7];
                        var inst_17877__$1 = state_18009[2];
                        var inst_17878 = inst_17877__$1 == null;
                        var state_18009__$1 = function() {
                          var statearr_18017 = state_18009;
                          statearr_18017[7] = inst_17877__$1;
                          return statearr_18017
                        }();
                        if(cljs.core.truth_(inst_17878)) {
                          var statearr_18018_18102 = state_18009__$1;
                          statearr_18018_18102[1] = 5
                        }else {
                          var statearr_18019_18103 = state_18009__$1;
                          statearr_18019_18103[1] = 6
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_18010 === 36) {
                          var inst_17966 = state_18009[9];
                          var inst_17970 = cljs.core.chunk_first.call(null, inst_17966);
                          var inst_17971 = cljs.core.chunk_rest.call(null, inst_17966);
                          var inst_17972 = cljs.core.count.call(null, inst_17970);
                          var inst_17945 = inst_17971;
                          var inst_17946 = inst_17970;
                          var inst_17947 = inst_17972;
                          var inst_17948 = 0;
                          var state_18009__$1 = function() {
                            var statearr_18020 = state_18009;
                            statearr_18020[10] = inst_17946;
                            statearr_18020[11] = inst_17947;
                            statearr_18020[12] = inst_17948;
                            statearr_18020[13] = inst_17945;
                            return statearr_18020
                          }();
                          var statearr_18021_18104 = state_18009__$1;
                          statearr_18021_18104[2] = null;
                          statearr_18021_18104[1] = 25;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_18010 === 5) {
                            var inst_17884 = cljs.core.deref.call(null, cs);
                            var inst_17885 = cljs.core.seq.call(null, inst_17884);
                            var inst_17886 = inst_17885;
                            var inst_17887 = null;
                            var inst_17888 = 0;
                            var inst_17889 = 0;
                            var state_18009__$1 = function() {
                              var statearr_18022 = state_18009;
                              statearr_18022[14] = inst_17889;
                              statearr_18022[15] = inst_17888;
                              statearr_18022[16] = inst_17887;
                              statearr_18022[17] = inst_17886;
                              return statearr_18022
                            }();
                            var statearr_18023_18105 = state_18009__$1;
                            statearr_18023_18105[2] = null;
                            statearr_18023_18105[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_18010 === 37) {
                              var inst_17966 = state_18009[9];
                              var inst_17975 = cljs.core.first.call(null, inst_17966);
                              var state_18009__$1 = function() {
                                var statearr_18024 = state_18009;
                                statearr_18024[18] = inst_17975;
                                return statearr_18024
                              }();
                              var statearr_18025_18106 = state_18009__$1;
                              statearr_18025_18106[2] = null;
                              statearr_18025_18106[1] = 41;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_18010 === 6) {
                                var inst_17937 = state_18009[19];
                                var inst_17936 = cljs.core.deref.call(null, cs);
                                var inst_17937__$1 = cljs.core.keys.call(null, inst_17936);
                                var inst_17938 = cljs.core.count.call(null, inst_17937__$1);
                                var inst_17939 = cljs.core.reset_BANG_.call(null, dctr, inst_17938);
                                var inst_17944 = cljs.core.seq.call(null, inst_17937__$1);
                                var inst_17945 = inst_17944;
                                var inst_17946 = null;
                                var inst_17947 = 0;
                                var inst_17948 = 0;
                                var state_18009__$1 = function() {
                                  var statearr_18026 = state_18009;
                                  statearr_18026[20] = inst_17939;
                                  statearr_18026[10] = inst_17946;
                                  statearr_18026[11] = inst_17947;
                                  statearr_18026[12] = inst_17948;
                                  statearr_18026[13] = inst_17945;
                                  statearr_18026[19] = inst_17937__$1;
                                  return statearr_18026
                                }();
                                var statearr_18027_18107 = state_18009__$1;
                                statearr_18027_18107[2] = null;
                                statearr_18027_18107[1] = 25;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_18010 === 38) {
                                  var inst_17988 = state_18009[2];
                                  var state_18009__$1 = state_18009;
                                  var statearr_18028_18108 = state_18009__$1;
                                  statearr_18028_18108[2] = inst_17988;
                                  statearr_18028_18108[1] = 35;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_18010 === 7) {
                                    var inst_18005 = state_18009[2];
                                    var state_18009__$1 = state_18009;
                                    var statearr_18029_18109 = state_18009__$1;
                                    statearr_18029_18109[2] = inst_18005;
                                    statearr_18029_18109[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_18010 === 39) {
                                      var inst_17966 = state_18009[9];
                                      var inst_17984 = state_18009[2];
                                      var inst_17985 = cljs.core.next.call(null, inst_17966);
                                      var inst_17945 = inst_17985;
                                      var inst_17946 = null;
                                      var inst_17947 = 0;
                                      var inst_17948 = 0;
                                      var state_18009__$1 = function() {
                                        var statearr_18030 = state_18009;
                                        statearr_18030[10] = inst_17946;
                                        statearr_18030[11] = inst_17947;
                                        statearr_18030[12] = inst_17948;
                                        statearr_18030[13] = inst_17945;
                                        statearr_18030[21] = inst_17984;
                                        return statearr_18030
                                      }();
                                      var statearr_18031_18110 = state_18009__$1;
                                      statearr_18031_18110[2] = null;
                                      statearr_18031_18110[1] = 25;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_18010 === 8) {
                                        var inst_17889 = state_18009[14];
                                        var inst_17888 = state_18009[15];
                                        var inst_17891 = inst_17889 < inst_17888;
                                        var inst_17892 = inst_17891;
                                        var state_18009__$1 = state_18009;
                                        if(cljs.core.truth_(inst_17892)) {
                                          var statearr_18032_18111 = state_18009__$1;
                                          statearr_18032_18111[1] = 10
                                        }else {
                                          var statearr_18033_18112 = state_18009__$1;
                                          statearr_18033_18112[1] = 11
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_18010 === 40) {
                                          var inst_17975 = state_18009[18];
                                          var inst_17976 = state_18009[2];
                                          var inst_17977 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var inst_17978 = cljs.core.async.untap_STAR_.call(null, m, inst_17975);
                                          var state_18009__$1 = function() {
                                            var statearr_18034 = state_18009;
                                            statearr_18034[22] = inst_17977;
                                            statearr_18034[23] = inst_17976;
                                            return statearr_18034
                                          }();
                                          var statearr_18035_18113 = state_18009__$1;
                                          statearr_18035_18113[2] = inst_17978;
                                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18009__$1);
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_18010 === 9) {
                                            var inst_17934 = state_18009[2];
                                            var state_18009__$1 = state_18009;
                                            var statearr_18036_18114 = state_18009__$1;
                                            statearr_18036_18114[2] = inst_17934;
                                            statearr_18036_18114[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_18010 === 41) {
                                              var inst_17877 = state_18009[7];
                                              var inst_17975 = state_18009[18];
                                              var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_18009, 40, Object, null, 39);
                                              var inst_17982 = cljs.core.async.put_BANG_.call(null, inst_17975, inst_17877, done);
                                              var state_18009__$1 = state_18009;
                                              var statearr_18037_18115 = state_18009__$1;
                                              statearr_18037_18115[2] = inst_17982;
                                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18009__$1);
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_18010 === 10) {
                                                var inst_17889 = state_18009[14];
                                                var inst_17887 = state_18009[16];
                                                var inst_17895 = cljs.core._nth.call(null, inst_17887, inst_17889);
                                                var inst_17896 = cljs.core.nth.call(null, inst_17895, 0, null);
                                                var inst_17897 = cljs.core.nth.call(null, inst_17895, 1, null);
                                                var state_18009__$1 = function() {
                                                  var statearr_18038 = state_18009;
                                                  statearr_18038[24] = inst_17896;
                                                  return statearr_18038
                                                }();
                                                if(cljs.core.truth_(inst_17897)) {
                                                  var statearr_18039_18116 = state_18009__$1;
                                                  statearr_18039_18116[1] = 13
                                                }else {
                                                  var statearr_18040_18117 = state_18009__$1;
                                                  statearr_18040_18117[1] = 14
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                if(state_val_18010 === 42) {
                                                  var state_18009__$1 = state_18009;
                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18009__$1, 45, dchan)
                                                }else {
                                                  if(state_val_18010 === 11) {
                                                    var inst_17886 = state_18009[17];
                                                    var inst_17906 = state_18009[25];
                                                    var inst_17906__$1 = cljs.core.seq.call(null, inst_17886);
                                                    var state_18009__$1 = function() {
                                                      var statearr_18041 = state_18009;
                                                      statearr_18041[25] = inst_17906__$1;
                                                      return statearr_18041
                                                    }();
                                                    if(inst_17906__$1) {
                                                      var statearr_18042_18118 = state_18009__$1;
                                                      statearr_18042_18118[1] = 16
                                                    }else {
                                                      var statearr_18043_18119 = state_18009__$1;
                                                      statearr_18043_18119[1] = 17
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_18010 === 43) {
                                                      var state_18009__$1 = state_18009;
                                                      var statearr_18044_18120 = state_18009__$1;
                                                      statearr_18044_18120[2] = null;
                                                      statearr_18044_18120[1] = 44;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      if(state_val_18010 === 12) {
                                                        var inst_17932 = state_18009[2];
                                                        var state_18009__$1 = state_18009;
                                                        var statearr_18045_18121 = state_18009__$1;
                                                        statearr_18045_18121[2] = inst_17932;
                                                        statearr_18045_18121[1] = 9;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                      }else {
                                                        if(state_val_18010 === 44) {
                                                          var inst_18002 = state_18009[2];
                                                          var state_18009__$1 = function() {
                                                            var statearr_18046 = state_18009;
                                                            statearr_18046[26] = inst_18002;
                                                            return statearr_18046
                                                          }();
                                                          var statearr_18047_18122 = state_18009__$1;
                                                          statearr_18047_18122[2] = null;
                                                          statearr_18047_18122[1] = 2;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                        }else {
                                                          if(state_val_18010 === 13) {
                                                            var inst_17896 = state_18009[24];
                                                            var inst_17899 = cljs.core.async.close_BANG_.call(null, inst_17896);
                                                            var state_18009__$1 = state_18009;
                                                            var statearr_18048_18123 = state_18009__$1;
                                                            statearr_18048_18123[2] = inst_17899;
                                                            statearr_18048_18123[1] = 15;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                          }else {
                                                            if(state_val_18010 === 45) {
                                                              var inst_17999 = state_18009[2];
                                                              var state_18009__$1 = state_18009;
                                                              var statearr_18052_18124 = state_18009__$1;
                                                              statearr_18052_18124[2] = inst_17999;
                                                              statearr_18052_18124[1] = 44;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }else {
                                                              if(state_val_18010 === 14) {
                                                                var state_18009__$1 = state_18009;
                                                                var statearr_18053_18125 = state_18009__$1;
                                                                statearr_18053_18125[2] = null;
                                                                statearr_18053_18125[1] = 15;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                              }else {
                                                                if(state_val_18010 === 15) {
                                                                  var inst_17889 = state_18009[14];
                                                                  var inst_17888 = state_18009[15];
                                                                  var inst_17887 = state_18009[16];
                                                                  var inst_17886 = state_18009[17];
                                                                  var inst_17902 = state_18009[2];
                                                                  var inst_17903 = inst_17889 + 1;
                                                                  var tmp18049 = inst_17888;
                                                                  var tmp18050 = inst_17887;
                                                                  var tmp18051 = inst_17886;
                                                                  var inst_17886__$1 = tmp18051;
                                                                  var inst_17887__$1 = tmp18050;
                                                                  var inst_17888__$1 = tmp18049;
                                                                  var inst_17889__$1 = inst_17903;
                                                                  var state_18009__$1 = function() {
                                                                    var statearr_18054 = state_18009;
                                                                    statearr_18054[14] = inst_17889__$1;
                                                                    statearr_18054[15] = inst_17888__$1;
                                                                    statearr_18054[16] = inst_17887__$1;
                                                                    statearr_18054[17] = inst_17886__$1;
                                                                    statearr_18054[27] = inst_17902;
                                                                    return statearr_18054
                                                                  }();
                                                                  var statearr_18055_18126 = state_18009__$1;
                                                                  statearr_18055_18126[2] = null;
                                                                  statearr_18055_18126[1] = 8;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                }else {
                                                                  if(state_val_18010 === 16) {
                                                                    var inst_17906 = state_18009[25];
                                                                    var inst_17908 = cljs.core.chunked_seq_QMARK_.call(null, inst_17906);
                                                                    var state_18009__$1 = state_18009;
                                                                    if(inst_17908) {
                                                                      var statearr_18056_18127 = state_18009__$1;
                                                                      statearr_18056_18127[1] = 19
                                                                    }else {
                                                                      var statearr_18057_18128 = state_18009__$1;
                                                                      statearr_18057_18128[1] = 20
                                                                    }
                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                  }else {
                                                                    if(state_val_18010 === 17) {
                                                                      var state_18009__$1 = state_18009;
                                                                      var statearr_18058_18129 = state_18009__$1;
                                                                      statearr_18058_18129[2] = null;
                                                                      statearr_18058_18129[1] = 18;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                    }else {
                                                                      if(state_val_18010 === 18) {
                                                                        var inst_17930 = state_18009[2];
                                                                        var state_18009__$1 = state_18009;
                                                                        var statearr_18059_18130 = state_18009__$1;
                                                                        statearr_18059_18130[2] = inst_17930;
                                                                        statearr_18059_18130[1] = 12;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                      }else {
                                                                        if(state_val_18010 === 19) {
                                                                          var inst_17906 = state_18009[25];
                                                                          var inst_17910 = cljs.core.chunk_first.call(null, inst_17906);
                                                                          var inst_17911 = cljs.core.chunk_rest.call(null, inst_17906);
                                                                          var inst_17912 = cljs.core.count.call(null, inst_17910);
                                                                          var inst_17886 = inst_17911;
                                                                          var inst_17887 = inst_17910;
                                                                          var inst_17888 = inst_17912;
                                                                          var inst_17889 = 0;
                                                                          var state_18009__$1 = function() {
                                                                            var statearr_18060 = state_18009;
                                                                            statearr_18060[14] = inst_17889;
                                                                            statearr_18060[15] = inst_17888;
                                                                            statearr_18060[16] = inst_17887;
                                                                            statearr_18060[17] = inst_17886;
                                                                            return statearr_18060
                                                                          }();
                                                                          var statearr_18061_18131 = state_18009__$1;
                                                                          statearr_18061_18131[2] = null;
                                                                          statearr_18061_18131[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                        }else {
                                                                          if(state_val_18010 === 20) {
                                                                            var inst_17906 = state_18009[25];
                                                                            var inst_17916 = cljs.core.first.call(null, inst_17906);
                                                                            var inst_17917 = cljs.core.nth.call(null, inst_17916, 0, null);
                                                                            var inst_17918 = cljs.core.nth.call(null, inst_17916, 1, null);
                                                                            var state_18009__$1 = function() {
                                                                              var statearr_18062 = state_18009;
                                                                              statearr_18062[28] = inst_17917;
                                                                              return statearr_18062
                                                                            }();
                                                                            if(cljs.core.truth_(inst_17918)) {
                                                                              var statearr_18063_18132 = state_18009__$1;
                                                                              statearr_18063_18132[1] = 22
                                                                            }else {
                                                                              var statearr_18064_18133 = state_18009__$1;
                                                                              statearr_18064_18133[1] = 23
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                          }else {
                                                                            if(state_val_18010 === 21) {
                                                                              var inst_17927 = state_18009[2];
                                                                              var state_18009__$1 = state_18009;
                                                                              var statearr_18065_18134 = state_18009__$1;
                                                                              statearr_18065_18134[2] = inst_17927;
                                                                              statearr_18065_18134[1] = 18;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                            }else {
                                                                              if(state_val_18010 === 22) {
                                                                                var inst_17917 = state_18009[28];
                                                                                var inst_17920 = cljs.core.async.close_BANG_.call(null, inst_17917);
                                                                                var state_18009__$1 = state_18009;
                                                                                var statearr_18066_18135 = state_18009__$1;
                                                                                statearr_18066_18135[2] = inst_17920;
                                                                                statearr_18066_18135[1] = 24;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                              }else {
                                                                                if(state_val_18010 === 23) {
                                                                                  var state_18009__$1 = state_18009;
                                                                                  var statearr_18067_18136 = state_18009__$1;
                                                                                  statearr_18067_18136[2] = null;
                                                                                  statearr_18067_18136[1] = 24;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                }else {
                                                                                  if(state_val_18010 === 24) {
                                                                                    var inst_17906 = state_18009[25];
                                                                                    var inst_17923 = state_18009[2];
                                                                                    var inst_17924 = cljs.core.next.call(null, inst_17906);
                                                                                    var inst_17886 = inst_17924;
                                                                                    var inst_17887 = null;
                                                                                    var inst_17888 = 0;
                                                                                    var inst_17889 = 0;
                                                                                    var state_18009__$1 = function() {
                                                                                      var statearr_18068 = state_18009;
                                                                                      statearr_18068[29] = inst_17923;
                                                                                      statearr_18068[14] = inst_17889;
                                                                                      statearr_18068[15] = inst_17888;
                                                                                      statearr_18068[16] = inst_17887;
                                                                                      statearr_18068[17] = inst_17886;
                                                                                      return statearr_18068
                                                                                    }();
                                                                                    var statearr_18069_18137 = state_18009__$1;
                                                                                    statearr_18069_18137[2] = null;
                                                                                    statearr_18069_18137[1] = 8;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                  }else {
                                                                                    if(state_val_18010 === 25) {
                                                                                      var inst_17947 = state_18009[11];
                                                                                      var inst_17948 = state_18009[12];
                                                                                      var inst_17950 = inst_17948 < inst_17947;
                                                                                      var inst_17951 = inst_17950;
                                                                                      var state_18009__$1 = state_18009;
                                                                                      if(cljs.core.truth_(inst_17951)) {
                                                                                        var statearr_18070_18138 = state_18009__$1;
                                                                                        statearr_18070_18138[1] = 27
                                                                                      }else {
                                                                                        var statearr_18071_18139 = state_18009__$1;
                                                                                        statearr_18071_18139[1] = 28
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                    }else {
                                                                                      if(state_val_18010 === 26) {
                                                                                        var inst_17937 = state_18009[19];
                                                                                        var inst_17995 = state_18009[2];
                                                                                        var inst_17996 = cljs.core.seq.call(null, inst_17937);
                                                                                        var state_18009__$1 = function() {
                                                                                          var statearr_18072 = state_18009;
                                                                                          statearr_18072[30] = inst_17995;
                                                                                          return statearr_18072
                                                                                        }();
                                                                                        if(inst_17996) {
                                                                                          var statearr_18073_18140 = state_18009__$1;
                                                                                          statearr_18073_18140[1] = 42
                                                                                        }else {
                                                                                          var statearr_18074_18141 = state_18009__$1;
                                                                                          statearr_18074_18141[1] = 43
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                      }else {
                                                                                        if(state_val_18010 === 27) {
                                                                                          var inst_17946 = state_18009[10];
                                                                                          var inst_17948 = state_18009[12];
                                                                                          var inst_17953 = cljs.core._nth.call(null, inst_17946, inst_17948);
                                                                                          var state_18009__$1 = function() {
                                                                                            var statearr_18075 = state_18009;
                                                                                            statearr_18075[8] = inst_17953;
                                                                                            return statearr_18075
                                                                                          }();
                                                                                          var statearr_18076_18142 = state_18009__$1;
                                                                                          statearr_18076_18142[2] = null;
                                                                                          statearr_18076_18142[1] = 32;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                        }else {
                                                                                          if(state_val_18010 === 28) {
                                                                                            var inst_17966 = state_18009[9];
                                                                                            var inst_17945 = state_18009[13];
                                                                                            var inst_17966__$1 = cljs.core.seq.call(null, inst_17945);
                                                                                            var state_18009__$1 = function() {
                                                                                              var statearr_18080 = state_18009;
                                                                                              statearr_18080[9] = inst_17966__$1;
                                                                                              return statearr_18080
                                                                                            }();
                                                                                            if(inst_17966__$1) {
                                                                                              var statearr_18081_18143 = state_18009__$1;
                                                                                              statearr_18081_18143[1] = 33
                                                                                            }else {
                                                                                              var statearr_18082_18144 = state_18009__$1;
                                                                                              statearr_18082_18144[1] = 34
                                                                                            }
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                          }else {
                                                                                            if(state_val_18010 === 29) {
                                                                                              var inst_17993 = state_18009[2];
                                                                                              var state_18009__$1 = state_18009;
                                                                                              var statearr_18083_18145 = state_18009__$1;
                                                                                              statearr_18083_18145[2] = inst_17993;
                                                                                              statearr_18083_18145[1] = 26;
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                            }else {
                                                                                              if(state_val_18010 === 30) {
                                                                                                var inst_17946 = state_18009[10];
                                                                                                var inst_17947 = state_18009[11];
                                                                                                var inst_17948 = state_18009[12];
                                                                                                var inst_17945 = state_18009[13];
                                                                                                var inst_17962 = state_18009[2];
                                                                                                var inst_17963 = inst_17948 + 1;
                                                                                                var tmp18077 = inst_17946;
                                                                                                var tmp18078 = inst_17947;
                                                                                                var tmp18079 = inst_17945;
                                                                                                var inst_17945__$1 = tmp18079;
                                                                                                var inst_17946__$1 = tmp18077;
                                                                                                var inst_17947__$1 = tmp18078;
                                                                                                var inst_17948__$1 = inst_17963;
                                                                                                var state_18009__$1 = function() {
                                                                                                  var statearr_18084 = state_18009;
                                                                                                  statearr_18084[31] = inst_17962;
                                                                                                  statearr_18084[10] = inst_17946__$1;
                                                                                                  statearr_18084[11] = inst_17947__$1;
                                                                                                  statearr_18084[12] = inst_17948__$1;
                                                                                                  statearr_18084[13] = inst_17945__$1;
                                                                                                  return statearr_18084
                                                                                                }();
                                                                                                var statearr_18085_18146 = state_18009__$1;
                                                                                                statearr_18085_18146[2] = null;
                                                                                                statearr_18085_18146[1] = 25;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                              }else {
                                                                                                if(state_val_18010 === 31) {
                                                                                                  var inst_17953 = state_18009[8];
                                                                                                  var inst_17954 = state_18009[2];
                                                                                                  var inst_17955 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                                                                                  var inst_17956 = cljs.core.async.untap_STAR_.call(null, m, inst_17953);
                                                                                                  var state_18009__$1 = function() {
                                                                                                    var statearr_18086 = state_18009;
                                                                                                    statearr_18086[32] = inst_17955;
                                                                                                    statearr_18086[33] = inst_17954;
                                                                                                    return statearr_18086
                                                                                                  }();
                                                                                                  var statearr_18087_18147 = state_18009__$1;
                                                                                                  statearr_18087_18147[2] = inst_17956;
                                                                                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18009__$1);
                                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                                }else {
                                                                                                  return null
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__6929__auto__) {
        return function() {
          var state_machine__6930__auto__ = null;
          var state_machine__6930__auto____0 = function() {
            var statearr_18091 = new Array(34);
            statearr_18091[0] = state_machine__6930__auto__;
            statearr_18091[1] = 1;
            return statearr_18091
          };
          var state_machine__6930__auto____1 = function(state_18009) {
            while(true) {
              var ret_value__6931__auto__ = function() {
                try {
                  while(true) {
                    var result__6932__auto__ = switch__6929__auto__.call(null, state_18009);
                    if(cljs.core.keyword_identical_QMARK_.call(null, result__6932__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue
                    }else {
                      return result__6932__auto__
                    }
                    break
                  }
                }catch(e18092) {
                  if(e18092 instanceof Object) {
                    var ex__6933__auto__ = e18092;
                    var statearr_18093_18148 = state_18009;
                    statearr_18093_18148[5] = ex__6933__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18009);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e18092;
                    }else {
                      return null
                    }
                  }
                }
              }();
              if(cljs.core.keyword_identical_QMARK_.call(null, ret_value__6931__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__18149 = state_18009;
                state_18009 = G__18149;
                continue
              }else {
                return ret_value__6931__auto__
              }
              break
            }
          };
          state_machine__6930__auto__ = function(state_18009) {
            switch(arguments.length) {
              case 0:
                return state_machine__6930__auto____0.call(this);
              case 1:
                return state_machine__6930__auto____1.call(this, state_18009)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6930__auto____0;
          state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6930__auto____1;
          return state_machine__6930__auto__
        }()
      }(switch__6929__auto__)
    }();
    var state__7001__auto__ = function() {
      var statearr_18094 = f__7000__auto__.call(null);
      statearr_18094[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6999__auto___18095;
      return statearr_18094
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7001__auto__)
  });
  return m
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true)
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch)
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult)
};
cljs.core.async.Mix = {};
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch)
  }else {
    var x__3494__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch)
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch)
  }else {
    var x__3494__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch)
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m)
  }else {
    var x__3494__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m)
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map)
  }else {
    var x__3494__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map)
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode)
  }else {
    var x__3494__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode)
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = cljs.core.PersistentHashSet.fromArray([new cljs.core.Keyword(null, "pause", "pause", 1120344424), null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), null], true);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", 1017440337));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true)
    }
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if(cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c)
          }else {
            return ret
          }
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs)
    }
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", 1017440337), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", 1120344424), chs);
      return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "solos", "solos", 1123523302), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), chs), new cljs.core.Keyword(null, "reads", "reads", 1122290959), cljs.core.conj.call(null, function() {
        var and__3941__auto__ = cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", 1120344424));
        if(and__3941__auto__) {
          return!cljs.core.empty_QMARK_.call(null, solos)
        }else {
          return and__3941__auto__
        }
      }() ? cljs.core.vec.call(null, solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], true)
    }
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if(typeof cljs.core.async.t18274 !== "undefined") {
    }else {
      goog.provide("cljs.core.async.t18274");
      cljs.core.async.t18274 = function(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, meta18275) {
        this.pick = pick;
        this.out = out;
        this.attrs = attrs;
        this.cs = cs;
        this.calc_state = calc_state;
        this.solo_modes = solo_modes;
        this.mix = mix;
        this.changed = changed;
        this.change = change;
        this.solo_mode = solo_mode;
        this.meta18275 = meta18275;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      cljs.core.async.t18274.cljs$lang$type = true;
      cljs.core.async.t18274.cljs$lang$ctorStr = "cljs.core.async/t18274";
      cljs.core.async.t18274.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
          return cljs.core._write.call(null, writer__3436__auto__, "cljs.core.async/t18274")
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18274.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t18274.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18274.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18274.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18274.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18274.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          if(cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          }else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", -1162732933, null), new cljs.core.Symbol(null, "mode", "mode", -1637174436, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18274.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t18274.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          return self__.out
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18274.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_18276) {
          var self__ = this;
          return self__.meta18275
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18274.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_18276, meta18275__$1) {
          var self__ = this;
          return new cljs.core.async.t18274(self__.pick, self__.out, self__.attrs, self__.cs, self__.calc_state, self__.solo_modes, self__.mix, self__.changed, self__.change, self__.solo_mode, meta18275__$1)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t18274 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t18274(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta18275) {
          return new cljs.core.async.t18274(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta18275)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state)
    }
    return new cljs.core.async.t18274(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, null)
  }();
  var c__6999__auto___18398 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__7000__auto__ = function() {
      var switch__6929__auto__ = function(state_18347) {
        var state_val_18348 = state_18347[1];
        if(state_val_18348 === 1) {
          var inst_18280 = state_18347[7];
          var inst_18280__$1 = calc_state.call(null);
          var inst_18281 = cljs.core.seq_QMARK_.call(null, inst_18280__$1);
          var state_18347__$1 = function() {
            var statearr_18349 = state_18347;
            statearr_18349[7] = inst_18280__$1;
            return statearr_18349
          }();
          if(inst_18281) {
            var statearr_18350_18399 = state_18347__$1;
            statearr_18350_18399[1] = 2
          }else {
            var statearr_18351_18400 = state_18347__$1;
            statearr_18351_18400[1] = 3
          }
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_18348 === 2) {
            var inst_18280 = state_18347[7];
            var inst_18283 = cljs.core.apply.call(null, cljs.core.hash_map, inst_18280);
            var state_18347__$1 = state_18347;
            var statearr_18352_18401 = state_18347__$1;
            statearr_18352_18401[2] = inst_18283;
            statearr_18352_18401[1] = 4;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_18348 === 3) {
              var inst_18280 = state_18347[7];
              var state_18347__$1 = state_18347;
              var statearr_18353_18402 = state_18347__$1;
              statearr_18353_18402[2] = inst_18280;
              statearr_18353_18402[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_18348 === 4) {
                var inst_18280 = state_18347[7];
                var inst_18286 = state_18347[2];
                var inst_18287 = cljs.core.get.call(null, inst_18286, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                var inst_18288 = cljs.core.get.call(null, inst_18286, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                var inst_18289 = cljs.core.get.call(null, inst_18286, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                var inst_18290 = inst_18280;
                var state_18347__$1 = function() {
                  var statearr_18354 = state_18347;
                  statearr_18354[8] = inst_18287;
                  statearr_18354[9] = inst_18289;
                  statearr_18354[10] = inst_18288;
                  statearr_18354[11] = inst_18290;
                  return statearr_18354
                }();
                var statearr_18355_18403 = state_18347__$1;
                statearr_18355_18403[2] = null;
                statearr_18355_18403[1] = 5;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_18348 === 5) {
                  var inst_18290 = state_18347[11];
                  var inst_18293 = cljs.core.seq_QMARK_.call(null, inst_18290);
                  var state_18347__$1 = state_18347;
                  if(inst_18293) {
                    var statearr_18356_18404 = state_18347__$1;
                    statearr_18356_18404[1] = 7
                  }else {
                    var statearr_18357_18405 = state_18347__$1;
                    statearr_18357_18405[1] = 8
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_18348 === 6) {
                    var inst_18345 = state_18347[2];
                    var state_18347__$1 = state_18347;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18347__$1, inst_18345)
                  }else {
                    if(state_val_18348 === 7) {
                      var inst_18290 = state_18347[11];
                      var inst_18295 = cljs.core.apply.call(null, cljs.core.hash_map, inst_18290);
                      var state_18347__$1 = state_18347;
                      var statearr_18358_18406 = state_18347__$1;
                      statearr_18358_18406[2] = inst_18295;
                      statearr_18358_18406[1] = 9;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_18348 === 8) {
                        var inst_18290 = state_18347[11];
                        var state_18347__$1 = state_18347;
                        var statearr_18359_18407 = state_18347__$1;
                        statearr_18359_18407[2] = inst_18290;
                        statearr_18359_18407[1] = 9;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_18348 === 9) {
                          var inst_18298 = state_18347[12];
                          var inst_18298__$1 = state_18347[2];
                          var inst_18299 = cljs.core.get.call(null, inst_18298__$1, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                          var inst_18300 = cljs.core.get.call(null, inst_18298__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                          var inst_18301 = cljs.core.get.call(null, inst_18298__$1, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                          var state_18347__$1 = function() {
                            var statearr_18360 = state_18347;
                            statearr_18360[12] = inst_18298__$1;
                            statearr_18360[13] = inst_18301;
                            statearr_18360[14] = inst_18300;
                            return statearr_18360
                          }();
                          return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_18347__$1, 10, inst_18299)
                        }else {
                          if(state_val_18348 === 10) {
                            var inst_18307 = state_18347[15];
                            var inst_18305 = state_18347[16];
                            var inst_18304 = state_18347[2];
                            var inst_18305__$1 = cljs.core.nth.call(null, inst_18304, 0, null);
                            var inst_18306 = cljs.core.nth.call(null, inst_18304, 1, null);
                            var inst_18307__$1 = inst_18305__$1 == null;
                            var state_18347__$1 = function() {
                              var statearr_18361 = state_18347;
                              statearr_18361[15] = inst_18307__$1;
                              statearr_18361[17] = inst_18306;
                              statearr_18361[16] = inst_18305__$1;
                              return statearr_18361
                            }();
                            if(cljs.core.truth_(inst_18307__$1)) {
                              var statearr_18362_18408 = state_18347__$1;
                              statearr_18362_18408[1] = 11
                            }else {
                              var statearr_18363_18409 = state_18347__$1;
                              statearr_18363_18409[1] = 12
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_18348 === 11) {
                              var inst_18307 = state_18347[15];
                              var state_18347__$1 = state_18347;
                              var statearr_18364_18410 = state_18347__$1;
                              statearr_18364_18410[2] = inst_18307;
                              statearr_18364_18410[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_18348 === 12) {
                                var inst_18306 = state_18347[17];
                                var inst_18310 = cljs.core._EQ_.call(null, inst_18306, change);
                                var state_18347__$1 = state_18347;
                                var statearr_18365_18411 = state_18347__$1;
                                statearr_18365_18411[2] = inst_18310;
                                statearr_18365_18411[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_18348 === 13) {
                                  var inst_18312 = state_18347[2];
                                  var state_18347__$1 = state_18347;
                                  if(cljs.core.truth_(inst_18312)) {
                                    var statearr_18366_18412 = state_18347__$1;
                                    statearr_18366_18412[1] = 14
                                  }else {
                                    var statearr_18367_18413 = state_18347__$1;
                                    statearr_18367_18413[1] = 15
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_18348 === 14) {
                                    var inst_18305 = state_18347[16];
                                    var inst_18314 = inst_18305 == null;
                                    var state_18347__$1 = state_18347;
                                    if(cljs.core.truth_(inst_18314)) {
                                      var statearr_18368_18414 = state_18347__$1;
                                      statearr_18368_18414[1] = 17
                                    }else {
                                      var statearr_18369_18415 = state_18347__$1;
                                      statearr_18369_18415[1] = 18
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_18348 === 15) {
                                      var inst_18323 = state_18347[18];
                                      var inst_18301 = state_18347[13];
                                      var inst_18306 = state_18347[17];
                                      var inst_18323__$1 = inst_18301.call(null, inst_18306);
                                      var state_18347__$1 = function() {
                                        var statearr_18370 = state_18347;
                                        statearr_18370[18] = inst_18323__$1;
                                        return statearr_18370
                                      }();
                                      if(cljs.core.truth_(inst_18323__$1)) {
                                        var statearr_18371_18416 = state_18347__$1;
                                        statearr_18371_18416[1] = 20
                                      }else {
                                        var statearr_18372_18417 = state_18347__$1;
                                        statearr_18372_18417[1] = 21
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_18348 === 16) {
                                        var inst_18343 = state_18347[2];
                                        var state_18347__$1 = state_18347;
                                        var statearr_18373_18418 = state_18347__$1;
                                        statearr_18373_18418[2] = inst_18343;
                                        statearr_18373_18418[1] = 6;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_18348 === 17) {
                                          var inst_18306 = state_18347[17];
                                          var inst_18316 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_18306);
                                          var state_18347__$1 = state_18347;
                                          var statearr_18374_18419 = state_18347__$1;
                                          statearr_18374_18419[2] = inst_18316;
                                          statearr_18374_18419[1] = 19;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_18348 === 18) {
                                            var state_18347__$1 = state_18347;
                                            var statearr_18375_18420 = state_18347__$1;
                                            statearr_18375_18420[2] = null;
                                            statearr_18375_18420[1] = 19;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_18348 === 19) {
                                              var inst_18319 = state_18347[2];
                                              var inst_18320 = calc_state.call(null);
                                              var inst_18290 = inst_18320;
                                              var state_18347__$1 = function() {
                                                var statearr_18376 = state_18347;
                                                statearr_18376[11] = inst_18290;
                                                statearr_18376[19] = inst_18319;
                                                return statearr_18376
                                              }();
                                              var statearr_18377_18421 = state_18347__$1;
                                              statearr_18377_18421[2] = null;
                                              statearr_18377_18421[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_18348 === 20) {
                                                var inst_18323 = state_18347[18];
                                                var state_18347__$1 = state_18347;
                                                var statearr_18378_18422 = state_18347__$1;
                                                statearr_18378_18422[2] = inst_18323;
                                                statearr_18378_18422[1] = 22;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                if(state_val_18348 === 21) {
                                                  var inst_18326 = state_18347[20];
                                                  var inst_18301 = state_18347[13];
                                                  var inst_18326__$1 = cljs.core.empty_QMARK_.call(null, inst_18301);
                                                  var state_18347__$1 = function() {
                                                    var statearr_18379 = state_18347;
                                                    statearr_18379[20] = inst_18326__$1;
                                                    return statearr_18379
                                                  }();
                                                  if(inst_18326__$1) {
                                                    var statearr_18380_18423 = state_18347__$1;
                                                    statearr_18380_18423[1] = 23
                                                  }else {
                                                    var statearr_18381_18424 = state_18347__$1;
                                                    statearr_18381_18424[1] = 24
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(state_val_18348 === 22) {
                                                    var inst_18334 = state_18347[2];
                                                    var state_18347__$1 = state_18347;
                                                    if(cljs.core.truth_(inst_18334)) {
                                                      var statearr_18382_18425 = state_18347__$1;
                                                      statearr_18382_18425[1] = 26
                                                    }else {
                                                      var statearr_18383_18426 = state_18347__$1;
                                                      statearr_18383_18426[1] = 27
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_18348 === 23) {
                                                      var inst_18300 = state_18347[14];
                                                      var inst_18306 = state_18347[17];
                                                      var inst_18328 = inst_18300.call(null, inst_18306);
                                                      var inst_18329 = cljs.core.not.call(null, inst_18328);
                                                      var state_18347__$1 = state_18347;
                                                      var statearr_18384_18427 = state_18347__$1;
                                                      statearr_18384_18427[2] = inst_18329;
                                                      statearr_18384_18427[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      if(state_val_18348 === 24) {
                                                        var inst_18326 = state_18347[20];
                                                        var state_18347__$1 = state_18347;
                                                        var statearr_18385_18428 = state_18347__$1;
                                                        statearr_18385_18428[2] = inst_18326;
                                                        statearr_18385_18428[1] = 25;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                      }else {
                                                        if(state_val_18348 === 25) {
                                                          var inst_18332 = state_18347[2];
                                                          var state_18347__$1 = state_18347;
                                                          var statearr_18386_18429 = state_18347__$1;
                                                          statearr_18386_18429[2] = inst_18332;
                                                          statearr_18386_18429[1] = 22;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                        }else {
                                                          if(state_val_18348 === 26) {
                                                            var inst_18305 = state_18347[16];
                                                            var state_18347__$1 = state_18347;
                                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18347__$1, 29, out, inst_18305)
                                                          }else {
                                                            if(state_val_18348 === 27) {
                                                              var state_18347__$1 = state_18347;
                                                              var statearr_18387_18430 = state_18347__$1;
                                                              statearr_18387_18430[2] = null;
                                                              statearr_18387_18430[1] = 28;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }else {
                                                              if(state_val_18348 === 28) {
                                                                var inst_18298 = state_18347[12];
                                                                var inst_18340 = state_18347[2];
                                                                var inst_18290 = inst_18298;
                                                                var state_18347__$1 = function() {
                                                                  var statearr_18388 = state_18347;
                                                                  statearr_18388[21] = inst_18340;
                                                                  statearr_18388[11] = inst_18290;
                                                                  return statearr_18388
                                                                }();
                                                                var statearr_18389_18431 = state_18347__$1;
                                                                statearr_18389_18431[2] = null;
                                                                statearr_18389_18431[1] = 5;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                              }else {
                                                                if(state_val_18348 === 29) {
                                                                  var inst_18337 = state_18347[2];
                                                                  var state_18347__$1 = state_18347;
                                                                  var statearr_18390_18432 = state_18347__$1;
                                                                  statearr_18390_18432[2] = inst_18337;
                                                                  statearr_18390_18432[1] = 28;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__6929__auto__) {
        return function() {
          var state_machine__6930__auto__ = null;
          var state_machine__6930__auto____0 = function() {
            var statearr_18394 = new Array(22);
            statearr_18394[0] = state_machine__6930__auto__;
            statearr_18394[1] = 1;
            return statearr_18394
          };
          var state_machine__6930__auto____1 = function(state_18347) {
            while(true) {
              var ret_value__6931__auto__ = function() {
                try {
                  while(true) {
                    var result__6932__auto__ = switch__6929__auto__.call(null, state_18347);
                    if(cljs.core.keyword_identical_QMARK_.call(null, result__6932__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue
                    }else {
                      return result__6932__auto__
                    }
                    break
                  }
                }catch(e18395) {
                  if(e18395 instanceof Object) {
                    var ex__6933__auto__ = e18395;
                    var statearr_18396_18433 = state_18347;
                    statearr_18396_18433[5] = ex__6933__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18347);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e18395;
                    }else {
                      return null
                    }
                  }
                }
              }();
              if(cljs.core.keyword_identical_QMARK_.call(null, ret_value__6931__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__18434 = state_18347;
                state_18347 = G__18434;
                continue
              }else {
                return ret_value__6931__auto__
              }
              break
            }
          };
          state_machine__6930__auto__ = function(state_18347) {
            switch(arguments.length) {
              case 0:
                return state_machine__6930__auto____0.call(this);
              case 1:
                return state_machine__6930__auto____1.call(this, state_18347)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6930__auto____0;
          state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6930__auto____1;
          return state_machine__6930__auto__
        }()
      }(switch__6929__auto__)
    }();
    var state__7001__auto__ = function() {
      var statearr_18397 = f__7000__auto__.call(null);
      statearr_18397[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6999__auto___18398;
      return statearr_18397
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7001__auto__)
  });
  return m
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch)
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch)
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix)
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map)
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode)
};
cljs.core.async.Pub = {};
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if(function() {
    var and__3941__auto__ = p;
    if(and__3941__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4
    }else {
      return and__3941__auto__
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_)
  }else {
    var x__3494__auto__ = p == null ? null : p;
    return function() {
      var or__3943__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_)
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if(function() {
    var and__3941__auto__ = p;
    if(and__3941__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch)
  }else {
    var x__3494__auto__ = p == null ? null : p;
    return function() {
      var or__3943__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__3494__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch)
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if(function() {
      var and__3941__auto__ = p;
      if(and__3941__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1
      }else {
        return and__3941__auto__
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p)
    }else {
      var x__3494__auto__ = p == null ? null : p;
      return function() {
        var or__3943__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p)
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if(function() {
      var and__3941__auto__ = p;
      if(and__3941__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v)
    }else {
      var x__3494__auto__ = p == null ? null : p;
      return function() {
        var or__3943__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__3494__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v)
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null))
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3943__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3943__auto__, mults) {
            return function(p1__18435_SHARP_) {
              if(cljs.core.truth_(p1__18435_SHARP_.call(null, topic))) {
                return p1__18435_SHARP_
              }else {
                return cljs.core.assoc.call(null, p1__18435_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))))
              }
            }
          }(or__3943__auto__, mults)), topic)
        }
      }
    }(mults);
    var p = function() {
      if(typeof cljs.core.async.t18560 !== "undefined") {
      }else {
        goog.provide("cljs.core.async.t18560");
        cljs.core.async.t18560 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta18561) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta18561 = meta18561;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216
        };
        cljs.core.async.t18560.cljs$lang$type = true;
        cljs.core.async.t18560.cljs$lang$ctorStr = "cljs.core.async/t18560";
        cljs.core.async.t18560.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__3435__auto__, writer__3436__auto__, opt__3437__auto__) {
            return cljs.core._write.call(null, writer__3436__auto__, "cljs.core.async/t18560")
          }
        }(mults, ensure_mult);
        cljs.core.async.t18560.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t18560.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_)
          }
        }(mults, ensure_mult);
        cljs.core.async.t18560.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var temp__4092__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if(cljs.core.truth_(temp__4092__auto__)) {
              var m = temp__4092__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2)
            }else {
              return null
            }
          }
        }(mults, ensure_mult);
        cljs.core.async.t18560.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY)
          }
        }(mults, ensure_mult);
        cljs.core.async.t18560.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic)
          }
        }(mults, ensure_mult);
        cljs.core.async.t18560.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t18560.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            return self__.ch
          }
        }(mults, ensure_mult);
        cljs.core.async.t18560.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_18562) {
            var self__ = this;
            return self__.meta18561
          }
        }(mults, ensure_mult);
        cljs.core.async.t18560.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_18562, meta18561__$1) {
            var self__ = this;
            return new cljs.core.async.t18560(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta18561__$1)
          }
        }(mults, ensure_mult);
        cljs.core.async.__GT_t18560 = function(mults, ensure_mult) {
          return function __GT_t18560(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta18561) {
            return new cljs.core.async.t18560(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta18561)
          }
        }(mults, ensure_mult)
      }
      return new cljs.core.async.t18560(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null)
    }();
    var c__6999__auto___18684 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__7000__auto__ = function() {
        var switch__6929__auto__ = function(state_18636) {
          var state_val_18637 = state_18636[1];
          if(state_val_18637 === 1) {
            var state_18636__$1 = state_18636;
            var statearr_18638_18685 = state_18636__$1;
            statearr_18638_18685[2] = null;
            statearr_18638_18685[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_18637 === 2) {
              var state_18636__$1 = state_18636;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18636__$1, 4, ch)
            }else {
              if(state_val_18637 === 3) {
                var inst_18634 = state_18636[2];
                var state_18636__$1 = state_18636;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18636__$1, inst_18634)
              }else {
                if(state_val_18637 === 4) {
                  var inst_18565 = state_18636[7];
                  var inst_18565__$1 = state_18636[2];
                  var inst_18566 = inst_18565__$1 == null;
                  var state_18636__$1 = function() {
                    var statearr_18639 = state_18636;
                    statearr_18639[7] = inst_18565__$1;
                    return statearr_18639
                  }();
                  if(cljs.core.truth_(inst_18566)) {
                    var statearr_18640_18686 = state_18636__$1;
                    statearr_18640_18686[1] = 5
                  }else {
                    var statearr_18641_18687 = state_18636__$1;
                    statearr_18641_18687[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_18637 === 5) {
                    var inst_18572 = cljs.core.deref.call(null, mults);
                    var inst_18573 = cljs.core.vals.call(null, inst_18572);
                    var inst_18574 = cljs.core.seq.call(null, inst_18573);
                    var inst_18575 = inst_18574;
                    var inst_18576 = null;
                    var inst_18577 = 0;
                    var inst_18578 = 0;
                    var state_18636__$1 = function() {
                      var statearr_18642 = state_18636;
                      statearr_18642[8] = inst_18578;
                      statearr_18642[9] = inst_18576;
                      statearr_18642[10] = inst_18577;
                      statearr_18642[11] = inst_18575;
                      return statearr_18642
                    }();
                    var statearr_18643_18688 = state_18636__$1;
                    statearr_18643_18688[2] = null;
                    statearr_18643_18688[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_18637 === 6) {
                      var inst_18565 = state_18636[7];
                      var inst_18615 = state_18636[12];
                      var inst_18613 = state_18636[13];
                      var inst_18613__$1 = topic_fn.call(null, inst_18565);
                      var inst_18614 = cljs.core.deref.call(null, mults);
                      var inst_18615__$1 = cljs.core.get.call(null, inst_18614, inst_18613__$1);
                      var state_18636__$1 = function() {
                        var statearr_18644 = state_18636;
                        statearr_18644[12] = inst_18615__$1;
                        statearr_18644[13] = inst_18613__$1;
                        return statearr_18644
                      }();
                      if(cljs.core.truth_(inst_18615__$1)) {
                        var statearr_18645_18689 = state_18636__$1;
                        statearr_18645_18689[1] = 19
                      }else {
                        var statearr_18646_18690 = state_18636__$1;
                        statearr_18646_18690[1] = 20
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_18637 === 7) {
                        var inst_18632 = state_18636[2];
                        var state_18636__$1 = state_18636;
                        var statearr_18647_18691 = state_18636__$1;
                        statearr_18647_18691[2] = inst_18632;
                        statearr_18647_18691[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_18637 === 8) {
                          var inst_18578 = state_18636[8];
                          var inst_18577 = state_18636[10];
                          var inst_18580 = inst_18578 < inst_18577;
                          var inst_18581 = inst_18580;
                          var state_18636__$1 = state_18636;
                          if(cljs.core.truth_(inst_18581)) {
                            var statearr_18651_18692 = state_18636__$1;
                            statearr_18651_18692[1] = 10
                          }else {
                            var statearr_18652_18693 = state_18636__$1;
                            statearr_18652_18693[1] = 11
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_18637 === 9) {
                            var inst_18611 = state_18636[2];
                            var state_18636__$1 = state_18636;
                            var statearr_18653_18694 = state_18636__$1;
                            statearr_18653_18694[2] = inst_18611;
                            statearr_18653_18694[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_18637 === 10) {
                              var inst_18578 = state_18636[8];
                              var inst_18576 = state_18636[9];
                              var inst_18577 = state_18636[10];
                              var inst_18575 = state_18636[11];
                              var inst_18583 = cljs.core._nth.call(null, inst_18576, inst_18578);
                              var inst_18584 = cljs.core.async.muxch_STAR_.call(null, inst_18583);
                              var inst_18585 = cljs.core.async.close_BANG_.call(null, inst_18584);
                              var inst_18586 = inst_18578 + 1;
                              var tmp18648 = inst_18576;
                              var tmp18649 = inst_18577;
                              var tmp18650 = inst_18575;
                              var inst_18575__$1 = tmp18650;
                              var inst_18576__$1 = tmp18648;
                              var inst_18577__$1 = tmp18649;
                              var inst_18578__$1 = inst_18586;
                              var state_18636__$1 = function() {
                                var statearr_18654 = state_18636;
                                statearr_18654[8] = inst_18578__$1;
                                statearr_18654[9] = inst_18576__$1;
                                statearr_18654[10] = inst_18577__$1;
                                statearr_18654[11] = inst_18575__$1;
                                statearr_18654[14] = inst_18585;
                                return statearr_18654
                              }();
                              var statearr_18655_18695 = state_18636__$1;
                              statearr_18655_18695[2] = null;
                              statearr_18655_18695[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_18637 === 11) {
                                var inst_18575 = state_18636[11];
                                var inst_18589 = state_18636[15];
                                var inst_18589__$1 = cljs.core.seq.call(null, inst_18575);
                                var state_18636__$1 = function() {
                                  var statearr_18656 = state_18636;
                                  statearr_18656[15] = inst_18589__$1;
                                  return statearr_18656
                                }();
                                if(inst_18589__$1) {
                                  var statearr_18657_18696 = state_18636__$1;
                                  statearr_18657_18696[1] = 13
                                }else {
                                  var statearr_18658_18697 = state_18636__$1;
                                  statearr_18658_18697[1] = 14
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_18637 === 12) {
                                  var inst_18609 = state_18636[2];
                                  var state_18636__$1 = state_18636;
                                  var statearr_18659_18698 = state_18636__$1;
                                  statearr_18659_18698[2] = inst_18609;
                                  statearr_18659_18698[1] = 9;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_18637 === 13) {
                                    var inst_18589 = state_18636[15];
                                    var inst_18591 = cljs.core.chunked_seq_QMARK_.call(null, inst_18589);
                                    var state_18636__$1 = state_18636;
                                    if(inst_18591) {
                                      var statearr_18660_18699 = state_18636__$1;
                                      statearr_18660_18699[1] = 16
                                    }else {
                                      var statearr_18661_18700 = state_18636__$1;
                                      statearr_18661_18700[1] = 17
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_18637 === 14) {
                                      var state_18636__$1 = state_18636;
                                      var statearr_18662_18701 = state_18636__$1;
                                      statearr_18662_18701[2] = null;
                                      statearr_18662_18701[1] = 15;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_18637 === 15) {
                                        var inst_18607 = state_18636[2];
                                        var state_18636__$1 = state_18636;
                                        var statearr_18663_18702 = state_18636__$1;
                                        statearr_18663_18702[2] = inst_18607;
                                        statearr_18663_18702[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_18637 === 16) {
                                          var inst_18589 = state_18636[15];
                                          var inst_18593 = cljs.core.chunk_first.call(null, inst_18589);
                                          var inst_18594 = cljs.core.chunk_rest.call(null, inst_18589);
                                          var inst_18595 = cljs.core.count.call(null, inst_18593);
                                          var inst_18575 = inst_18594;
                                          var inst_18576 = inst_18593;
                                          var inst_18577 = inst_18595;
                                          var inst_18578 = 0;
                                          var state_18636__$1 = function() {
                                            var statearr_18664 = state_18636;
                                            statearr_18664[8] = inst_18578;
                                            statearr_18664[9] = inst_18576;
                                            statearr_18664[10] = inst_18577;
                                            statearr_18664[11] = inst_18575;
                                            return statearr_18664
                                          }();
                                          var statearr_18665_18703 = state_18636__$1;
                                          statearr_18665_18703[2] = null;
                                          statearr_18665_18703[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_18637 === 17) {
                                            var inst_18589 = state_18636[15];
                                            var inst_18598 = cljs.core.first.call(null, inst_18589);
                                            var inst_18599 = cljs.core.async.muxch_STAR_.call(null, inst_18598);
                                            var inst_18600 = cljs.core.async.close_BANG_.call(null, inst_18599);
                                            var inst_18601 = cljs.core.next.call(null, inst_18589);
                                            var inst_18575 = inst_18601;
                                            var inst_18576 = null;
                                            var inst_18577 = 0;
                                            var inst_18578 = 0;
                                            var state_18636__$1 = function() {
                                              var statearr_18666 = state_18636;
                                              statearr_18666[16] = inst_18600;
                                              statearr_18666[8] = inst_18578;
                                              statearr_18666[9] = inst_18576;
                                              statearr_18666[10] = inst_18577;
                                              statearr_18666[11] = inst_18575;
                                              return statearr_18666
                                            }();
                                            var statearr_18667_18704 = state_18636__$1;
                                            statearr_18667_18704[2] = null;
                                            statearr_18667_18704[1] = 8;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_18637 === 18) {
                                              var inst_18604 = state_18636[2];
                                              var state_18636__$1 = state_18636;
                                              var statearr_18668_18705 = state_18636__$1;
                                              statearr_18668_18705[2] = inst_18604;
                                              statearr_18668_18705[1] = 15;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_18637 === 19) {
                                                var state_18636__$1 = state_18636;
                                                var statearr_18669_18706 = state_18636__$1;
                                                statearr_18669_18706[2] = null;
                                                statearr_18669_18706[1] = 24;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                if(state_val_18637 === 20) {
                                                  var state_18636__$1 = state_18636;
                                                  var statearr_18670_18707 = state_18636__$1;
                                                  statearr_18670_18707[2] = null;
                                                  statearr_18670_18707[1] = 21;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(state_val_18637 === 21) {
                                                    var inst_18629 = state_18636[2];
                                                    var state_18636__$1 = function() {
                                                      var statearr_18671 = state_18636;
                                                      statearr_18671[17] = inst_18629;
                                                      return statearr_18671
                                                    }();
                                                    var statearr_18672_18708 = state_18636__$1;
                                                    statearr_18672_18708[2] = null;
                                                    statearr_18672_18708[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_18637 === 22) {
                                                      var inst_18626 = state_18636[2];
                                                      var state_18636__$1 = state_18636;
                                                      var statearr_18673_18709 = state_18636__$1;
                                                      statearr_18673_18709[2] = inst_18626;
                                                      statearr_18673_18709[1] = 21;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      if(state_val_18637 === 23) {
                                                        var inst_18613 = state_18636[13];
                                                        var inst_18617 = state_18636[2];
                                                        var inst_18618 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_18613);
                                                        var state_18636__$1 = function() {
                                                          var statearr_18674 = state_18636;
                                                          statearr_18674[18] = inst_18617;
                                                          return statearr_18674
                                                        }();
                                                        var statearr_18675_18710 = state_18636__$1;
                                                        statearr_18675_18710[2] = inst_18618;
                                                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18636__$1);
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                      }else {
                                                        if(state_val_18637 === 24) {
                                                          var inst_18565 = state_18636[7];
                                                          var inst_18615 = state_18636[12];
                                                          var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_18636, 23, Object, null, 22);
                                                          var inst_18622 = cljs.core.async.muxch_STAR_.call(null, inst_18615);
                                                          var state_18636__$1 = state_18636;
                                                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18636__$1, 25, inst_18622, inst_18565)
                                                        }else {
                                                          if(state_val_18637 === 25) {
                                                            var inst_18624 = state_18636[2];
                                                            var state_18636__$1 = state_18636;
                                                            var statearr_18676_18711 = state_18636__$1;
                                                            statearr_18676_18711[2] = inst_18624;
                                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18636__$1);
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6929__auto__) {
          return function() {
            var state_machine__6930__auto__ = null;
            var state_machine__6930__auto____0 = function() {
              var statearr_18680 = new Array(19);
              statearr_18680[0] = state_machine__6930__auto__;
              statearr_18680[1] = 1;
              return statearr_18680
            };
            var state_machine__6930__auto____1 = function(state_18636) {
              while(true) {
                var ret_value__6931__auto__ = function() {
                  try {
                    while(true) {
                      var result__6932__auto__ = switch__6929__auto__.call(null, state_18636);
                      if(cljs.core.keyword_identical_QMARK_.call(null, result__6932__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue
                      }else {
                        return result__6932__auto__
                      }
                      break
                    }
                  }catch(e18681) {
                    if(e18681 instanceof Object) {
                      var ex__6933__auto__ = e18681;
                      var statearr_18682_18712 = state_18636;
                      statearr_18682_18712[5] = ex__6933__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18636);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e18681;
                      }else {
                        return null
                      }
                    }
                  }
                }();
                if(cljs.core.keyword_identical_QMARK_.call(null, ret_value__6931__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__18713 = state_18636;
                  state_18636 = G__18713;
                  continue
                }else {
                  return ret_value__6931__auto__
                }
                break
              }
            };
            state_machine__6930__auto__ = function(state_18636) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6930__auto____0.call(this);
                case 1:
                  return state_machine__6930__auto____1.call(this, state_18636)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6930__auto____0;
            state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6930__auto____1;
            return state_machine__6930__auto__
          }()
        }(switch__6929__auto__)
      }();
      var state__7001__auto__ = function() {
        var statearr_18683 = f__7000__auto__.call(null);
        statearr_18683[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6999__auto___18684;
        return statearr_18683
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7001__auto__)
    });
    return p
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true)
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_)
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch)
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p)
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic)
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null)
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if(cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0))
            }else {
              return null
            }
          }
        }(chs__$1, out, cnt, rets, dchan, dctr)
      }
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6999__auto___18850 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__7000__auto__ = function() {
        var switch__6929__auto__ = function(state_18820) {
          var state_val_18821 = state_18820[1];
          if(state_val_18821 === 1) {
            var state_18820__$1 = state_18820;
            var statearr_18822_18851 = state_18820__$1;
            statearr_18822_18851[2] = null;
            statearr_18822_18851[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_18821 === 2) {
              var inst_18783 = cljs.core.reset_BANG_.call(null, dctr, cnt);
              var inst_18784 = 0;
              var state_18820__$1 = function() {
                var statearr_18823 = state_18820;
                statearr_18823[7] = inst_18784;
                statearr_18823[8] = inst_18783;
                return statearr_18823
              }();
              var statearr_18824_18852 = state_18820__$1;
              statearr_18824_18852[2] = null;
              statearr_18824_18852[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_18821 === 3) {
                var inst_18818 = state_18820[2];
                var state_18820__$1 = state_18820;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18820__$1, inst_18818)
              }else {
                if(state_val_18821 === 4) {
                  var inst_18784 = state_18820[7];
                  var inst_18786 = inst_18784 < cnt;
                  var state_18820__$1 = state_18820;
                  if(cljs.core.truth_(inst_18786)) {
                    var statearr_18825_18853 = state_18820__$1;
                    statearr_18825_18853[1] = 6
                  }else {
                    var statearr_18826_18854 = state_18820__$1;
                    statearr_18826_18854[1] = 7
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_18821 === 5) {
                    var inst_18804 = state_18820[2];
                    var state_18820__$1 = function() {
                      var statearr_18827 = state_18820;
                      statearr_18827[9] = inst_18804;
                      return statearr_18827
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18820__$1, 12, dchan)
                  }else {
                    if(state_val_18821 === 6) {
                      var state_18820__$1 = state_18820;
                      var statearr_18828_18855 = state_18820__$1;
                      statearr_18828_18855[2] = null;
                      statearr_18828_18855[1] = 11;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_18821 === 7) {
                        var state_18820__$1 = state_18820;
                        var statearr_18829_18856 = state_18820__$1;
                        statearr_18829_18856[2] = null;
                        statearr_18829_18856[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_18821 === 8) {
                          var inst_18802 = state_18820[2];
                          var state_18820__$1 = state_18820;
                          var statearr_18830_18857 = state_18820__$1;
                          statearr_18830_18857[2] = inst_18802;
                          statearr_18830_18857[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_18821 === 9) {
                            var inst_18784 = state_18820[7];
                            var inst_18797 = state_18820[2];
                            var inst_18798 = inst_18784 + 1;
                            var inst_18784__$1 = inst_18798;
                            var state_18820__$1 = function() {
                              var statearr_18831 = state_18820;
                              statearr_18831[7] = inst_18784__$1;
                              statearr_18831[10] = inst_18797;
                              return statearr_18831
                            }();
                            var statearr_18832_18858 = state_18820__$1;
                            statearr_18832_18858[2] = null;
                            statearr_18832_18858[1] = 4;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_18821 === 10) {
                              var inst_18788 = state_18820[2];
                              var inst_18789 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                              var state_18820__$1 = function() {
                                var statearr_18833 = state_18820;
                                statearr_18833[11] = inst_18788;
                                return statearr_18833
                              }();
                              var statearr_18834_18859 = state_18820__$1;
                              statearr_18834_18859[2] = inst_18789;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18820__$1);
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_18821 === 11) {
                                var inst_18784 = state_18820[7];
                                var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_18820, 10, Object, null, 9);
                                var inst_18793 = chs__$1.call(null, inst_18784);
                                var inst_18794 = done.call(null, inst_18784);
                                var inst_18795 = cljs.core.async.take_BANG_.call(null, inst_18793, inst_18794);
                                var state_18820__$1 = state_18820;
                                var statearr_18835_18860 = state_18820__$1;
                                statearr_18835_18860[2] = inst_18795;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18820__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_18821 === 12) {
                                  var inst_18806 = state_18820[12];
                                  var inst_18806__$1 = state_18820[2];
                                  var inst_18807 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_18806__$1);
                                  var state_18820__$1 = function() {
                                    var statearr_18836 = state_18820;
                                    statearr_18836[12] = inst_18806__$1;
                                    return statearr_18836
                                  }();
                                  if(cljs.core.truth_(inst_18807)) {
                                    var statearr_18837_18861 = state_18820__$1;
                                    statearr_18837_18861[1] = 13
                                  }else {
                                    var statearr_18838_18862 = state_18820__$1;
                                    statearr_18838_18862[1] = 14
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_18821 === 13) {
                                    var inst_18809 = cljs.core.async.close_BANG_.call(null, out);
                                    var state_18820__$1 = state_18820;
                                    var statearr_18839_18863 = state_18820__$1;
                                    statearr_18839_18863[2] = inst_18809;
                                    statearr_18839_18863[1] = 15;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_18821 === 14) {
                                      var inst_18806 = state_18820[12];
                                      var inst_18811 = cljs.core.apply.call(null, f, inst_18806);
                                      var state_18820__$1 = state_18820;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18820__$1, 16, out, inst_18811)
                                    }else {
                                      if(state_val_18821 === 15) {
                                        var inst_18816 = state_18820[2];
                                        var state_18820__$1 = state_18820;
                                        var statearr_18840_18864 = state_18820__$1;
                                        statearr_18840_18864[2] = inst_18816;
                                        statearr_18840_18864[1] = 3;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_18821 === 16) {
                                          var inst_18813 = state_18820[2];
                                          var state_18820__$1 = function() {
                                            var statearr_18841 = state_18820;
                                            statearr_18841[13] = inst_18813;
                                            return statearr_18841
                                          }();
                                          var statearr_18842_18865 = state_18820__$1;
                                          statearr_18842_18865[2] = null;
                                          statearr_18842_18865[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6929__auto__) {
          return function() {
            var state_machine__6930__auto__ = null;
            var state_machine__6930__auto____0 = function() {
              var statearr_18846 = new Array(14);
              statearr_18846[0] = state_machine__6930__auto__;
              statearr_18846[1] = 1;
              return statearr_18846
            };
            var state_machine__6930__auto____1 = function(state_18820) {
              while(true) {
                var ret_value__6931__auto__ = function() {
                  try {
                    while(true) {
                      var result__6932__auto__ = switch__6929__auto__.call(null, state_18820);
                      if(cljs.core.keyword_identical_QMARK_.call(null, result__6932__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue
                      }else {
                        return result__6932__auto__
                      }
                      break
                    }
                  }catch(e18847) {
                    if(e18847 instanceof Object) {
                      var ex__6933__auto__ = e18847;
                      var statearr_18848_18866 = state_18820;
                      statearr_18848_18866[5] = ex__6933__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18820);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e18847;
                      }else {
                        return null
                      }
                    }
                  }
                }();
                if(cljs.core.keyword_identical_QMARK_.call(null, ret_value__6931__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__18867 = state_18820;
                  state_18820 = G__18867;
                  continue
                }else {
                  return ret_value__6931__auto__
                }
                break
              }
            };
            state_machine__6930__auto__ = function(state_18820) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6930__auto____0.call(this);
                case 1:
                  return state_machine__6930__auto____1.call(this, state_18820)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6930__auto____0;
            state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6930__auto____1;
            return state_machine__6930__auto__
          }()
        }(switch__6929__auto__)
      }();
      var state__7001__auto__ = function() {
        var statearr_18849 = f__7000__auto__.call(null);
        statearr_18849[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6999__auto___18850;
        return statearr_18849
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7001__auto__)
    });
    return out
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null)
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6999__auto___18975 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__7000__auto__ = function() {
        var switch__6929__auto__ = function(state_18951) {
          var state_val_18952 = state_18951[1];
          if(state_val_18952 === 1) {
            var inst_18922 = cljs.core.vec.call(null, chs);
            var inst_18923 = inst_18922;
            var state_18951__$1 = function() {
              var statearr_18953 = state_18951;
              statearr_18953[7] = inst_18923;
              return statearr_18953
            }();
            var statearr_18954_18976 = state_18951__$1;
            statearr_18954_18976[2] = null;
            statearr_18954_18976[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_18952 === 2) {
              var inst_18923 = state_18951[7];
              var inst_18925 = cljs.core.count.call(null, inst_18923);
              var inst_18926 = inst_18925 > 0;
              var state_18951__$1 = state_18951;
              if(cljs.core.truth_(inst_18926)) {
                var statearr_18955_18977 = state_18951__$1;
                statearr_18955_18977[1] = 4
              }else {
                var statearr_18956_18978 = state_18951__$1;
                statearr_18956_18978[1] = 5
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_18952 === 3) {
                var inst_18949 = state_18951[2];
                var state_18951__$1 = state_18951;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18951__$1, inst_18949)
              }else {
                if(state_val_18952 === 4) {
                  var inst_18923 = state_18951[7];
                  var state_18951__$1 = state_18951;
                  return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_18951__$1, 7, inst_18923)
                }else {
                  if(state_val_18952 === 5) {
                    var inst_18945 = cljs.core.async.close_BANG_.call(null, out);
                    var state_18951__$1 = state_18951;
                    var statearr_18957_18979 = state_18951__$1;
                    statearr_18957_18979[2] = inst_18945;
                    statearr_18957_18979[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_18952 === 6) {
                      var inst_18947 = state_18951[2];
                      var state_18951__$1 = state_18951;
                      var statearr_18958_18980 = state_18951__$1;
                      statearr_18958_18980[2] = inst_18947;
                      statearr_18958_18980[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_18952 === 7) {
                        var inst_18930 = state_18951[8];
                        var inst_18931 = state_18951[9];
                        var inst_18930__$1 = state_18951[2];
                        var inst_18931__$1 = cljs.core.nth.call(null, inst_18930__$1, 0, null);
                        var inst_18932 = cljs.core.nth.call(null, inst_18930__$1, 1, null);
                        var inst_18933 = inst_18931__$1 == null;
                        var state_18951__$1 = function() {
                          var statearr_18959 = state_18951;
                          statearr_18959[10] = inst_18932;
                          statearr_18959[8] = inst_18930__$1;
                          statearr_18959[9] = inst_18931__$1;
                          return statearr_18959
                        }();
                        if(cljs.core.truth_(inst_18933)) {
                          var statearr_18960_18981 = state_18951__$1;
                          statearr_18960_18981[1] = 8
                        }else {
                          var statearr_18961_18982 = state_18951__$1;
                          statearr_18961_18982[1] = 9
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_18952 === 8) {
                          var inst_18932 = state_18951[10];
                          var inst_18930 = state_18951[8];
                          var inst_18931 = state_18951[9];
                          var inst_18923 = state_18951[7];
                          var inst_18935 = function() {
                            var c = inst_18932;
                            var v = inst_18931;
                            var vec__18928 = inst_18930;
                            var cs = inst_18923;
                            return function(c, v, vec__18928, cs, inst_18932, inst_18930, inst_18931, inst_18923, state_val_18952) {
                              return function(p1__18868_SHARP_) {
                                return cljs.core.not_EQ_.call(null, c, p1__18868_SHARP_)
                              }
                            }(c, v, vec__18928, cs, inst_18932, inst_18930, inst_18931, inst_18923, state_val_18952)
                          }();
                          var inst_18936 = cljs.core.filterv.call(null, inst_18935, inst_18923);
                          var inst_18923__$1 = inst_18936;
                          var state_18951__$1 = function() {
                            var statearr_18962 = state_18951;
                            statearr_18962[7] = inst_18923__$1;
                            return statearr_18962
                          }();
                          var statearr_18963_18983 = state_18951__$1;
                          statearr_18963_18983[2] = null;
                          statearr_18963_18983[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_18952 === 9) {
                            var inst_18931 = state_18951[9];
                            var state_18951__$1 = state_18951;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18951__$1, 11, out, inst_18931)
                          }else {
                            if(state_val_18952 === 10) {
                              var inst_18943 = state_18951[2];
                              var state_18951__$1 = state_18951;
                              var statearr_18965_18984 = state_18951__$1;
                              statearr_18965_18984[2] = inst_18943;
                              statearr_18965_18984[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_18952 === 11) {
                                var inst_18923 = state_18951[7];
                                var inst_18940 = state_18951[2];
                                var tmp18964 = inst_18923;
                                var inst_18923__$1 = tmp18964;
                                var state_18951__$1 = function() {
                                  var statearr_18966 = state_18951;
                                  statearr_18966[7] = inst_18923__$1;
                                  statearr_18966[11] = inst_18940;
                                  return statearr_18966
                                }();
                                var statearr_18967_18985 = state_18951__$1;
                                statearr_18967_18985[2] = null;
                                statearr_18967_18985[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6929__auto__) {
          return function() {
            var state_machine__6930__auto__ = null;
            var state_machine__6930__auto____0 = function() {
              var statearr_18971 = new Array(12);
              statearr_18971[0] = state_machine__6930__auto__;
              statearr_18971[1] = 1;
              return statearr_18971
            };
            var state_machine__6930__auto____1 = function(state_18951) {
              while(true) {
                var ret_value__6931__auto__ = function() {
                  try {
                    while(true) {
                      var result__6932__auto__ = switch__6929__auto__.call(null, state_18951);
                      if(cljs.core.keyword_identical_QMARK_.call(null, result__6932__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue
                      }else {
                        return result__6932__auto__
                      }
                      break
                    }
                  }catch(e18972) {
                    if(e18972 instanceof Object) {
                      var ex__6933__auto__ = e18972;
                      var statearr_18973_18986 = state_18951;
                      statearr_18973_18986[5] = ex__6933__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18951);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e18972;
                      }else {
                        return null
                      }
                    }
                  }
                }();
                if(cljs.core.keyword_identical_QMARK_.call(null, ret_value__6931__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__18987 = state_18951;
                  state_18951 = G__18987;
                  continue
                }else {
                  return ret_value__6931__auto__
                }
                break
              }
            };
            state_machine__6930__auto__ = function(state_18951) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6930__auto____0.call(this);
                case 1:
                  return state_machine__6930__auto____1.call(this, state_18951)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6930__auto____0;
            state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6930__auto____1;
            return state_machine__6930__auto__
          }()
        }(switch__6929__auto__)
      }();
      var state__7001__auto__ = function() {
        var statearr_18974 = f__7000__auto__.call(null);
        statearr_18974[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6999__auto___18975;
        return statearr_18974
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7001__auto__)
    });
    return out
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch)
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null)
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6999__auto___19080 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__7000__auto__ = function() {
        var switch__6929__auto__ = function(state_19057) {
          var state_val_19058 = state_19057[1];
          if(state_val_19058 === 1) {
            var inst_19034 = 0;
            var state_19057__$1 = function() {
              var statearr_19059 = state_19057;
              statearr_19059[7] = inst_19034;
              return statearr_19059
            }();
            var statearr_19060_19081 = state_19057__$1;
            statearr_19060_19081[2] = null;
            statearr_19060_19081[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_19058 === 2) {
              var inst_19034 = state_19057[7];
              var inst_19036 = inst_19034 < n;
              var state_19057__$1 = state_19057;
              if(cljs.core.truth_(inst_19036)) {
                var statearr_19061_19082 = state_19057__$1;
                statearr_19061_19082[1] = 4
              }else {
                var statearr_19062_19083 = state_19057__$1;
                statearr_19062_19083[1] = 5
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_19058 === 3) {
                var inst_19054 = state_19057[2];
                var inst_19055 = cljs.core.async.close_BANG_.call(null, out);
                var state_19057__$1 = function() {
                  var statearr_19063 = state_19057;
                  statearr_19063[8] = inst_19054;
                  return statearr_19063
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19057__$1, inst_19055)
              }else {
                if(state_val_19058 === 4) {
                  var state_19057__$1 = state_19057;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19057__$1, 7, ch)
                }else {
                  if(state_val_19058 === 5) {
                    var state_19057__$1 = state_19057;
                    var statearr_19064_19084 = state_19057__$1;
                    statearr_19064_19084[2] = null;
                    statearr_19064_19084[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_19058 === 6) {
                      var inst_19052 = state_19057[2];
                      var state_19057__$1 = state_19057;
                      var statearr_19065_19085 = state_19057__$1;
                      statearr_19065_19085[2] = inst_19052;
                      statearr_19065_19085[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_19058 === 7) {
                        var inst_19039 = state_19057[9];
                        var inst_19039__$1 = state_19057[2];
                        var inst_19040 = inst_19039__$1 == null;
                        var inst_19041 = cljs.core.not.call(null, inst_19040);
                        var state_19057__$1 = function() {
                          var statearr_19066 = state_19057;
                          statearr_19066[9] = inst_19039__$1;
                          return statearr_19066
                        }();
                        if(inst_19041) {
                          var statearr_19067_19086 = state_19057__$1;
                          statearr_19067_19086[1] = 8
                        }else {
                          var statearr_19068_19087 = state_19057__$1;
                          statearr_19068_19087[1] = 9
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_19058 === 8) {
                          var inst_19039 = state_19057[9];
                          var state_19057__$1 = state_19057;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19057__$1, 11, out, inst_19039)
                        }else {
                          if(state_val_19058 === 9) {
                            var state_19057__$1 = state_19057;
                            var statearr_19069_19088 = state_19057__$1;
                            statearr_19069_19088[2] = null;
                            statearr_19069_19088[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_19058 === 10) {
                              var inst_19049 = state_19057[2];
                              var state_19057__$1 = state_19057;
                              var statearr_19070_19089 = state_19057__$1;
                              statearr_19070_19089[2] = inst_19049;
                              statearr_19070_19089[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_19058 === 11) {
                                var inst_19034 = state_19057[7];
                                var inst_19044 = state_19057[2];
                                var inst_19045 = inst_19034 + 1;
                                var inst_19034__$1 = inst_19045;
                                var state_19057__$1 = function() {
                                  var statearr_19071 = state_19057;
                                  statearr_19071[10] = inst_19044;
                                  statearr_19071[7] = inst_19034__$1;
                                  return statearr_19071
                                }();
                                var statearr_19072_19090 = state_19057__$1;
                                statearr_19072_19090[2] = null;
                                statearr_19072_19090[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6929__auto__) {
          return function() {
            var state_machine__6930__auto__ = null;
            var state_machine__6930__auto____0 = function() {
              var statearr_19076 = new Array(11);
              statearr_19076[0] = state_machine__6930__auto__;
              statearr_19076[1] = 1;
              return statearr_19076
            };
            var state_machine__6930__auto____1 = function(state_19057) {
              while(true) {
                var ret_value__6931__auto__ = function() {
                  try {
                    while(true) {
                      var result__6932__auto__ = switch__6929__auto__.call(null, state_19057);
                      if(cljs.core.keyword_identical_QMARK_.call(null, result__6932__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue
                      }else {
                        return result__6932__auto__
                      }
                      break
                    }
                  }catch(e19077) {
                    if(e19077 instanceof Object) {
                      var ex__6933__auto__ = e19077;
                      var statearr_19078_19091 = state_19057;
                      statearr_19078_19091[5] = ex__6933__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19057);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e19077;
                      }else {
                        return null
                      }
                    }
                  }
                }();
                if(cljs.core.keyword_identical_QMARK_.call(null, ret_value__6931__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__19092 = state_19057;
                  state_19057 = G__19092;
                  continue
                }else {
                  return ret_value__6931__auto__
                }
                break
              }
            };
            state_machine__6930__auto__ = function(state_19057) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6930__auto____0.call(this);
                case 1:
                  return state_machine__6930__auto____1.call(this, state_19057)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6930__auto____0;
            state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6930__auto____1;
            return state_machine__6930__auto__
          }()
        }(switch__6929__auto__)
      }();
      var state__7001__auto__ = function() {
        var statearr_19079 = f__7000__auto__.call(null);
        statearr_19079[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6999__auto___19080;
        return statearr_19079
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7001__auto__)
    });
    return out
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null)
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6999__auto___19189 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__7000__auto__ = function() {
        var switch__6929__auto__ = function(state_19164) {
          var state_val_19165 = state_19164[1];
          if(state_val_19165 === 1) {
            var inst_19141 = null;
            var state_19164__$1 = function() {
              var statearr_19166 = state_19164;
              statearr_19166[7] = inst_19141;
              return statearr_19166
            }();
            var statearr_19167_19190 = state_19164__$1;
            statearr_19167_19190[2] = null;
            statearr_19167_19190[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_19165 === 2) {
              var state_19164__$1 = state_19164;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19164__$1, 4, ch)
            }else {
              if(state_val_19165 === 3) {
                var inst_19161 = state_19164[2];
                var inst_19162 = cljs.core.async.close_BANG_.call(null, out);
                var state_19164__$1 = function() {
                  var statearr_19168 = state_19164;
                  statearr_19168[8] = inst_19161;
                  return statearr_19168
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19164__$1, inst_19162)
              }else {
                if(state_val_19165 === 4) {
                  var inst_19144 = state_19164[9];
                  var inst_19144__$1 = state_19164[2];
                  var inst_19145 = inst_19144__$1 == null;
                  var inst_19146 = cljs.core.not.call(null, inst_19145);
                  var state_19164__$1 = function() {
                    var statearr_19169 = state_19164;
                    statearr_19169[9] = inst_19144__$1;
                    return statearr_19169
                  }();
                  if(inst_19146) {
                    var statearr_19170_19191 = state_19164__$1;
                    statearr_19170_19191[1] = 5
                  }else {
                    var statearr_19171_19192 = state_19164__$1;
                    statearr_19171_19192[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_19165 === 5) {
                    var inst_19144 = state_19164[9];
                    var inst_19141 = state_19164[7];
                    var inst_19148 = cljs.core._EQ_.call(null, inst_19144, inst_19141);
                    var state_19164__$1 = state_19164;
                    if(inst_19148) {
                      var statearr_19172_19193 = state_19164__$1;
                      statearr_19172_19193[1] = 8
                    }else {
                      var statearr_19173_19194 = state_19164__$1;
                      statearr_19173_19194[1] = 9
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_19165 === 6) {
                      var state_19164__$1 = state_19164;
                      var statearr_19175_19195 = state_19164__$1;
                      statearr_19175_19195[2] = null;
                      statearr_19175_19195[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_19165 === 7) {
                        var inst_19159 = state_19164[2];
                        var state_19164__$1 = state_19164;
                        var statearr_19176_19196 = state_19164__$1;
                        statearr_19176_19196[2] = inst_19159;
                        statearr_19176_19196[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_19165 === 8) {
                          var inst_19141 = state_19164[7];
                          var tmp19174 = inst_19141;
                          var inst_19141__$1 = tmp19174;
                          var state_19164__$1 = function() {
                            var statearr_19177 = state_19164;
                            statearr_19177[7] = inst_19141__$1;
                            return statearr_19177
                          }();
                          var statearr_19178_19197 = state_19164__$1;
                          statearr_19178_19197[2] = null;
                          statearr_19178_19197[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_19165 === 9) {
                            var inst_19144 = state_19164[9];
                            var state_19164__$1 = state_19164;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19164__$1, 11, out, inst_19144)
                          }else {
                            if(state_val_19165 === 10) {
                              var inst_19156 = state_19164[2];
                              var state_19164__$1 = state_19164;
                              var statearr_19179_19198 = state_19164__$1;
                              statearr_19179_19198[2] = inst_19156;
                              statearr_19179_19198[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_19165 === 11) {
                                var inst_19144 = state_19164[9];
                                var inst_19153 = state_19164[2];
                                var inst_19141 = inst_19144;
                                var state_19164__$1 = function() {
                                  var statearr_19180 = state_19164;
                                  statearr_19180[10] = inst_19153;
                                  statearr_19180[7] = inst_19141;
                                  return statearr_19180
                                }();
                                var statearr_19181_19199 = state_19164__$1;
                                statearr_19181_19199[2] = null;
                                statearr_19181_19199[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6929__auto__) {
          return function() {
            var state_machine__6930__auto__ = null;
            var state_machine__6930__auto____0 = function() {
              var statearr_19185 = new Array(11);
              statearr_19185[0] = state_machine__6930__auto__;
              statearr_19185[1] = 1;
              return statearr_19185
            };
            var state_machine__6930__auto____1 = function(state_19164) {
              while(true) {
                var ret_value__6931__auto__ = function() {
                  try {
                    while(true) {
                      var result__6932__auto__ = switch__6929__auto__.call(null, state_19164);
                      if(cljs.core.keyword_identical_QMARK_.call(null, result__6932__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue
                      }else {
                        return result__6932__auto__
                      }
                      break
                    }
                  }catch(e19186) {
                    if(e19186 instanceof Object) {
                      var ex__6933__auto__ = e19186;
                      var statearr_19187_19200 = state_19164;
                      statearr_19187_19200[5] = ex__6933__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19164);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e19186;
                      }else {
                        return null
                      }
                    }
                  }
                }();
                if(cljs.core.keyword_identical_QMARK_.call(null, ret_value__6931__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__19201 = state_19164;
                  state_19164 = G__19201;
                  continue
                }else {
                  return ret_value__6931__auto__
                }
                break
              }
            };
            state_machine__6930__auto__ = function(state_19164) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6930__auto____0.call(this);
                case 1:
                  return state_machine__6930__auto____1.call(this, state_19164)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6930__auto____0;
            state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6930__auto____1;
            return state_machine__6930__auto__
          }()
        }(switch__6929__auto__)
      }();
      var state__7001__auto__ = function() {
        var statearr_19188 = f__7000__auto__.call(null);
        statearr_19188[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6999__auto___19189;
        return statearr_19188
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7001__auto__)
    });
    return out
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null)
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6999__auto___19336 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__7000__auto__ = function() {
        var switch__6929__auto__ = function(state_19306) {
          var state_val_19307 = state_19306[1];
          if(state_val_19307 === 1) {
            var inst_19269 = new Array(n);
            var inst_19270 = inst_19269;
            var inst_19271 = 0;
            var state_19306__$1 = function() {
              var statearr_19308 = state_19306;
              statearr_19308[7] = inst_19271;
              statearr_19308[8] = inst_19270;
              return statearr_19308
            }();
            var statearr_19309_19337 = state_19306__$1;
            statearr_19309_19337[2] = null;
            statearr_19309_19337[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_19307 === 2) {
              var state_19306__$1 = state_19306;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19306__$1, 4, ch)
            }else {
              if(state_val_19307 === 3) {
                var inst_19304 = state_19306[2];
                var state_19306__$1 = state_19306;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19306__$1, inst_19304)
              }else {
                if(state_val_19307 === 4) {
                  var inst_19274 = state_19306[9];
                  var inst_19274__$1 = state_19306[2];
                  var inst_19275 = inst_19274__$1 == null;
                  var inst_19276 = cljs.core.not.call(null, inst_19275);
                  var state_19306__$1 = function() {
                    var statearr_19310 = state_19306;
                    statearr_19310[9] = inst_19274__$1;
                    return statearr_19310
                  }();
                  if(inst_19276) {
                    var statearr_19311_19338 = state_19306__$1;
                    statearr_19311_19338[1] = 5
                  }else {
                    var statearr_19312_19339 = state_19306__$1;
                    statearr_19312_19339[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_19307 === 5) {
                    var inst_19271 = state_19306[7];
                    var inst_19270 = state_19306[8];
                    var inst_19274 = state_19306[9];
                    var inst_19279 = state_19306[10];
                    var inst_19278 = inst_19270[inst_19271] = inst_19274;
                    var inst_19279__$1 = inst_19271 + 1;
                    var inst_19280 = inst_19279__$1 < n;
                    var state_19306__$1 = function() {
                      var statearr_19313 = state_19306;
                      statearr_19313[10] = inst_19279__$1;
                      statearr_19313[11] = inst_19278;
                      return statearr_19313
                    }();
                    if(cljs.core.truth_(inst_19280)) {
                      var statearr_19314_19340 = state_19306__$1;
                      statearr_19314_19340[1] = 8
                    }else {
                      var statearr_19315_19341 = state_19306__$1;
                      statearr_19315_19341[1] = 9
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_19307 === 6) {
                      var inst_19271 = state_19306[7];
                      var inst_19292 = inst_19271 > 0;
                      var state_19306__$1 = state_19306;
                      if(cljs.core.truth_(inst_19292)) {
                        var statearr_19317_19342 = state_19306__$1;
                        statearr_19317_19342[1] = 12
                      }else {
                        var statearr_19318_19343 = state_19306__$1;
                        statearr_19318_19343[1] = 13
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_19307 === 7) {
                        var inst_19302 = state_19306[2];
                        var state_19306__$1 = state_19306;
                        var statearr_19319_19344 = state_19306__$1;
                        statearr_19319_19344[2] = inst_19302;
                        statearr_19319_19344[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_19307 === 8) {
                          var inst_19270 = state_19306[8];
                          var inst_19279 = state_19306[10];
                          var tmp19316 = inst_19270;
                          var inst_19270__$1 = tmp19316;
                          var inst_19271 = inst_19279;
                          var state_19306__$1 = function() {
                            var statearr_19320 = state_19306;
                            statearr_19320[7] = inst_19271;
                            statearr_19320[8] = inst_19270__$1;
                            return statearr_19320
                          }();
                          var statearr_19321_19345 = state_19306__$1;
                          statearr_19321_19345[2] = null;
                          statearr_19321_19345[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_19307 === 9) {
                            var inst_19270 = state_19306[8];
                            var inst_19284 = cljs.core.vec.call(null, inst_19270);
                            var state_19306__$1 = state_19306;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19306__$1, 11, out, inst_19284)
                          }else {
                            if(state_val_19307 === 10) {
                              var inst_19290 = state_19306[2];
                              var state_19306__$1 = state_19306;
                              var statearr_19322_19346 = state_19306__$1;
                              statearr_19322_19346[2] = inst_19290;
                              statearr_19322_19346[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_19307 === 11) {
                                var inst_19286 = state_19306[2];
                                var inst_19287 = new Array(n);
                                var inst_19270 = inst_19287;
                                var inst_19271 = 0;
                                var state_19306__$1 = function() {
                                  var statearr_19323 = state_19306;
                                  statearr_19323[12] = inst_19286;
                                  statearr_19323[7] = inst_19271;
                                  statearr_19323[8] = inst_19270;
                                  return statearr_19323
                                }();
                                var statearr_19324_19347 = state_19306__$1;
                                statearr_19324_19347[2] = null;
                                statearr_19324_19347[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_19307 === 12) {
                                  var inst_19270 = state_19306[8];
                                  var inst_19294 = cljs.core.vec.call(null, inst_19270);
                                  var state_19306__$1 = state_19306;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19306__$1, 15, out, inst_19294)
                                }else {
                                  if(state_val_19307 === 13) {
                                    var state_19306__$1 = state_19306;
                                    var statearr_19325_19348 = state_19306__$1;
                                    statearr_19325_19348[2] = null;
                                    statearr_19325_19348[1] = 14;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_19307 === 14) {
                                      var inst_19299 = state_19306[2];
                                      var inst_19300 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_19306__$1 = function() {
                                        var statearr_19326 = state_19306;
                                        statearr_19326[13] = inst_19299;
                                        return statearr_19326
                                      }();
                                      var statearr_19327_19349 = state_19306__$1;
                                      statearr_19327_19349[2] = inst_19300;
                                      statearr_19327_19349[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_19307 === 15) {
                                        var inst_19296 = state_19306[2];
                                        var state_19306__$1 = state_19306;
                                        var statearr_19328_19350 = state_19306__$1;
                                        statearr_19328_19350[2] = inst_19296;
                                        statearr_19328_19350[1] = 14;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        return null
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6929__auto__) {
          return function() {
            var state_machine__6930__auto__ = null;
            var state_machine__6930__auto____0 = function() {
              var statearr_19332 = new Array(14);
              statearr_19332[0] = state_machine__6930__auto__;
              statearr_19332[1] = 1;
              return statearr_19332
            };
            var state_machine__6930__auto____1 = function(state_19306) {
              while(true) {
                var ret_value__6931__auto__ = function() {
                  try {
                    while(true) {
                      var result__6932__auto__ = switch__6929__auto__.call(null, state_19306);
                      if(cljs.core.keyword_identical_QMARK_.call(null, result__6932__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue
                      }else {
                        return result__6932__auto__
                      }
                      break
                    }
                  }catch(e19333) {
                    if(e19333 instanceof Object) {
                      var ex__6933__auto__ = e19333;
                      var statearr_19334_19351 = state_19306;
                      statearr_19334_19351[5] = ex__6933__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19306);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e19333;
                      }else {
                        return null
                      }
                    }
                  }
                }();
                if(cljs.core.keyword_identical_QMARK_.call(null, ret_value__6931__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__19352 = state_19306;
                  state_19306 = G__19352;
                  continue
                }else {
                  return ret_value__6931__auto__
                }
                break
              }
            };
            state_machine__6930__auto__ = function(state_19306) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6930__auto____0.call(this);
                case 1:
                  return state_machine__6930__auto____1.call(this, state_19306)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6930__auto____0;
            state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6930__auto____1;
            return state_machine__6930__auto__
          }()
        }(switch__6929__auto__)
      }();
      var state__7001__auto__ = function() {
        var statearr_19335 = f__7000__auto__.call(null);
        statearr_19335[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6999__auto___19336;
        return statearr_19335
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7001__auto__)
    });
    return out
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null)
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6999__auto___19509 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__7000__auto__ = function() {
        var switch__6929__auto__ = function(state_19475) {
          var state_val_19476 = state_19475[1];
          if(state_val_19476 === 1) {
            var inst_19431 = new Array(0);
            var inst_19432 = inst_19431;
            var inst_19433 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538);
            var state_19475__$1 = function() {
              var statearr_19477 = state_19475;
              statearr_19477[7] = inst_19433;
              statearr_19477[8] = inst_19432;
              return statearr_19477
            }();
            var statearr_19478_19510 = state_19475__$1;
            statearr_19478_19510[2] = null;
            statearr_19478_19510[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_19476 === 2) {
              var state_19475__$1 = state_19475;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19475__$1, 4, ch)
            }else {
              if(state_val_19476 === 3) {
                var inst_19473 = state_19475[2];
                var state_19475__$1 = state_19475;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19475__$1, inst_19473)
              }else {
                if(state_val_19476 === 4) {
                  var inst_19436 = state_19475[9];
                  var inst_19436__$1 = state_19475[2];
                  var inst_19437 = inst_19436__$1 == null;
                  var inst_19438 = cljs.core.not.call(null, inst_19437);
                  var state_19475__$1 = function() {
                    var statearr_19479 = state_19475;
                    statearr_19479[9] = inst_19436__$1;
                    return statearr_19479
                  }();
                  if(inst_19438) {
                    var statearr_19480_19511 = state_19475__$1;
                    statearr_19480_19511[1] = 5
                  }else {
                    var statearr_19481_19512 = state_19475__$1;
                    statearr_19481_19512[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_19476 === 5) {
                    var inst_19440 = state_19475[10];
                    var inst_19436 = state_19475[9];
                    var inst_19433 = state_19475[7];
                    var inst_19441 = state_19475[11];
                    var inst_19440__$1 = f.call(null, inst_19436);
                    var inst_19441__$1 = cljs.core._EQ_.call(null, inst_19440__$1, inst_19433);
                    var state_19475__$1 = function() {
                      var statearr_19482 = state_19475;
                      statearr_19482[10] = inst_19440__$1;
                      statearr_19482[11] = inst_19441__$1;
                      return statearr_19482
                    }();
                    if(inst_19441__$1) {
                      var statearr_19483_19513 = state_19475__$1;
                      statearr_19483_19513[1] = 8
                    }else {
                      var statearr_19484_19514 = state_19475__$1;
                      statearr_19484_19514[1] = 9
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_19476 === 6) {
                      var inst_19432 = state_19475[8];
                      var inst_19460 = inst_19432.length;
                      var inst_19461 = inst_19460 > 0;
                      var state_19475__$1 = state_19475;
                      if(cljs.core.truth_(inst_19461)) {
                        var statearr_19485_19515 = state_19475__$1;
                        statearr_19485_19515[1] = 15
                      }else {
                        var statearr_19486_19516 = state_19475__$1;
                        statearr_19486_19516[1] = 16
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_19476 === 7) {
                        var inst_19471 = state_19475[2];
                        var state_19475__$1 = state_19475;
                        var statearr_19487_19517 = state_19475__$1;
                        statearr_19487_19517[2] = inst_19471;
                        statearr_19487_19517[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_19476 === 8) {
                          var inst_19441 = state_19475[11];
                          var state_19475__$1 = state_19475;
                          var statearr_19488_19518 = state_19475__$1;
                          statearr_19488_19518[2] = inst_19441;
                          statearr_19488_19518[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_19476 === 9) {
                            var inst_19433 = state_19475[7];
                            var inst_19444 = cljs.core.keyword_identical_QMARK_.call(null, inst_19433, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538));
                            var state_19475__$1 = state_19475;
                            var statearr_19490_19519 = state_19475__$1;
                            statearr_19490_19519[2] = inst_19444;
                            statearr_19490_19519[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_19476 === 10) {
                              var inst_19446 = state_19475[2];
                              var state_19475__$1 = state_19475;
                              if(cljs.core.truth_(inst_19446)) {
                                var statearr_19491_19520 = state_19475__$1;
                                statearr_19491_19520[1] = 11
                              }else {
                                var statearr_19492_19521 = state_19475__$1;
                                statearr_19492_19521[1] = 12
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_19476 === 11) {
                                var inst_19440 = state_19475[10];
                                var inst_19436 = state_19475[9];
                                var inst_19432 = state_19475[8];
                                var inst_19448 = inst_19432.push(inst_19436);
                                var tmp19489 = inst_19432;
                                var inst_19432__$1 = tmp19489;
                                var inst_19433 = inst_19440;
                                var state_19475__$1 = function() {
                                  var statearr_19493 = state_19475;
                                  statearr_19493[7] = inst_19433;
                                  statearr_19493[8] = inst_19432__$1;
                                  statearr_19493[12] = inst_19448;
                                  return statearr_19493
                                }();
                                var statearr_19494_19522 = state_19475__$1;
                                statearr_19494_19522[2] = null;
                                statearr_19494_19522[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_19476 === 12) {
                                  var inst_19432 = state_19475[8];
                                  var inst_19451 = cljs.core.vec.call(null, inst_19432);
                                  var state_19475__$1 = state_19475;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19475__$1, 14, out, inst_19451)
                                }else {
                                  if(state_val_19476 === 13) {
                                    var inst_19458 = state_19475[2];
                                    var state_19475__$1 = state_19475;
                                    var statearr_19495_19523 = state_19475__$1;
                                    statearr_19495_19523[2] = inst_19458;
                                    statearr_19495_19523[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_19476 === 14) {
                                      var inst_19440 = state_19475[10];
                                      var inst_19436 = state_19475[9];
                                      var inst_19453 = state_19475[2];
                                      var inst_19454 = new Array(0);
                                      var inst_19455 = inst_19454.push(inst_19436);
                                      var inst_19432 = inst_19454;
                                      var inst_19433 = inst_19440;
                                      var state_19475__$1 = function() {
                                        var statearr_19496 = state_19475;
                                        statearr_19496[13] = inst_19453;
                                        statearr_19496[14] = inst_19455;
                                        statearr_19496[7] = inst_19433;
                                        statearr_19496[8] = inst_19432;
                                        return statearr_19496
                                      }();
                                      var statearr_19497_19524 = state_19475__$1;
                                      statearr_19497_19524[2] = null;
                                      statearr_19497_19524[1] = 2;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_19476 === 15) {
                                        var inst_19432 = state_19475[8];
                                        var inst_19463 = cljs.core.vec.call(null, inst_19432);
                                        var state_19475__$1 = state_19475;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19475__$1, 18, out, inst_19463)
                                      }else {
                                        if(state_val_19476 === 16) {
                                          var state_19475__$1 = state_19475;
                                          var statearr_19498_19525 = state_19475__$1;
                                          statearr_19498_19525[2] = null;
                                          statearr_19498_19525[1] = 17;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_19476 === 17) {
                                            var inst_19468 = state_19475[2];
                                            var inst_19469 = cljs.core.async.close_BANG_.call(null, out);
                                            var state_19475__$1 = function() {
                                              var statearr_19499 = state_19475;
                                              statearr_19499[15] = inst_19468;
                                              return statearr_19499
                                            }();
                                            var statearr_19500_19526 = state_19475__$1;
                                            statearr_19500_19526[2] = inst_19469;
                                            statearr_19500_19526[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_19476 === 18) {
                                              var inst_19465 = state_19475[2];
                                              var state_19475__$1 = state_19475;
                                              var statearr_19501_19527 = state_19475__$1;
                                              statearr_19501_19527[2] = inst_19465;
                                              statearr_19501_19527[1] = 17;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              return null
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6929__auto__) {
          return function() {
            var state_machine__6930__auto__ = null;
            var state_machine__6930__auto____0 = function() {
              var statearr_19505 = new Array(16);
              statearr_19505[0] = state_machine__6930__auto__;
              statearr_19505[1] = 1;
              return statearr_19505
            };
            var state_machine__6930__auto____1 = function(state_19475) {
              while(true) {
                var ret_value__6931__auto__ = function() {
                  try {
                    while(true) {
                      var result__6932__auto__ = switch__6929__auto__.call(null, state_19475);
                      if(cljs.core.keyword_identical_QMARK_.call(null, result__6932__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue
                      }else {
                        return result__6932__auto__
                      }
                      break
                    }
                  }catch(e19506) {
                    if(e19506 instanceof Object) {
                      var ex__6933__auto__ = e19506;
                      var statearr_19507_19528 = state_19475;
                      statearr_19507_19528[5] = ex__6933__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19475);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e19506;
                      }else {
                        return null
                      }
                    }
                  }
                }();
                if(cljs.core.keyword_identical_QMARK_.call(null, ret_value__6931__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__19529 = state_19475;
                  state_19475 = G__19529;
                  continue
                }else {
                  return ret_value__6931__auto__
                }
                break
              }
            };
            state_machine__6930__auto__ = function(state_19475) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6930__auto____0.call(this);
                case 1:
                  return state_machine__6930__auto____1.call(this, state_19475)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6930__auto____0;
            state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6930__auto____1;
            return state_machine__6930__auto__
          }()
        }(switch__6929__auto__)
      }();
      var state__7001__auto__ = function() {
        var statearr_19508 = f__7000__auto__.call(null);
        statearr_19508[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6999__auto___19509;
        return statearr_19508
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7001__auto__)
    });
    return out
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by
}();
goog.provide("phil_and_amber.page_templates");
goog.require("cljs.core");
goog.require("dommy.core");
goog.require("phil_and_amber.routing");
goog.require("phil_and_amber.routing");
goog.require("dommy.core");
phil_and_amber.page_templates.title_template = function title_template() {
  return cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "div", "div", 1014003715), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "id", "id", 1013907597), "title"], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "div", "div", 1014003715), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "id", "id", 1013907597), "phil"], true), "Phil"], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "div", 
  "div", 1014003715), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "id", "id", 1013907597), "and"], true), "\x26"], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "div", "div", 1014003715), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "id", "id", 1013907597), "amber"], true), "Amber"], true)], true)
};
phil_and_amber.page_templates.menu_template = function menu_template(languages, target) {
  return cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "div", "div", 1014003715), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "id", "id", 1013907597), "menu"], true), cljs.core.map.call(null, function(display_name) {
    return cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "div.language", "div.language", 765036423), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "id", "id", 1013907597), display_name], true), display_name], true)
  }, languages)], true)
};
var target_content_id_15789 = "contents";
phil_and_amber.page_templates.app_template = function app_template() {
  var dom15786 = document.createElement("span");
  dom15786.appendChild(dommy.template.__GT_node_like.call(null, phil_and_amber.page_templates.title_template.call(null)));
  dom15786.appendChild(dommy.template.__GT_node_like.call(null, phil_and_amber.page_templates.menu_template.call(null, cljs.core.keys.call(null, phil_and_amber.routing.lang_routing), target_content_id_15789)));
  dom15786.appendChild(function() {
    var dom15787 = document.createElement("div");
    if(cljs.core.truth_(target_content_id_15789)) {
      dom15787.setAttribute("id", target_content_id_15789)
    }else {
    }
    dom15787.appendChild(document.createTextNode("welcome"));
    return dom15787
  }());
  dom15786.appendChild(function() {
    var dom15788 = document.createElement("div");
    if("footer") {
      dom15788.setAttribute("id", "footer")
    }else {
    }
    return dom15788
  }());
  return dom15786
};
goog.provide("phil_and_amber.app");
goog.require("cljs.core");
goog.require("phil_and_amber.routing");
goog.require("phil_and_amber.page_templates");
goog.require("dommy.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("phil_and_amber.routing");
goog.require("phil_and_amber.page_templates");
goog.require("dommy.core");
phil_and_amber.app.app_loop = function app_loop(chan) {
  var c__6999__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__7000__auto__ = function() {
      var switch__6929__auto__ = function(state_15583) {
        var state_val_15584 = state_15583[1];
        if(state_val_15584 === 4) {
          var inst_15574 = state_15583[2];
          var inst_15575 = inst_15574.target;
          var inst_15576 = inst_15575.id;
          var inst_15577 = cljs.core.get.call(null, phil_and_amber.routing.lang_routing, inst_15576);
          var inst_15578 = inst_15577.call(null);
          var state_15583__$1 = function() {
            var statearr_15585 = state_15583;
            statearr_15585[7] = inst_15578;
            return statearr_15585
          }();
          var statearr_15586_15595 = state_15583__$1;
          statearr_15586_15595[2] = null;
          statearr_15586_15595[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_15584 === 3) {
            var inst_15581 = state_15583[2];
            var state_15583__$1 = state_15583;
            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15583__$1, inst_15581)
          }else {
            if(state_val_15584 === 2) {
              var state_15583__$1 = state_15583;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15583__$1, 4, chan)
            }else {
              if(state_val_15584 === 1) {
                var state_15583__$1 = state_15583;
                var statearr_15587_15596 = state_15583__$1;
                statearr_15587_15596[2] = null;
                statearr_15587_15596[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                return null
              }
            }
          }
        }
      };
      return function(switch__6929__auto__) {
        return function() {
          var state_machine__6930__auto__ = null;
          var state_machine__6930__auto____0 = function() {
            var statearr_15591 = new Array(8);
            statearr_15591[0] = state_machine__6930__auto__;
            statearr_15591[1] = 1;
            return statearr_15591
          };
          var state_machine__6930__auto____1 = function(state_15583) {
            while(true) {
              var ret_value__6931__auto__ = function() {
                try {
                  while(true) {
                    var result__6932__auto__ = switch__6929__auto__.call(null, state_15583);
                    if(cljs.core.keyword_identical_QMARK_.call(null, result__6932__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue
                    }else {
                      return result__6932__auto__
                    }
                    break
                  }
                }catch(e15592) {
                  if(e15592 instanceof Object) {
                    var ex__6933__auto__ = e15592;
                    var statearr_15593_15597 = state_15583;
                    statearr_15593_15597[5] = ex__6933__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15583);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e15592;
                    }else {
                      return null
                    }
                  }
                }
              }();
              if(cljs.core.keyword_identical_QMARK_.call(null, ret_value__6931__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__15598 = state_15583;
                state_15583 = G__15598;
                continue
              }else {
                return ret_value__6931__auto__
              }
              break
            }
          };
          state_machine__6930__auto__ = function(state_15583) {
            switch(arguments.length) {
              case 0:
                return state_machine__6930__auto____0.call(this);
              case 1:
                return state_machine__6930__auto____1.call(this, state_15583)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6930__auto____0;
          state_machine__6930__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6930__auto____1;
          return state_machine__6930__auto__
        }()
      }(switch__6929__auto__)
    }();
    var state__7001__auto__ = function() {
      var statearr_15594 = f__7000__auto__.call(null);
      statearr_15594[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6999__auto__;
      return statearr_15594
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7001__auto__)
  });
  return c__6999__auto__
};
phil_and_amber.app.render_app = function render_app(container) {
  var nav_chan = cljs.core.async.chan.call(null);
  dommy.core.replace_contents_BANG_.call(null, container, phil_and_amber.page_templates.app_template.call(null));
  phil_and_amber.app.app_loop.call(null, nav_chan);
  var seq__15604 = cljs.core.seq.call(null, dommy.utils.__GT_Array.call(null, document.getElementsByClassName("language")));
  var chunk__15605 = null;
  var count__15606 = 0;
  var i__15607 = 0;
  while(true) {
    if(i__15607 < count__15606) {
      var item = cljs.core._nth.call(null, chunk__15605, i__15607);
      dommy.core.listen_BANG_.call(null, item, new cljs.core.Keyword(null, "click", "click", 1108654330), function(seq__15604, chunk__15605, count__15606, i__15607, item) {
        return function(p1__15599_SHARP_) {
          return cljs.core.async.put_BANG_.call(null, nav_chan, p1__15599_SHARP_)
        }
      }(seq__15604, chunk__15605, count__15606, i__15607, item));
      var G__15608 = seq__15604;
      var G__15609 = chunk__15605;
      var G__15610 = count__15606;
      var G__15611 = i__15607 + 1;
      seq__15604 = G__15608;
      chunk__15605 = G__15609;
      count__15606 = G__15610;
      i__15607 = G__15611;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__15604);
      if(temp__4092__auto__) {
        var seq__15604__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__15604__$1)) {
          var c__3607__auto__ = cljs.core.chunk_first.call(null, seq__15604__$1);
          var G__15612 = cljs.core.chunk_rest.call(null, seq__15604__$1);
          var G__15613 = c__3607__auto__;
          var G__15614 = cljs.core.count.call(null, c__3607__auto__);
          var G__15615 = 0;
          seq__15604 = G__15612;
          chunk__15605 = G__15613;
          count__15606 = G__15614;
          i__15607 = G__15615;
          continue
        }else {
          var item = cljs.core.first.call(null, seq__15604__$1);
          dommy.core.listen_BANG_.call(null, item, new cljs.core.Keyword(null, "click", "click", 1108654330), function(seq__15604, chunk__15605, count__15606, i__15607, item, seq__15604__$1, temp__4092__auto__) {
            return function(p1__15599_SHARP_) {
              return cljs.core.async.put_BANG_.call(null, nav_chan, p1__15599_SHARP_)
            }
          }(seq__15604, chunk__15605, count__15606, i__15607, item, seq__15604__$1, temp__4092__auto__));
          var G__15616 = cljs.core.next.call(null, seq__15604__$1);
          var G__15617 = null;
          var G__15618 = 0;
          var G__15619 = 0;
          seq__15604 = G__15616;
          chunk__15605 = G__15617;
          count__15606 = G__15618;
          i__15607 = G__15619;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
goog.provide("phil_and_amber.core");
goog.require("cljs.core");
goog.require("dommy.core");
goog.require("phil_and_amber.app");
goog.require("phil_and_amber.app");
goog.require("dommy.core");
phil_and_amber.core.init_when_page_ready = function init_when_page_ready() {
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = document;
    if(cljs.core.truth_(and__3941__auto__)) {
      return document.getElementById
    }else {
      return and__3941__auto__
    }
  }())) {
    return phil_and_amber.app.render_app.call(null, document.getElementById("body"))
  }else {
    return null
  }
};
window.onload = phil_and_amber.core.init_when_page_ready;
